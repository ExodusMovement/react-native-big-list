{"version":3,"sources":["lib/utils.js","lib/BigListItem.js","lib/BigListPlaceholder.js","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.js","lib/BigList.js","lib/index.js","src/lists/components/Block.jsx","src/lists/ColumnsList.jsx","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/SectionList.jsx","src/Home.jsx","App.js","lib/assets/placeholder.png"],"names":["isNumeric","num","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSizeThreshold","batchSize","blockStart","blockEnd","Math","ceil","max","forEachObjIndexed","fn","obj","keyList","Object","keys","idx","length","key","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","SPACER","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","BigListItem","children","height","width","View","propTypes","PropTypes","oneOfType","arrayOf","node","string","number","object","array","defaultProps","memo","BigListPlaceholder","component","image","Animated","Image","source","require","position","resizeMode","overflow","backfaceVisibility","flex","value","BigListItemRecycler","items","this","pendingItems","forEach","item","type","section","index","itemsForType","itemKey","lastKey","defineProperty","enumerable","configurable","writable","BigListProcessor","scrollView","sections","headerHeight","footerHeight","sectionHeaderHeight","itemHeight","sectionFooterHeight","insetTop","insetBottom","numColumns","uniform","Number","top","bottom","prevItems","recycler","counter","spacerHeight","isFullRow","isVisibleBelow","isVisible","force","fullRow","prevHeight","itemsArray","get","pushSpacer","pushItem","getSpacerHeight","itemsCounter","reduce","totalHeight","i","getHeaderHeight","rows","getSectionHeaderHeight","initialSpacerHeight","prevSection","splice","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetIndex","animated","foundIndex","uniformHeight","scrollTo","x","y","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","viewStyle","props","undefined","zIndex","transform","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","bind","autobind","initialScrollIndex","createRef","state","getListState","viewableItems","options","stateProps","data","getSectionLengths","getItemLayout","getItemOffset","current","getNativeScrollRef","sectionLengths","flashScrollIndicators","processor","getListProcessor","scrollToPosition","itemIndex","sectionIndex","scrollToIndex","hasSections","JSON","stringify","map","a","indexOf","offset","scrollRef","onViewableItemsChanged","currentItems","getItem","isViewable","Boolean","changed","prevIndex","event","nativeEvent","contentInset","layoutMeasurement","min","contentOffset","contentSize","nextState","setState","onScroll","onEndReached","onEndReachedThreshold","distanceFromEnd","endReached","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","total","sectionLength","columnWrapperStyle","placeholder","placeholderComponent","placeholderImage","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderHeader","renderFooter","renderSectionHeader","renderItem","renderSectionFooter","renderEmpty","isEmpty","sectionPositions","shift","stickySectionHeadersEnabled","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderScrollViewWrapper","actionSheetScrollRef","onRefresh","refreshing","wrapper","val","handleScroll","listener","useNativeDriver","refreshControl","RefreshControl","contentContainerStyle","flexDirection","flexWrap","maxWidth","overwriteProps","ref","onMomentumScrollEnd","onScrollEndDrag","scrollViewProps","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","left","right","bool","elementType","element","func","keyboardDismissMode","keyboardShouldPersistTaps","removeClippedSubviews","isRequired","scrollEventThrottle","styles","StyleSheet","create","block","justifyContent","padding","Block","SectionList","useState","numberColumns","setNumberColumns","SafeAreaView","container","KeyboardAvoidingView","compare","parseInt","title","description","icon","TextInput","label","String","keyboardType","onChangeText","Subheading","StatusBar","CompareList","id","header","FlatList","keyExtractor","paddingTop","p","console","log","Appbar","Content","headerContent","subtitle","elevation","alignItems","containerBottom","marginBottom","row","paddingHorizontal","paddingVertical","Home","useTheme","colors","background","surface","checked","setChecked","setInsetBottom","backgroundColor","paddingBottom","Header","RadioButton","Group","onValueChange","newValue","TouchableRipple","onPress","Paragraph","pointerEvents","Android","App","module","exports"],"mappings":"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","file":"static/js/app.b9c464bf.chunk.js","sourcesContent":["import React from \"react\";\n/**\n * Is numeric.\n * @param {any} num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n/**\n * Process block.\n * @param {number} containerHeight\n * @param {number} scrollTop\n * @param {number|null|undefined} batchSizeThreshold\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = ({\n  containerHeight,\n  scrollTop,\n  batchSizeThreshold = 1,\n}) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n\n  const batchSize = Math.ceil(\n    containerHeight * Math.max(0.5, batchSizeThreshold)\n  );\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return {\n    batchSize,\n    blockStart,\n    blockEnd,\n  };\n};\n/**\n * For each object indexed.\n * @param {function} fn\n * @param {object} obj\n * @returns {*}\n */\nexport const forEachObjIndexed = (fn, obj) => {\n  const keyList = Object.keys(obj);\n  let idx = 0;\n\n  while (idx < keyList.length) {\n    const key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n};\n/**\n * Autobind context to class methods.\n * @param {object} self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n\n    if (exclude) {\n      return !exclude.some(match);\n    }\n\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object)\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n\n  return self;\n};\n/**\n * Merge styles\n * @param {array|object|null|undefined} style\n * @param {array|object} defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle = {}) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n\n  return style;\n};\n/**\n * Get element from component.\n * @param {React.node} Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null\n    ? /*#__PURE__*/ React.isValidElement(Component)\n      ? Component\n      : /*#__PURE__*/ React.createElement(Component, null)\n    : null;\n};\n//# sourceMappingURL=utils.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport { mergeViewStyle } from \"./utils\";\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n};\n/**\n * List item.\n * @param {React.node} children\n * @param {array|object|null|undefined} style\n * @param {number} height\n * @param {number} width\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListItem = ({ children, style, height, width = \"100%\" }) => {\n  return /*#__PURE__*/ React.createElement(\n    View,\n    {\n      style: mergeViewStyle(style, {\n        height,\n        width,\n      }),\n    },\n    children\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\nexport default /*#__PURE__*/ memo(BigListItem);\n//# sourceMappingURL=BigListItem.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, Image } from \"react-native\";\nimport { createElement, mergeViewStyle } from \"./utils\";\n\nconst BigListPlaceholder = ({\n  component,\n  image,\n  style,\n  height,\n  width = \"100%\",\n}) => {\n  const bgStyles = {\n    position: \"absolute\",\n    resizeMode: \"repeat\",\n    overflow: \"visible\",\n    backfaceVisibility: \"visible\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  };\n  return /*#__PURE__*/ React.createElement(\n    Animated.View,\n    {\n      style: mergeViewStyle(style, {\n        height,\n        width,\n      }),\n    },\n    createElement(component) ||\n      /*#__PURE__*/ React.createElement(Image, {\n        source: image || require(\"./assets/placeholder.png\"),\n        style: bgStyles,\n      })\n  );\n};\n\nBigListPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nBigListPlaceholder.defaultProps = {\n  width: \"100%\",\n};\nexport default /*#__PURE__*/ memo(BigListPlaceholder);\n//# sourceMappingURL=BigListPlaceholder.js.map\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nimport { BigListItemType } from \"./BigListItem\";\nimport { forEachObjIndexed } from \"./utils\";\n\nclass BigListItemRecycler {\n  /**\n   * Constructor.\n   * @param {object[]} items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, index } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${index}`] = item;\n    });\n  }\n  /**\n   * Items for type.\n   * @param {any} type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n  /**\n   * Get item.\n   * @param {any} type\n   * @param {number} position\n   * @param {number} height\n   * @param {int} section\n   * @param {int} index\n   * @returns {{section: int, position: number, index: number, type: any, key: number, height: int}}\n   */\n  get({ type, position, height, section = 0, index = 0 }) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${index}`;\n    let item = items[itemKey];\n\n    if (item == null) {\n      item = {\n        type,\n        key: -1,\n        position,\n        height,\n        section,\n        index,\n      };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n\n    return item;\n  }\n  /**\n   * Fill.\n   */\n  fill() {\n    forEachObjIndexed((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      forEachObjIndexed(({ key }) => {\n        const item = pendingItems[index];\n\n        if (item == null) {\n          return false;\n        }\n\n        item.key = key;\n        index++;\n      }, items);\n\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n\n      pendingItems.length = 0;\n    }, BigListItemType);\n  }\n}\n\n_defineProperty(BigListItemRecycler, \"lastKey\", 0);\n\nexport default BigListItemRecycler;\n//# sourceMappingURL=BigListItemRecycler.js.map\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\n\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param {ScrollView} scrollView\n   * @param {array[]|object|null|undefined} sections\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|function|null|undefined} insetTop\n   * @param {number|function|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   */\n  constructor({\n    scrollView,\n    sections,\n    headerHeight,\n    footerHeight,\n    sectionHeaderHeight,\n    itemHeight,\n    sectionFooterHeight,\n    insetTop,\n    insetBottom,\n    numColumns,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeaderHeight = sectionHeaderHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n    this.numColumns = numColumns;\n  }\n\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, index) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, index);\n  }\n\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeaderHeight(section) {\n    const { sectionHeaderHeight } = this;\n    return isNumeric(sectionHeaderHeight)\n      ? Number(sectionHeaderHeight)\n      : sectionHeaderHeight(section);\n  }\n\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n\n  /**\n   * Process list items.\n   * @param {number} top\n   * @param {number} bottom\n   * @param {array} prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    const items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n\n    let position;\n    let counter = -1; // Counter of items per row pushed\n    let height = this.insetTop;\n    let spacerHeight = height;\n\n    /**\n     * The width of the row is the entire line.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isFullRow = (item) => {\n      // Only items can be rendered with column format, so all others are full row\n      return item.type !== BigListItemType.ITEM;\n    };\n\n    /**\n     * Is visible below.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (item) => {\n      const { height: itemHeight } = item;\n      counter = -1;\n      if (height > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Is the item visible.\n     * @param {object} item\n     * @param {bool} force\n     * @returns {boolean}\n     */\n    const isVisible = (item, force = false) => {\n      // Check section headers visibility below\n      if (item.type === BigListItemType.SECTION_HEADER) {\n        return isVisibleBelow(item);\n      }\n      // Dimensions\n      const { height: itemHeight } = item;\n      const fullRow = isFullRow(item);\n      const prevHeight = height;\n      // Increase or reset counter\n      counter = fullRow ? -1 : counter + 1;\n      if (fullRow || counter % this.numColumns === 0) {\n        height += itemHeight;\n      }\n      // Check if is visible\n      if (force || (height > top && prevHeight < bottom)) {\n        return true;\n      } else {\n        if (fullRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n        return false;\n      }\n    };\n\n    /**\n     * Get recycled views and push items.\n     * @param {object} itemsArray\n     */\n    const push = (...itemsArray) => {\n      itemsArray.forEach((item) => {\n        items.push(recycler.get(item));\n      });\n    };\n\n    /**\n     * Push spacer.\n     * @param {object} item\n     */\n    const pushSpacer = (item) => {\n      if (spacerHeight > 0) {\n        push({\n          type: BigListItemType.SPACER,\n          position: item.position - spacerHeight,\n          height: spacerHeight,\n          section: item.section,\n          index: item.index,\n        });\n        spacerHeight = 0;\n      }\n    };\n\n    /**\n     * Push the item when is visible.\n     * @param {object} item\n     * @param {bool} force\n     */\n    const pushItem = (item, force = false) => {\n      if (isVisible(item, force)) {\n        pushSpacer(item);\n        push(item);\n      }\n    };\n\n    /**\n     * Calculate spacer height.\n     */\n    const getSpacerHeight = () => {\n      let itemsCounter = -1;\n      return items.reduce((totalHeight, item, i) => {\n        if (i !== items.length - 1) {\n          const fullRow = isFullRow(item);\n          itemsCounter = fullRow ? 0 : itemsCounter + 1;\n          if (fullRow || itemsCounter % this.numColumns === 0) {\n            return totalHeight + item.height;\n          }\n        }\n        return totalHeight;\n      }, 0);\n    };\n\n    // Header\n    const headerHeight = this.getHeaderHeight();\n    if (headerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.HEADER,\n          position: position,\n          height: headerHeight,\n        },\n        true,\n      );\n    }\n    // Sections\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n      if (rows === 0) {\n        continue;\n      }\n      // Section Header\n      const sectionHeaderHeight = this.getSectionHeaderHeight(section);\n      position = height;\n      height += sectionHeaderHeight;\n      if (\n        section > 1 &&\n        items.length > 0 &&\n        items[items.length - 1].type === BigListItemType.SECTION_HEADER\n      ) {\n        // Top Spacer\n        const initialSpacerHeight = getSpacerHeight();\n        const prevSection = items[items.length - 1];\n        items.splice(0, items.length);\n        push(\n          {\n            type: BigListItemType.HEADER,\n            position: position,\n            height: headerHeight,\n          },\n          {\n            type: BigListItemType.SPACER,\n            position: 0,\n            height: initialSpacerHeight - headerHeight,\n            section: prevSection.section,\n            index: 0,\n          },\n          prevSection,\n        );\n      }\n      pushItem({\n        type: BigListItemType.SECTION_HEADER,\n        position: position,\n        height: sectionHeaderHeight,\n        section: section,\n      });\n      // Items\n      let itemHeight = this.getItemHeight(section);\n      for (let index = 0; index < rows; index++) {\n        if (!this.uniform) {\n          itemHeight = this.getItemHeight(section, index);\n        }\n        position = height;\n        pushItem({\n          type: BigListItemType.ITEM,\n          position: position,\n          height: itemHeight,\n          section: section,\n          index: index,\n        });\n      }\n      // Section Footer\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n      if (sectionFooterHeight > 0) {\n        position = height;\n        pushItem({\n          type: BigListItemType.SECTION_FOOTER,\n          position: position,\n          height: sectionFooterHeight,\n          section: section,\n        });\n      }\n    }\n    // Footer\n    const footerHeight = this.getFooterHeight();\n    if (footerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.FOOTER,\n          position: position,\n          height: footerHeight,\n        },\n        true,\n      );\n    }\n    // Bottom Spacer\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n    if (spacerHeight > 0) {\n      push({\n        type: BigListItemType.SPACER,\n        position: height - spacerHeight,\n        height: spacerHeight,\n        section: sections.length,\n      });\n    }\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n\n  /**\n   * Scroll to position.\n   * @param {int} targetSection\n   * @param {int} targetIndex\n   * @param {boolean} animated\n   */\n  scrollToPosition(targetSection, targetIndex, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundIndex = false;\n    while (section <= targetSection) {\n      const rows = Math.ceil(sections[section] / this.numColumns);\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n      scrollTop += this.getSectionHeaderHeight(section);\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n        if (section === targetSection) {\n          scrollTop += uniformHeight * Math.ceil(targetIndex / this.numColumns);\n          foundIndex = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && index < targetIndex)\n          ) {\n            scrollTop += this.getItemHeight(\n              section,\n              Math.ceil(index / this.numColumns),\n            );\n          } else if (section === targetSection && index === targetIndex) {\n            foundIndex = true;\n            break;\n          }\n        }\n      }\n      if (!foundIndex) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n      section += 1;\n    }\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeaderHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n/**\n * List section.\n * @param {number} position\n * @param {number} height\n * @param {number} nextSectionPosition\n * @param {Animated.Value} scrollTopValue\n * @param {React.node} children\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    /*#__PURE__*/ React.isValidElement(child) &&\n    /*#__PURE__*/ React.cloneElement(child, {\n      style: {\n        flex: 1,\n      },\n    });\n  const viewStyle = [\n    /*#__PURE__*/ React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      width: \"100%\",\n      transform: [\n        {\n          translateY,\n        },\n      ],\n    },\n  ];\n  return /*#__PURE__*/ React.createElement(\n    Animated.View,\n    {\n      style: viewStyle,\n    },\n    fillChildren\n  );\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\nexport default /*#__PURE__*/ memo(BigListSection);\n//# sourceMappingURL=BigListSection.js.map\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListPlaceholder from \"./BigListPlaceholder\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, mergeViewStyle, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this); // Initialize properties and state\n\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue =\n      this.props.initialScrollIndex || new Animated.Value(0);\n    this.scrollView = /*#__PURE__*/ React.createRef();\n    this.state = this.getListState();\n    this.viewableItems = [];\n  }\n  /**\n   * Get list state.\n   * @param {array} data\n   * @param {array[]|object|null|undefined} sections\n   * @param {array} prevItems\n   * @param {number|null} batchSizeThreshold\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|null|undefined} insetTop\n   * @param {number|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   * @param {number|null|undefined} batchSize\n   * @param {number|null|undefined} blockStart\n   * @param {number|null|undefined} blockEnd\n   * @param {function|null|undefined} getItemLayout\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      sections,\n      batchSizeThreshold,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      itemHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n      getItemLayout,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems }\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || []\n      ),\n    };\n  }\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    const stateProps = props || this.props;\n    return this.constructor.getListState(\n      stateProps,\n      options ||\n        processBlock({\n          containerHeight: this.containerHeight,\n          scrollTop: this.scrollTop,\n          batchSizeThreshold: stateProps.batchSizeThreshold,\n        })\n    );\n  }\n  /**\n   * Get sections item lengths.\n   * @param {array[]|object<string, object>|null|undefined} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n\n    return [data === null || data === void 0 ? void 0 : data.length];\n  }\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n  /**\n   * Get item height.\n   * @param {number} itemHeight\n   * @param {function|null|undefined} getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n\n    if (itemHeight) {\n      return itemHeight;\n    }\n\n    return null;\n  }\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n  /**\n   * Is item visible.\n   * @param {int} index\n   * @param {int} section\n   * @returns {boolean}\n   */\n  isVisible({ index, section = 0 }) {\n    const position = this.getItemOffset({\n      index,\n      section,\n    });\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n  /**\n   * Provides a reference to the underlying scroll component.\n   * @returns {ScrollView|null}\n   */\n  getNativeScrollRef() {\n    return this.scrollView.current;\n  }\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n\n    return null;\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  flashScrollIndicators() {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      scrollView.flashScrollIndicators();\n    }\n  }\n  /**\n   * Scrolls to a given x, y offset, either immediately, with a smooth animation.\n   * @param {int} x\n   * @param {int} y\n   * @param {bool} animated\n   */\n  scrollTo({ x = 0, y = 0, animated = true }) {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated,\n      });\n    }\n  }\n  /**\n   * Scroll to index.\n   * @param {int} index\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToIndex({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n\n    return false;\n  }\n  /**\n   * Alias to scrollToIndex with polyfill for SectionList.\n   * @see scrollToIndex\n   * @param {int} itemIndex\n   * @param {int} sectionIndex\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToLocation({ itemIndex, sectionIndex, animated = true }) {\n    return this.scrollToIndex({\n      section: sectionIndex,\n      index: itemIndex,\n      animated,\n    });\n  }\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        })\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n\n    return this.scrollTo({\n      index,\n      animated,\n    });\n  }\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    const scrollRef = this.getNativeScrollRef();\n\n    if (scrollRef != null) {\n      scrollRef.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({\n      section: 0,\n      index: 0,\n      animated,\n    });\n  }\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n\n    return this.scrollTo({\n      section,\n      index,\n      animated,\n    });\n  }\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({\n      index: 0,\n      section,\n      animated,\n    });\n  }\n  /**\n   * On viewable items changed.\n   */\n  onViewableItemsChanged() {\n    const { onViewableItemsChanged } = this.props;\n\n    if (onViewableItemsChanged) {\n      const prevItems = this.viewableItems;\n      const currentItems = this.state.items\n        .map(({ type, section, index, key }) => {\n          if (type === BigListItemType.ITEM) {\n            return {\n              item: this.getItem({\n                section,\n                index,\n              }),\n              key: key,\n              index: (section + 1) * index,\n              isViewable: this.isVisible({\n                section,\n                index,\n              }),\n            };\n          }\n\n          return false;\n        })\n        .filter(Boolean);\n      this.viewableItems = currentItems.filter((item) => item.isViewable);\n      const changed = prevItems\n        .filter(\n          ({ index: prevIndex }) =>\n            !this.viewableItems.some(\n              ({ index: nextIndex }) => nextIndex === prevIndex\n            )\n        )\n        .map((item) => {\n          item.isViewable = this.isVisible({\n            section: item.section,\n            index: item.index,\n          });\n          return item;\n        });\n\n      if (changed.length > 0) {\n        onViewableItemsChanged({\n          viewableItems: this.viewableItems,\n          changed,\n        });\n      }\n    }\n  }\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold, onViewableItemsChanged } =\n      this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight\n    );\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    if (onViewableItemsChanged) {\n      this.onViewableItemsChanged();\n    }\n\n    const { onScroll, onEndReached, onEndReachedThreshold } = this.props;\n\n    if (onScroll != null) {\n      onScroll(event);\n    }\n\n    const { layoutMeasurement, contentOffset, contentSize } = nativeEvent;\n    const distanceFromEnd =\n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n\n    if (distanceFromEnd <= layoutMeasurement.height * onEndReachedThreshold) {\n      if (!this.endReached) {\n        this.endReached = true;\n        onEndReached &&\n          onEndReached({\n            distanceFromEnd,\n          });\n      }\n    } else {\n      this.endReached = false;\n    }\n  }\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    const { onLayout } = this.props;\n\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, sectionLength) => {\n      return total + sectionLength;\n    }, 0);\n    return length === 0;\n  }\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n  /**\n   * Get item scroll view offset.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItemOffset({ section = 0, index }) {\n    const {\n      insetTop,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      itemHeight,\n      numColumns,\n    } = this.props;\n    const headers = this.hasSections() ? section + 1 : 1;\n    const roundedIndex =\n      index % numColumns ? index - (index % numColumns) + numColumns : index;\n    return (\n      insetTop +\n      headerHeight +\n      headers * sectionHeaderHeight +\n      section * sectionFooterHeight +\n      roundedIndex * itemHeight\n    );\n  }\n  /**\n   * Get item data.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItem({ index, section = 0 }) {\n    if (this.hasSections()) {\n      return this.props.sections[section][index];\n    } else {\n      return this.props.data[index];\n    }\n  }\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      numColumns,\n      columnWrapperStyle,\n      placeholder,\n      placeholderComponent,\n      placeholderImage,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state;\n\n    if (this.isEmpty()) {\n      if (ListEmptyComponent != null) {\n        return createElement(ListHeaderComponent);\n      }\n\n      if (renderEmpty != null) {\n        return renderEmpty();\n      }\n    }\n\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION_HEADER) {\n        sectionPositions.push(position);\n      }\n    });\n    const children = [];\n    items.forEach(({ type, key, position, height, section, index }) => {\n      let child;\n      let style;\n      const itemKey = key || position; // Fallback fix\n\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListHeaderComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = mergeViewStyle(\n              {\n                width: \"100%\",\n              },\n              ListHeaderComponentStyle\n            );\n          } else {\n            child = renderHeader();\n            style = {\n              width: \"100%\",\n            };\n          }\n\n        // falls through\n\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = mergeViewStyle(\n                {\n                  width: \"100%\",\n                },\n                ListFooterComponentStyle\n              );\n            } else {\n              child = renderFooter();\n              style = {\n                width: \"100%\",\n              };\n            }\n          }\n\n        // falls through\n\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            child = renderSectionFooter(section);\n            style = {\n              width: \"100%\",\n            };\n          }\n\n        // falls through\n\n        case BigListItemType.ITEM:\n          if (type === BigListItemType.ITEM) {\n            const item = this.getItem({\n              section,\n              index,\n            });\n            style = numColumns > 1 ? columnWrapperStyle || {} : {};\n\n            if (this.hasSections()) {\n              child = renderItem({\n                item,\n                section,\n                index,\n              });\n            } else {\n              child = renderItem({\n                item,\n                index,\n              });\n            }\n          }\n\n          if (child != null) {\n            children.push(\n              /*#__PURE__*/ React.createElement(\n                BigListItem,\n                {\n                  key: itemKey,\n                  height: height,\n                  width: 100 / numColumns + \"%\",\n                  style: style,\n                },\n                child\n              )\n            );\n          }\n\n          break;\n\n        case BigListItemType.SPACER:\n          children.push(\n            placeholder\n              ? /*#__PURE__*/ React.createElement(BigListPlaceholder, {\n                  key: itemKey,\n                  height: height,\n                  image: placeholderImage,\n                  component: placeholderComponent,\n                })\n              : /*#__PURE__*/ React.createElement(BigListItem, {\n                  key: itemKey,\n                  height: height,\n                })\n          );\n          break;\n\n        case BigListItemType.SECTION_HEADER:\n          sectionPositions.shift();\n          child = renderSectionHeader(section);\n\n          if (child != null) {\n            children.push(\n              /*#__PURE__*/ React.createElement(\n                BigListSection,\n                {\n                  key: itemKey,\n                  height: height,\n                  position: position,\n                  nextSectionPosition: sectionPositions[0],\n                  scrollTopValue: this.scrollTopValue,\n                },\n                child\n              )\n            );\n          }\n\n          break;\n      }\n    });\n    return children;\n  }\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    const { stickySectionHeadersEnabled } = this.props;\n    const scrollView = this.getNativeScrollRef();\n\n    if (\n      stickySectionHeadersEnabled &&\n      scrollView != null &&\n      Platform.OS !== \"web\"\n    ) {\n      // Disabled on web\n      this.scrollTopValueAttachment = Animated.attachNativeEvent(\n        scrollView,\n        \"onScroll\",\n        [\n          {\n            nativeEvent: {\n              contentOffset: {\n                y: this.scrollTopValue,\n              },\n            },\n          },\n        ]\n      );\n    }\n  }\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.initialScrollIndex !== this.props.initialScrollIndex) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      placeholder,\n      placeholderImage,\n      placeholderComponent,\n      sections,\n      initialScrollIndex,\n      columnWrapperStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      stickySectionHeadersEnabled,\n      onEndReached,\n      onEndReachedThreshold,\n      onRefresh,\n      refreshing,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      ...props\n    } = this.props;\n\n    const wrapper = renderScrollViewWrapper || ((val) => val);\n\n    const handleScroll =\n      stickySectionHeadersEnabled && Platform.OS === \"web\"\n        ? Animated.event(\n            [\n              {\n                nativeEvent: {\n                  contentOffset: {\n                    y: this.scrollTopValue,\n                  },\n                },\n              },\n            ],\n            {\n              listener: (event) => this.onScroll(event),\n              useNativeDriver: false,\n            }\n          )\n        : this.onScroll;\n    const defaultProps = {\n      refreshControl:\n        onRefresh && !this.props.refreshControl\n          ? /*#__PURE__*/ React.createElement(RefreshControl, {\n              refreshing: refreshing,\n              onRefresh: onRefresh,\n            })\n          : null,\n      contentContainerStyle: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        maxWidth: \"100%\",\n      },\n    };\n    const overwriteProps = {\n      ref: (ref) => {\n        this.scrollView.current = ref;\n\n        if (actionSheetScrollRef) {\n          actionSheetScrollRef.current = ref;\n        }\n      },\n      onScroll: handleScroll,\n      onLayout: this.onLayout,\n      onMomentumScrollEnd: this.onScrollEnd,\n      onScrollEndDrag: this.onScrollEnd,\n    };\n    const scrollViewProps = { ...defaultProps, ...props, ...overwriteProps }; // Content container style merge\n\n    scrollViewProps.contentContainerStyle = mergeViewStyle(\n      props.contentContainerStyle,\n      defaultProps.contentContainerStyle\n    );\n    const scrollView = wrapper(\n      /*#__PURE__*/ React.createElement(\n        ScrollView,\n        scrollViewProps,\n        this.renderItems()\n      )\n    );\n    return /*#__PURE__*/ React.createElement(\n      View,\n      {\n        style: {\n          flex: 1,\n          maxHeight: Platform.select({\n            web: \"100vh\",\n            default: \"100%\",\n          }),\n        },\n      },\n      scrollView,\n      renderAccessory != null ? renderAccessory(this) : null\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  batchSizeThreshold: PropTypes.number,\n  bottom: PropTypes.number,\n  numColumns: PropTypes.number,\n  columnWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  placeholder: PropTypes.bool,\n  placeholderImage: PropTypes.any,\n  placeholderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onLayout: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  onViewableItemsChanged: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSectionHeader: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  refreshing: PropTypes.bool,\n  scrollEventThrottle: PropTypes.number,\n  initialScrollIndex: PropTypes.number,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeaderHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n  stickySectionHeadersEnabled: PropTypes.bool,\n};\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  refreshing: false,\n  batchSizeThreshold: 1,\n  numColumns: 1,\n  placeholder: Platform.select({\n    web: false,\n    default: false,\n    /* TODO: default disabled until a solution for different screen sizes is found */\n  }),\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSectionHeader: () => null,\n  renderSectionFooter: () => null,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeaderHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  stickySectionHeadersEnabled: true,\n  removeClippedSubviews: false,\n  scrollEventThrottle: Platform.OS === \"web\" ? 5 : 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: {\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n  },\n  onEndReachedThreshold: 0,\n};\nexport default BigList;\n//# sourceMappingURL=BigList.js.map\n","import BigList from \"./BigList\";\nexport default BigList;\n//# sourceMappingURL=index.js.map\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","import React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading, TextInput } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const [numberColumns, setNumberColumns] = useState(3);\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <View>\n      <TextInput\n        label=\"Number of columns (max 10)\"\n        value={String(numberColumns)}\n        type=\"numeric\"\n        keyboardType=\"numeric\"\n        onChangeText={(value) => {\n          const num = parseInt(value, 10) || \"\";\n          setNumberColumns(num);\n        }}\n      />\n    </View>\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            numColumns={Math.min(\n              Math.max(parseInt(numberColumns, 10) || 1, 1),\n              10,\n            )}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item\n      title=\"BigList\"\n      description=\"react-native-big-list\"\n      style={styles.header}\n    />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            onViewableItemsChanged={(p) => console.log(p)}\n            renderFooter={renderFooter}\n            onEndReached={() => console.log(\"ciao\")}\n            onEndReachedThreshold={0.5}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSectionHeader = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeaderHeight={75}\n          renderSectionHeader={renderSectionHeader}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, View } from \"react-native\";\nimport {\n  Appbar,\n  Paragraph,\n  RadioButton,\n  TouchableRipple,\n  useTheme,\n} from \"react-native-paper\";\n\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport SectionList from \"./lists/SectionList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [checked, setChecked] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + 205,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <View\n        style={[styles.containerBottom, { backgroundColor: surface }]}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <RadioButton.Group\n          onValueChange={(newValue) => setChecked(newValue)}\n          value={checked}\n        >\n          <TouchableRipple onPress={() => setChecked(\"standard\")}>\n            <View style={styles.row}>\n              <Paragraph>Standard List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"standard\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"columns\")}>\n            <View style={styles.row}>\n              <Paragraph>Columns List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"columns\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"section\")}>\n            <View style={styles.row}>\n              <Paragraph>Section List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"section\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"compare\")}>\n            <View style={styles.row}>\n              <Paragraph>Compare with FlatList</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"compare\" />\n              </View>\n            </View>\n          </TouchableRipple>\n        </RadioButton.Group>\n      </View>\n      {checked === \"standard\" ? (\n        <List />\n      ) : checked === \"columns\" ? (\n        <ColumnsList />\n      ) : checked === \"section\" ? (\n        <SectionList />\n      ) : checked === \"compare\" ? (\n        <CompareList />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n  row: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <Home />\n    </PaperProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.b393bdf6.png\";"],"sourceRoot":""}