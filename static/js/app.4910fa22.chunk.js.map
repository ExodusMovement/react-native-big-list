{"version":3,"sources":["lib/utils.js","lib/BigListItem.jsx","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.jsx","lib/BigList.jsx","lib/index.js","src/lists/components/Block.jsx","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/SectionList.jsx","src/Home.jsx","App.js"],"names":["isNumeric","num","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSize","blockStart","blockEnd","Math","ceil","forEachObjIndexed","fn","obj","keyList","Object","keys","idx","length","key","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","ITEM","SPACER","HEADER","SECTION","ROW","FOOTER","SECTION_FOOTER","BigListItem","height","children","View","propTypes","PropTypes","oneOfType","arrayOf","node","number","object","array","memo","BigListItemRecycler","items","this","pendingItems","forEach","item","type","section","row","itemsForType","position","itemKey","index","lastKey","BigListProcessor","headerHeight","footerHeight","sectionHeight","itemHeight","sectionFooterHeight","sections","insetTop","insetBottom","scrollView","uniform","Number","top","bottom","prevItems","spacerHeight","recycler","isVisible","prevHeight","isVisibleBelow","get","getHeaderHeight","rows","getSectionHeight","spacerheight","reduce","totalHeight","i","prevSection","spacer","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetRow","animated","foundRow","uniformHeight","scrollTo","x","y","max","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","flex","props","undefined","zIndex","transform","Animated","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","value","bind","autobind","createRef","state","getListState","options","data","getSectionLengths","getItemLayout","indexOrSection","hasSections","current","getScrollView","sectionLengths","processor","getListProcessor","scrollToPosition","JSON","stringify","map","a","indexOf","offset","event","nativeEvent","contentInset","layoutMeasurement","min","contentOffset","contentSize","nextState","setState","onScroll","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","total","rowLength","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderHeader","renderFooter","renderSection","renderItem","renderSectionFooter","renderEmpty","isEmpty","sectionPositions","getItem","shift","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderActionSheetScrollViewWrapper","actionSheetScrollRef","wrapper","val","scrollViewProps","ref","onMomentumScrollEnd","onScrollEndDrag","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","left","right","string","func","keyboardDismissMode","keyboardShouldPersistTaps","elementType","element","removeClippedSubviews","bool","isRequired","scrollEventThrottle","defaultProps","styles","StyleSheet","create","block","justifyContent","padding","Block","CompareList","title","id","description","icon","Subheading","SafeAreaView","container","KeyboardAvoidingView","compare","header","FlatList","keyExtractor","String","StatusBar","flexDirection","paddingTop","SectionList","Appbar","Content","headerContent","subtitle","elevation","alignItems","containerBottom","width","marginBottom","paddingHorizontal","paddingVertical","Home","useTheme","colors","background","surface","useState","checked","setChecked","setInsetBottom","backgroundColor","paddingBottom","Header","RadioButton","Group","onValueChange","newValue","TouchableRipple","onPress","Paragraph","pointerEvents","Android","App"],"mappings":"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","file":"static/js/app.4910fa22.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * Is numeric.\n * @param num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n\n/**\n * Process block.\n * @param containerHeight\n * @param scrollTop\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = (containerHeight, scrollTop) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n  const batchSize = Math.ceil(containerHeight / 2);\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return { batchSize, blockStart, blockEnd };\n};\n\n/**\n * For each object indexed.\n * @param fn\n * @param obj\n * @returns {*}\n */\nexport const forEachObjIndexed = (fn, obj) => {\n  const keyList = Object.keys(obj);\n  let idx = 0;\n  while (idx < keyList.length) {\n    const key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n};\n\n/**\n * Autobind context to class methods.\n * @param self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n    if (exclude) {\n      return !exclude.some(match);\n    }\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object),\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n  return self;\n};\n\n/**\n * Merge styles\n * @param style\n * @param defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n  return style;\n};\n\n/**\n * Get element from component.\n * @param Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null ? (\n    React.isValidElement(Component) ? (\n      Component\n    ) : (\n      <Component />\n    )\n  ) : null;\n};\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\n\nimport { mergeViewStyle } from \"./utils\";\n\nexport const BigListItemType = {\n  ITEM: \"item\",\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION: \"section\",\n  ROW: \"row\",\n  FOOTER: \"footer\",\n  SECTION_FOOTER: \"section_footer\",\n};\n\nconst BigListItem = ({ height, style, children }) => (\n  <View style={mergeViewStyle(style, { height })}>{children}</View>\n);\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nexport default memo(BigListItem);\n","import { BigListItemType } from \"./BigListItem\";\nimport { forEachObjIndexed } from \"./utils\";\n\nclass BigListItemRecycler {\n  static lastKey = 0;\n  /**\n   * Constructor.\n   * @param items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, row } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${row}`] = item;\n    });\n  }\n\n  /**\n   * Items for type.\n   * @param type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n\n  /**\n   * Get item.\n   * @param type\n   * @param position\n   * @param height\n   * @param section\n   * @param row\n   * @returns {{section: number, position, row: number, type, key: number, height}}\n   */\n  get(type, position, height, section = 0, row = 0) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${row}`;\n    let item = items[itemKey];\n    if (item == null) {\n      item = { type, key: -1, position, height, section, row };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n    return item;\n  }\n\n  /**\n   * Fill.\n   */\n  fill() {\n    forEachObjIndexed((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      forEachObjIndexed(({ key }) => {\n        const item = pendingItems[index];\n        if (item == null) {\n          return false;\n        }\n        item.key = key;\n        index++;\n      }, items);\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n      pendingItems.length = 0;\n    }, BigListItemType);\n  }\n}\nexport default BigListItemRecycler;\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\n\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param headerHeight\n   * @param footerHeight\n   * @param sectionHeight\n   * @param itemHeight\n   * @param sectionFooterHeight\n   * @param sections\n   * @param insetTop\n   * @param insetBottom\n   * @param scrollView\n   */\n  constructor({\n    headerHeight,\n    footerHeight,\n    sectionHeight,\n    itemHeight,\n    sectionFooterHeight,\n    sections,\n    insetTop,\n    insetBottom,\n    scrollView,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeight = sectionHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n  }\n\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, row) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, row);\n  }\n\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeight(section) {\n    const { sectionHeight } = this;\n    return isNumeric(sectionHeight)\n      ? Number(sectionHeight)\n      : sectionHeight(section);\n  }\n\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n\n  /**\n   * Process list items.\n   * @param top\n   * @param bottom\n   * @param prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    let height = this.insetTop;\n    let spacerHeight = height;\n    let items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n\n    /**\n     * Is item visible.\n     * @param itemHeight\n     * @returns {boolean}\n     */\n    const isVisible = (itemHeight) => {\n      const prevHeight = height;\n      height += itemHeight;\n      if (height < top || prevHeight > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Is visible below.\n     * @param itemHeight\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (itemHeight) => {\n      if (height > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Push item.\n     * @param item\n     */\n    const push = (item) => {\n      if (spacerHeight > 0) {\n        items.push(\n          recycler.get(\n            BigListItemType.SPACER,\n            item.position - spacerHeight,\n            spacerHeight,\n            item.section,\n            item.row,\n          ),\n        );\n        spacerHeight = 0;\n      }\n      items.push(item);\n    };\n    let position;\n    const headerHeight = this.getHeaderHeight();\n    if (headerHeight > 0) {\n      position = height;\n      if (isVisible(headerHeight)) {\n        push(recycler.get(BigListItemType.HEADER, position, headerHeight));\n      }\n    }\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n      if (rows === 0) {\n        continue;\n      }\n      const sectionHeight = this.getSectionHeight(section);\n      position = height;\n      height += sectionHeight;\n      if (\n        section > 1 &&\n        items.length > 0 &&\n        items[items.length - 1].type === BigListItemType.SECTION\n      ) {\n        const spacerheight = items.reduce((totalHeight, item, i) => {\n          if (i !== items.length - 1) {\n            return totalHeight + item.height;\n          }\n          return totalHeight;\n        }, 0);\n        const prevSection = items[items.length - 1];\n        const spacer = recycler.get(\n          BigListItemType.SPACER,\n          0,\n          spacerheight,\n          prevSection.section,\n          0,\n        );\n        items = [spacer, prevSection];\n      }\n      if (isVisibleBelow(sectionHeight)) {\n        push(\n          recycler.get(\n            BigListItemType.SECTION,\n            position,\n            sectionHeight,\n            section,\n          ),\n        );\n      }\n      if (this.uniform) {\n        const itemHeight = this.getItemHeight(section);\n        for (let row = 0; row < rows; row++) {\n          position = height;\n          if (isVisible(itemHeight)) {\n            push(\n              recycler.get(\n                BigListItemType.ROW,\n                position,\n                itemHeight,\n                section,\n                row,\n              ),\n            );\n          }\n        }\n      } else {\n        for (let row = 0; row < rows; row++) {\n          const itemHeight = this.getItemHeight(section, row);\n          position = height;\n          if (isVisible(itemHeight)) {\n            push(\n              recycler.get(\n                BigListItemType.ROW,\n                position,\n                itemHeight,\n                section,\n                row,\n              ),\n            );\n          }\n        }\n      }\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n      if (sectionFooterHeight > 0) {\n        position = height;\n        if (isVisible(sectionFooterHeight)) {\n          push(\n            recycler.get(\n              BigListItemType.SECTION_FOOTER,\n              position,\n              sectionFooterHeight,\n              section,\n            ),\n          );\n        }\n      }\n    }\n    const footerHeight = this.getFooterHeight();\n    if (footerHeight > 0) {\n      position = height;\n      if (isVisible(footerHeight)) {\n        push(recycler.get(BigListItemType.FOOTER, position, footerHeight));\n      }\n    }\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n    if (spacerHeight > 0) {\n      items.push(\n        recycler.get(\n          BigListItemType.SPACER,\n          height - spacerHeight,\n          spacerHeight,\n          sections.length,\n        ),\n      );\n    }\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n\n  /**\n   * Scroll to position.\n   * @param targetSection\n   * @param targetRow\n   * @param animated\n   */\n  scrollToPosition(targetSection, targetRow, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundRow = false;\n    while (section <= targetSection) {\n      const rows = sections[section];\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n      scrollTop += this.getSectionHeight(section);\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n        if (section === targetSection) {\n          scrollTop += uniformHeight * targetRow;\n          foundRow = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let row = 0; row < rows; row++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && row < targetRow)\n          ) {\n            scrollTop += this.getItemHeight(section, row);\n          } else if (section === targetSection && row === targetRow) {\n            foundRow = true;\n            break;\n          }\n        }\n      }\n      if (!foundRow) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n      section += 1;\n    }\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    React.isValidElement(child) &&\n    React.cloneElement(child, {\n      style: { flex: 1 },\n    });\n  const style = [\n    React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      transform: [{ translateY }],\n    },\n  ];\n  return <Animated.View style={style}>{fillChildren}</Animated.View>;\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\n\nexport default memo(BigListSection);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, Platform, ScrollView, View } from \"react-native\";\n\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this);\n    // Initialize properties and state\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue = this.props.scrollTopValue || new Animated.Value(0);\n    this.scrollView = React.createRef();\n    this.state = this.getListState();\n  }\n\n  /**\n   * Get list state.\n   * @param data\n   * @param headerHeight\n   * @param footerHeight\n   * @param sectionHeight\n   * @param itemHeight\n   * @param getItemLayout\n   * @param sectionFooterHeight\n   * @param sections\n   * @param insetTop\n   * @param insetBottom\n   * @param batchSize\n   * @param blockStart\n   * @param blockEnd\n   * @param prevItems\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      headerHeight,\n      footerHeight,\n      sectionHeight,\n      itemHeight,\n      getItemLayout,\n      sectionFooterHeight,\n      sections,\n      insetTop,\n      insetBottom,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems },\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || [],\n      ),\n    };\n  }\n\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    return this.constructor.getListState(\n      props || this.props,\n      options || processBlock(this.containerHeight, this.scrollTop),\n    );\n  }\n\n  /**\n   * Get sections item lengths.\n   * @param {array} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n    return [data?.length];\n  }\n\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n\n  /**\n   * Get item height.\n   * @param itemHeight\n   * @param getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n    if (itemHeight) {\n      return itemHeight;\n    }\n    return null;\n  }\n\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n\n  /**\n   * Is item visible.\n   * @param {int} indexOrSection\n   * @param {int|null} row\n   * @returns {boolean}\n   */\n  isVisible(indexOrSection, row = null) {\n    let section = indexOrSection;\n    if (!this.hasSections()) {\n      row = section;\n      section = 1;\n    }\n    const position =\n      this.props.headerHeight +\n      section * this.props.sectionHeight +\n      row * this.props.itemHeight;\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n\n  /**\n   * Get Scroll View reference.\n   * @returns {ScrollView|null}\n   */\n  getScrollView() {\n    return this.scrollView.current;\n  }\n\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getScrollView();\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n    return null;\n  }\n\n  /**\n   * Scroll to.\n   * @param {int} section\n   * @param {int} index\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollTo({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n    return false;\n  }\n\n  /**\n   * Alias of scrollTo\n   * @see scrollTo\n   * @param {object} options\n   * @returns {bool}\n   */\n  scrollToIndex(options) {\n    return this.scrollTo(options);\n  }\n\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        }),\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n    return this.scrollTo({ index, animated });\n  }\n\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    if (this.scrollView.current != null) {\n      this.scrollView.current.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({ section: 0, index: 0, animated });\n  }\n\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n    return this.scrollTo({ section, index, animated });\n  }\n\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({ index: 0, section, animated });\n  }\n\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset } = this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight,\n    );\n    const nextState = processBlock(this.containerHeight, this.scrollTop);\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onScroll } = this.props;\n    if (onScroll != null) {\n      onScroll(event);\n    }\n  }\n\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock(this.containerHeight, this.scrollTop);\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onLayout } = this.props;\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, rowLength) => {\n      return total + rowLength;\n    }, 0);\n    return length === 0;\n  }\n\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n\n  /**\n   * Get item data.\n   * @param section\n   * @param row\n   * @returns {*}\n   */\n  getItem(section = 0, row) {\n    if (this.hasSections()) {\n      return this.props.sections[section][row];\n    } else {\n      return this.props.data[row];\n    }\n  }\n\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSection,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state;\n    if (this.isEmpty()) {\n      if (ListEmptyComponent != null) {\n        return createElement(ListHeaderComponent);\n      }\n      if (renderEmpty != null) {\n        return renderEmpty();\n      }\n    }\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION) {\n        sectionPositions.push(position);\n      }\n    });\n    const children = [];\n    items.forEach(({ type, key, position, height, section, row }) => {\n      let child;\n      let style;\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListFooterComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = ListHeaderComponentStyle;\n          } else {\n            child = renderHeader();\n          }\n        // falls through\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = ListFooterComponentStyle;\n            } else {\n              child = renderFooter();\n            }\n          }\n        // falls through\n        case BigListItemType.ROW:\n          if (type === BigListItemType.ROW) {\n            const item = this.getItem(section, row);\n            if (this.hasSections()) {\n              child = renderItem({ item, section, index: row });\n            } else {\n              child = renderItem({ item, index: row });\n            }\n          }\n        // falls through\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            child = renderSectionFooter(section);\n          }\n        // falls through\n        case BigListItemType.ITEM:\n          if (child != null) {\n            children.push(\n              <BigListItem key={key} height={height} style={style}>\n                {child}\n              </BigListItem>,\n            );\n          }\n          break;\n        case BigListItemType.SPACER: {\n          children.push(<BigListItem key={key} height={height} />);\n          break;\n        }\n        case BigListItemType.SECTION:\n          sectionPositions.shift();\n          child = renderSection(section);\n          if (child != null) {\n            children.push(\n              <BigListSection\n                key={key}\n                height={height}\n                position={position}\n                nextSectionPosition={sectionPositions[0]}\n                scrollTopValue={this.scrollTopValue}\n              >\n                {child}\n              </BigListSection>,\n            );\n          }\n          break;\n      }\n    });\n    return children;\n  }\n\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    if (this.scrollView.current != null) {\n      if (Platform.OS !== \"web\") {\n        // Disabled on web\n        this.scrollTopValueAttachment = Animated.attachNativeEvent(\n          this.scrollView.current,\n          \"onScroll\",\n          [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n        );\n      }\n    }\n  }\n\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.scrollTopValue !== this.props.scrollTopValue) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      sections,\n      scrollTopValue,\n      renderHeader,\n      renderFooter,\n      renderSection,\n      renderItem,\n      renderSectionFooter,\n      renderActionSheetScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      ...props\n    } = this.props;\n\n    const wrapper = renderActionSheetScrollViewWrapper || ((val) => val);\n    const scrollViewProps = {\n      ...props,\n      ...{\n        ref: (ref) => {\n          this.scrollView.current = ref;\n          if (actionSheetScrollRef) {\n            actionSheetScrollRef.current = ref;\n          }\n        },\n        onScroll: this.onScroll,\n        onLayout: this.onLayout,\n        onMomentumScrollEnd: this.onScrollEnd,\n        onScrollEndDrag: this.onScrollEnd,\n      },\n    };\n    const scrollView = wrapper(\n      <ScrollView {...scrollViewProps}>{this.renderItems()}</ScrollView>,\n    );\n    return (\n      <View\n        style={{\n          flex: 1,\n          maxHeight: Platform.select({ web: \"100vh\", default: \"100%\" }),\n        }}\n      >\n        {scrollView}\n        {renderAccessory != null ? renderAccessory(this) : null}\n      </View>\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  bottom: PropTypes.number,\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onLayout: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderActionSheetScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSection: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  scrollEventThrottle: PropTypes.number,\n  scrollTopValue: PropTypes.number,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n};\n\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSection: () => null,\n  renderSectionFooter: () => null,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  removeClippedSubviews: false,\n  scrollEventThrottle: 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: { top: 0, right: 0, left: 0, bottom: 0 },\n};\n\nexport default BigList;\n","import BigList from \"./BigList\";\n\nexport default BigList;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item\n      title=\"BigList\"\n      description=\"react-native-big-list\"\n      style={styles.header}\n    />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSection = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeight={75}\n          renderSection={renderSection}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, View } from \"react-native\";\nimport {\n  Appbar,\n  Paragraph,\n  RadioButton,\n  TouchableRipple,\n  useTheme,\n} from \"react-native-paper\";\n\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport SectionList from \"./lists/SectionList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [checked, setChecked] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + 155,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <View\n        style={[styles.containerBottom, { backgroundColor: surface }]}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <RadioButton.Group\n          onValueChange={(newValue) => setChecked(newValue)}\n          value={checked}\n        >\n          <TouchableRipple onPress={() => setChecked(\"standard\")}>\n            <View style={styles.row}>\n              <Paragraph>Standard List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"standard\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"section\")}>\n            <View style={styles.row}>\n              <Paragraph>Section List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"section\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"compare\")}>\n            <View style={styles.row}>\n              <Paragraph>Compare with FlatList</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"compare\" />\n              </View>\n            </View>\n          </TouchableRipple>\n        </RadioButton.Group>\n      </View>\n      {checked === \"standard\" ? (\n        <List />\n      ) : checked === \"section\" ? (\n        <SectionList />\n      ) : checked === \"compare\" ? (\n        <CompareList />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n  row: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <Home />\n    </PaperProvider>\n  );\n}\n"],"sourceRoot":""}