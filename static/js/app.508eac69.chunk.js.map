{"version":3,"sources":["lib/utils.js","lib/BigListItem.jsx","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.jsx","lib/BigList.jsx","lib/index.js","src/lists/components/Block.jsx","src/lists/ColumnsList.jsx","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/SectionList.jsx","src/Home.jsx","App.js"],"names":["isNumeric","num","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSizeThreshold","batchSize","blockStart","blockEnd","Math","ceil","max","forEachObjIndexed","fn","obj","keyList","Object","keys","idx","length","key","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","SPACER","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","BigListItem","children","height","width","View","propTypes","PropTypes","oneOfType","arrayOf","node","string","number","object","array","defaultProps","memo","BigListItemRecycler","items","this","pendingItems","forEach","item","type","section","index","itemsForType","position","itemKey","lastKey","BigListProcessor","headerHeight","footerHeight","sectionHeaderHeight","itemHeight","sectionFooterHeight","sections","insetTop","insetBottom","scrollView","numColumns","uniform","Number","top","bottom","prevItems","counter","spacerHeight","recycler","isVisible","singleRow","prevHeight","isVisibleBelow","recycleItem","get","calculateSpacerHeight","spacerCounter","reduce","totalHeight","i","getHeaderHeight","rows","getSectionHeaderHeight","initialSpacerHeight","prevSection","spacer","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetIndex","animated","foundIndex","uniformHeight","scrollTo","x","y","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","flex","viewStyle","props","undefined","zIndex","transform","Animated","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","value","bind","autobind","createRef","state","getListState","options","stateProps","data","getSectionLengths","getItemLayout","getItemOffset","current","getNativeScrollRef","sectionLengths","flashScrollIndicators","processor","getListProcessor","scrollToPosition","itemIndex","sectionIndex","scrollToIndex","hasSections","JSON","stringify","map","a","indexOf","offset","scrollRef","event","nativeEvent","contentInset","layoutMeasurement","min","contentOffset","contentSize","nextState","setState","onScroll","onEndReached","onEndReachedThreshold","distanceFromEnd","endReached","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","total","sectionLength","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderHeader","renderFooter","renderSectionHeader","renderItem","renderSectionFooter","renderEmpty","isEmpty","sectionPositions","getItem","shift","stickySectionHeadersEnabled","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderActionSheetScrollViewWrapper","actionSheetScrollRef","onRefresh","refreshing","wrapper","val","handleScroll","listener","useNativeDriver","refreshControl","RefreshControl","overwriteProps","ref","onMomentumScrollEnd","onScrollEndDrag","contentContainerStyle","flexDirection","flexWrap","maxWidth","scrollViewProps","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","left","right","func","keyboardDismissMode","keyboardShouldPersistTaps","elementType","element","removeClippedSubviews","bool","isRequired","scrollEventThrottle","styles","StyleSheet","create","block","justifyContent","padding","Block","SectionList","useState","numberColumns","setNumberColumns","SafeAreaView","container","KeyboardAvoidingView","compare","parseInt","title","description","icon","TextInput","label","keyboardType","onChangeText","Subheading","StatusBar","CompareList","id","header","FlatList","keyExtractor","String","paddingTop","Appbar","Content","headerContent","subtitle","elevation","alignItems","containerBottom","marginBottom","row","paddingHorizontal","paddingVertical","Home","useTheme","colors","background","surface","checked","setChecked","setInsetBottom","backgroundColor","paddingBottom","Header","RadioButton","Group","onValueChange","newValue","TouchableRipple","onPress","Paragraph","pointerEvents","Android","App"],"mappings":"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","file":"static/js/app.508eac69.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * Is numeric.\n * @param num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n\n/**\n * Process block.\n * @param containerHeight\n * @param scrollTop\n * @param batchSizeThreshold\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = ({\n  containerHeight,\n  scrollTop,\n  batchSizeThreshold = 1,\n}) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n  const batchSize = Math.ceil(\n    containerHeight * Math.max(0.5, batchSizeThreshold),\n  );\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return { batchSize, blockStart, blockEnd };\n};\n\n/**\n * For each object indexed.\n * @param fn\n * @param obj\n * @returns {*}\n */\nexport const forEachObjIndexed = (fn, obj) => {\n  const keyList = Object.keys(obj);\n  let idx = 0;\n  while (idx < keyList.length) {\n    const key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n};\n\n/**\n * Autobind context to class methods.\n * @param self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n    if (exclude) {\n      return !exclude.some(match);\n    }\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object),\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n  return self;\n};\n\n/**\n * Merge styles\n * @param style\n * @param defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n  return style;\n};\n\n/**\n * Get element from component.\n * @param Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null ? (\n    React.isValidElement(Component) ? (\n      Component\n    ) : (\n      <Component />\n    )\n  ) : null;\n};\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\n\nimport { mergeViewStyle } from \"./utils\";\n\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n};\n\nconst BigListItem = ({ children, style, height, width = \"100%\" }) => {\n  return (\n    <View\n      style={mergeViewStyle(style, {\n        height,\n        width,\n      })}\n    >\n      {children}\n    </View>\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\n\nexport default memo(BigListItem);\n","import { BigListItemType } from \"./BigListItem\";\nimport { forEachObjIndexed } from \"./utils\";\n\nclass BigListItemRecycler {\n  static lastKey = 0;\n  /**\n   * Constructor.\n   * @param items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, index } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${index}`] = item;\n    });\n  }\n\n  /**\n   * Items for type.\n   * @param type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n\n  /**\n   * Get item.\n   * @param type\n   * @param position\n   * @param height\n   * @param section\n   * @param index\n   * @returns {{section: number, position, index: number, type, key: number, height}}\n   */\n  get({ type, position, height, section = 0, index = 0 }) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${index}`;\n    let item = items[itemKey];\n    if (item == null) {\n      item = { type, key: -1, position, height, section, index };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n    return item;\n  }\n\n  /**\n   * Fill.\n   */\n  fill() {\n    forEachObjIndexed((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      forEachObjIndexed(({ key }) => {\n        const item = pendingItems[index];\n        if (item == null) {\n          return false;\n        }\n        item.key = key;\n        index++;\n      }, items);\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n      pendingItems.length = 0;\n    }, BigListItemType);\n  }\n}\nexport default BigListItemRecycler;\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\n\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param headerHeight\n   * @param footerHeight\n   * @param sectionHeaderHeight\n   * @param itemHeight\n   * @param sectionFooterHeight\n   * @param sections\n   * @param insetTop\n   * @param insetBottom\n   * @param scrollView\n   * @param numColumns\n   */\n  constructor({\n    headerHeight,\n    footerHeight,\n    sectionHeaderHeight,\n    itemHeight,\n    sectionFooterHeight,\n    sections,\n    insetTop,\n    insetBottom,\n    scrollView,\n    numColumns,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeaderHeight = sectionHeaderHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n    this.numColumns = numColumns;\n  }\n\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, index) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, index);\n  }\n\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeaderHeight(section) {\n    const { sectionHeaderHeight } = this;\n    return isNumeric(sectionHeaderHeight)\n      ? Number(sectionHeaderHeight)\n      : sectionHeaderHeight(section);\n  }\n\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n\n  /**\n   * Process list items.\n   * @param top\n   * @param bottom\n   * @param prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    let counter = -1;\n    let height = this.insetTop;\n    let spacerHeight = height;\n    let items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n\n    /**\n     * Is item visible.\n     * @param itemHeight\n     * @param singleRow\n     * @returns {boolean}\n     */\n    const isVisible = (itemHeight, singleRow = true) => {\n      if (singleRow) {\n        counter = -1;\n      } else {\n        counter++;\n      }\n      const prevHeight = height;\n      if (singleRow || counter % this.numColumns === 0) {\n        height += itemHeight;\n      }\n      if (height < top || prevHeight > bottom) {\n        if (singleRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Is visible below.\n     * @param itemHeight\n     * @param singleRow\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (itemHeight, singleRow = true) => {\n      if (height > bottom) {\n        if (singleRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Push item.\n     * @param item\n     */\n    const push = (item) => {\n      const recycleItem = recycler.get(item);\n      if (spacerHeight > 0) {\n        items.push(\n          recycler.get({\n            type: BigListItemType.SPACER,\n            position: item.position - spacerHeight,\n            height: spacerHeight,\n            section: item.section,\n            index: item.index,\n          }),\n        );\n        spacerHeight = 0;\n      }\n      items.push(recycleItem);\n    };\n\n    const calculateSpacerHeight = () => {\n      let spacerCounter = -1;\n      items.reduce((totalHeight, item, i) => {\n        if (i !== items.length - 1) {\n          const singleRow = item.type !== BigListItemType.ITEM;\n          if (singleRow) {\n            spacerCounter = 0;\n          } else {\n            spacerCounter++;\n          }\n          if (singleRow || spacerCounter % this.numColumns === 0) {\n            return totalHeight + item.height;\n          }\n        }\n        return totalHeight;\n      }, 0);\n    };\n\n    let position;\n    const headerHeight = this.getHeaderHeight();\n    if (headerHeight > 0) {\n      position = height;\n      if (isVisible(headerHeight, true)) {\n        push({\n          type: BigListItemType.HEADER,\n          position: position,\n          height: headerHeight,\n        });\n      }\n    }\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n      if (rows === 0) {\n        continue;\n      }\n      const sectionHeaderHeight = this.getSectionHeaderHeight(section);\n      position = height;\n      height += sectionHeaderHeight;\n      if (\n        section > 1 &&\n        items.length > 0 &&\n        items[items.length - 1].type === BigListItemType.SECTION_HEADER\n      ) {\n        const initialSpacerHeight = calculateSpacerHeight();\n        const prevSection = items[items.length - 1];\n        const spacer = recycler.get({\n          type: BigListItemType.SPACER,\n          position: 0,\n          height: initialSpacerHeight,\n          section: prevSection.section,\n          index: 0,\n        });\n        items = [spacer, prevSection];\n      }\n      if (isVisibleBelow(sectionHeaderHeight)) {\n        push({\n          type: BigListItemType.SECTION_HEADER,\n          position: position,\n          height: sectionHeaderHeight,\n          section: section,\n        });\n      }\n      if (this.uniform) {\n        const itemHeight = this.getItemHeight(section);\n        for (let index = 0; index < rows; index++) {\n          position = height;\n          if (isVisible(itemHeight, false)) {\n            push({\n              type: BigListItemType.ITEM,\n              position: position,\n              height: itemHeight,\n              section: section,\n              index: index,\n            });\n          }\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          const itemHeight = this.getItemHeight(section, index);\n          position = height;\n          if (isVisible(itemHeight, false)) {\n            push({\n              type: BigListItemType.ITEM,\n              position: position,\n              height: itemHeight,\n              section: section,\n              index: index,\n            });\n          }\n        }\n      }\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n      if (sectionFooterHeight > 0) {\n        position = height;\n        if (isVisible(sectionFooterHeight)) {\n          push({\n            type: BigListItemType.SECTION_FOOTER,\n            position: position,\n            height: sectionFooterHeight,\n            section: section,\n          });\n        }\n      }\n    }\n    const footerHeight = this.getFooterHeight();\n    if (footerHeight > 0) {\n      position = height;\n      if (isVisible(footerHeight)) {\n        push({\n          type: BigListItemType.FOOTER,\n          position: position,\n          height: footerHeight,\n        });\n      }\n    }\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n    if (spacerHeight > 0) {\n      items.push({\n        type: BigListItemType.SPACER,\n        position: height - spacerHeight,\n        height: spacerHeight,\n        section: sections.length,\n      });\n    }\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n\n  /**\n   * Scroll to position.\n   * @param targetSection\n   * @param targetIndex\n   * @param animated\n   */\n  scrollToPosition(targetSection, targetIndex, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundIndex = false;\n    while (section <= targetSection) {\n      const rows = Math.ceil(sections[section] / this.numColumns);\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n      scrollTop += this.getSectionHeaderHeight(section);\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n        if (section === targetSection) {\n          scrollTop += uniformHeight * Math.ceil(targetIndex / this.numColumns);\n          foundIndex = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && index < targetIndex)\n          ) {\n            scrollTop += this.getItemHeight(\n              section,\n              Math.ceil(index / this.numColumns),\n            );\n          } else if (section === targetSection && index === targetIndex) {\n            foundIndex = true;\n            break;\n          }\n        }\n      }\n      if (!foundIndex) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n      section += 1;\n    }\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeaderHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    React.isValidElement(child) &&\n    React.cloneElement(child, {\n      style: { flex: 1 },\n    });\n  const viewStyle = [\n    React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      width: \"100%\",\n      transform: [{ translateY }],\n    },\n  ];\n  return <Animated.View style={viewStyle}>{fillChildren}</Animated.View>;\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\n\nexport default memo(BigListSection);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n} from \"react-native\";\n\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, mergeViewStyle, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this);\n    // Initialize properties and state\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue = this.props.scrollTopValue || new Animated.Value(0);\n    this.scrollView = React.createRef();\n    this.state = this.getListState();\n  }\n\n  /**\n   * Get list state.\n   * @param data\n   * @param batchSizeThreshold\n   * @param headerHeight\n   * @param footerHeight\n   * @param sectionHeaderHeight\n   * @param itemHeight\n   * @param getItemLayout\n   * @param sectionFooterHeight\n   * @param sections\n   * @param insetTop\n   * @param insetBottom\n   * @param numColumns\n   * @param batchSize\n   * @param blockStart\n   * @param blockEnd\n   * @param prevItems\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      batchSizeThreshold,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      itemHeight,\n      getItemLayout,\n      sectionFooterHeight,\n      sections,\n      insetTop,\n      insetBottom,\n      numColumns,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems },\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || [],\n      ),\n    };\n  }\n\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    const stateProps = props || this.props;\n    return this.constructor.getListState(\n      stateProps,\n      options ||\n        processBlock({\n          containerHeight: this.containerHeight,\n          scrollTop: this.scrollTop,\n          batchSizeThreshold: stateProps.batchSizeThreshold,\n        }),\n    );\n  }\n\n  /**\n   * Get sections item lengths.\n   * @param {array} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n    return [data?.length];\n  }\n\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n\n  /**\n   * Get item height.\n   * @param itemHeight\n   * @param getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n    if (itemHeight) {\n      return itemHeight;\n    }\n    return null;\n  }\n\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n\n  /**\n   * Is item visible.\n   * @param {int} index\n   * @param {int} section\n   * @returns {boolean}\n   */\n  isVisible({ index, section = 0 }) {\n    const position = this.getItemOffset({ index, section });\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n\n  /**\n   * Provides a reference to the underlying scroll component.\n   * @returns {ScrollView|null}\n   */\n  getNativeScrollRef() {\n    return this.scrollView.current;\n  }\n\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n    return null;\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  flashScrollIndicators() {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      scrollView.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Scrolls to a given x, y offset, either immediately, with a smooth animation.\n   * @param {int} x\n   * @param {int} y\n   * @param {bool} animated\n   */\n  scrollTo({ x = 0, y = 0, animated = true }) {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated,\n      });\n    }\n  }\n\n  /**\n   * Scroll to index.\n   * @param {int} index\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToIndex({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n    return false;\n  }\n\n  /**\n   * Alias to scrollToIndex with polyfill for SectionList.\n   * @see scrollToIndex\n   * @param {int} itemIndex\n   * @param {int} sectionIndex\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToLocation({ itemIndex, sectionIndex, animated = true }) {\n    return this.scrollToIndex({\n      section: sectionIndex,\n      index: itemIndex,\n      animated,\n    });\n  }\n\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        }),\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n    return this.scrollTo({ index, animated });\n  }\n\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    const scrollRef = this.getNativeScrollRef();\n    if (scrollRef != null) {\n      scrollRef.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({ section: 0, index: 0, animated });\n  }\n\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n    return this.scrollTo({ section, index, animated });\n  }\n\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({ index: 0, section, animated });\n  }\n\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight,\n    );\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onScroll, onEndReached, onEndReachedThreshold } = this.props;\n    if (onScroll != null) {\n      onScroll(event);\n    }\n    const { layoutMeasurement, contentOffset, contentSize } = nativeEvent;\n    const distanceFromEnd =\n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n    if (distanceFromEnd <= layoutMeasurement.height * onEndReachedThreshold) {\n      if (!this.endReached) {\n        this.endReached = true;\n        onEndReached && onEndReached({ distanceFromEnd });\n      }\n    } else {\n      this.endReached = false;\n    }\n  }\n\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onLayout } = this.props;\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, sectionLength) => {\n      return total + sectionLength;\n    }, 0);\n    return length === 0;\n  }\n\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n\n  /**\n   * Get item scroll view offset.\n   * @param section\n   * @param index\n   * @returns {*}\n   */\n  getItemOffset({ section = 0, index }) {\n    const {\n      insetTop,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      itemHeight,\n    } = this.props;\n    const headers = this.hasSections() ? section + 1 : 1;\n    return (\n      insetTop +\n      headerHeight +\n      headers * sectionHeaderHeight +\n      section * sectionFooterHeight +\n      index * itemHeight\n    );\n  }\n\n  /**\n   * Get item data.\n   * @param section\n   * @param index\n   * @returns {*}\n   */\n  getItem({ index, section = 0 }) {\n    if (this.hasSections()) {\n      return this.props.sections[section][index];\n    } else {\n      return this.props.data[index];\n    }\n  }\n\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      numColumns,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state;\n    if (this.isEmpty()) {\n      if (ListEmptyComponent != null) {\n        return createElement(ListHeaderComponent);\n      }\n      if (renderEmpty != null) {\n        return renderEmpty();\n      }\n    }\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION_HEADER) {\n        sectionPositions.push(position);\n      }\n    });\n    const children = [];\n    items.forEach(({ type, key, position, height, section, index }) => {\n      let child;\n      let style;\n      const itemKey = key || position; // Fallback fix\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListHeaderComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = mergeViewStyle({ width: \"100%\" }, ListHeaderComponentStyle);\n          } else {\n            child = renderHeader();\n            style = { width: \"100%\" };\n          }\n        // falls through\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = mergeViewStyle(\n                { width: \"100%\" },\n                ListFooterComponentStyle,\n              );\n            } else {\n              child = renderFooter();\n              style = { width: \"100%\" };\n            }\n          }\n        // falls through\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            child = renderSectionFooter(section);\n            style = { width: \"100%\" };\n          }\n        // falls through\n        case BigListItemType.ITEM:\n          if (type === BigListItemType.ITEM) {\n            const item = this.getItem({ section, index });\n            if (this.hasSections()) {\n              child = renderItem({ item, section, index });\n            } else {\n              child = renderItem({ item, index });\n            }\n          }\n          if (child != null) {\n            children.push(\n              <BigListItem\n                key={itemKey}\n                height={height}\n                width={100 / numColumns + \"%\"}\n                style={style}\n              >\n                {child}\n              </BigListItem>,\n            );\n          }\n          break;\n        case BigListItemType.SPACER:\n          children.push(<BigListItem key={itemKey} height={height} />);\n          break;\n        case BigListItemType.SECTION_HEADER:\n          sectionPositions.shift();\n          child = renderSectionHeader(section);\n          if (child != null) {\n            children.push(\n              <BigListSection\n                key={itemKey}\n                height={height}\n                position={position}\n                nextSectionPosition={sectionPositions[0]}\n                scrollTopValue={this.scrollTopValue}\n              >\n                {child}\n              </BigListSection>,\n            );\n          }\n          break;\n      }\n    });\n    return children;\n  }\n\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    const { stickySectionHeadersEnabled } = this.props;\n    const scrollView = this.getNativeScrollRef();\n    if (\n      stickySectionHeadersEnabled &&\n      scrollView != null &&\n      Platform.OS !== \"web\"\n    ) {\n      // Disabled on web\n      this.scrollTopValueAttachment = Animated.attachNativeEvent(\n        scrollView,\n        \"onScroll\",\n        [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n      );\n    }\n  }\n\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.scrollTopValue !== this.props.scrollTopValue) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      sections,\n      scrollTopValue,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderActionSheetScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      stickySectionHeadersEnabled,\n      onEndReached,\n      onEndReachedThreshold,\n      onRefresh,\n      refreshing,\n      ...props\n    } = this.props;\n\n    const wrapper = renderActionSheetScrollViewWrapper || ((val) => val);\n    const handleScroll =\n      stickySectionHeadersEnabled && Platform.OS === \"web\"\n        ? Animated.event(\n            [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n            {\n              listener: (event) => this.onScroll(event),\n              useNativeDriver: false,\n            },\n          )\n        : this.onScroll;\n\n    const defaultProps = {\n      refreshControl:\n        onRefresh && !this.props.refreshControl ? (\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        ) : null,\n    };\n\n    const overwriteProps = {\n      ref: (ref) => {\n        this.scrollView.current = ref;\n        if (actionSheetScrollRef) {\n          actionSheetScrollRef.current = ref;\n        }\n      },\n      onScroll: handleScroll,\n      onLayout: this.onLayout,\n      onMomentumScrollEnd: this.onScrollEnd,\n      onScrollEndDrag: this.onScrollEnd,\n      contentContainerStyle: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        maxWidth: \"100%\",\n      },\n    };\n\n    const scrollViewProps = {\n      ...defaultProps,\n      ...props,\n      ...overwriteProps,\n    };\n    const scrollView = wrapper(\n      <ScrollView {...scrollViewProps}>{this.renderItems()}</ScrollView>,\n    );\n    return (\n      <View\n        style={{\n          flex: 1,\n          maxHeight: Platform.select({ web: \"100vh\", default: \"100%\" }),\n        }}\n      >\n        {scrollView}\n        {renderAccessory != null ? renderAccessory(this) : null}\n      </View>\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  batchSizeThreshold: PropTypes.number,\n  bottom: PropTypes.number,\n  numColumns: PropTypes.number,\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onLayout: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderActionSheetScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSectionHeader: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  refreshing: PropTypes.bool,\n  scrollEventThrottle: PropTypes.number,\n  scrollTopValue: PropTypes.number,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeaderHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n  stickySectionHeadersEnabled: PropTypes.bool,\n};\n\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  refreshing: false,\n  batchSizeThreshold: 1,\n  numColumns: 1,\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSectionHeader: () => null,\n  renderSectionFooter: () => null,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeaderHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  stickySectionHeadersEnabled: true,\n  removeClippedSubviews: false,\n  scrollEventThrottle: Platform.OS === \"web\" ? 5 : 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: { top: 0, right: 0, left: 0, bottom: 0 },\n  onEndReachedThreshold: 0,\n};\n\nexport default BigList;\n","import BigList from \"./BigList\";\n\nexport default BigList;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","import React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading, TextInput } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const [numberColumns, setNumberColumns] = useState(3);\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <View>\n      <TextInput\n        label=\"Number of columns (max 10)\"\n        value={numberColumns}\n        type=\"numeric\"\n        keyboardType=\"numeric\"\n        onChangeText={(value) => {\n          const num = parseInt(value, 10) || \"\";\n          setNumberColumns(num);\n        }}\n      />\n    </View>\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            numColumns={Math.min(\n              Math.max(parseInt(numberColumns, 10) || 1, 1),\n              10,\n            )}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport BigList from \"../../lib\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item\n      title=\"BigList\"\n      description=\"react-native-big-list\"\n      style={styles.header}\n    />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport BigList from \"../../lib\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSectionHeader = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeaderHeight={75}\n          renderSectionHeader={renderSectionHeader}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, View } from \"react-native\";\nimport {\n  Appbar,\n  Paragraph,\n  RadioButton,\n  TouchableRipple,\n  useTheme,\n} from \"react-native-paper\";\n\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport SectionList from \"./lists/SectionList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [checked, setChecked] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + 195,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <View\n        style={[styles.containerBottom, { backgroundColor: surface }]}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <RadioButton.Group\n          onValueChange={(newValue) => setChecked(newValue)}\n          value={checked}\n        >\n          <TouchableRipple onPress={() => setChecked(\"standard\")}>\n            <View style={styles.row}>\n              <Paragraph>Standard List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"standard\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"columns\")}>\n            <View style={styles.row}>\n              <Paragraph>Columns List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"columns\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"section\")}>\n            <View style={styles.row}>\n              <Paragraph>Section List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"section\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"compare\")}>\n            <View style={styles.row}>\n              <Paragraph>Compare with FlatList</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"compare\" />\n              </View>\n            </View>\n          </TouchableRipple>\n        </RadioButton.Group>\n      </View>\n      {checked === \"standard\" ? (\n        <List />\n      ) : checked === \"columns\" ? (\n        <ColumnsList />\n      ) : checked === \"section\" ? (\n        <SectionList />\n      ) : checked === \"compare\" ? (\n        <CompareList />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n  row: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <Home />\n    </PaperProvider>\n  );\n}\n"],"sourceRoot":""}