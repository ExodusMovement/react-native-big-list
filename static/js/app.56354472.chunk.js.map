{"version":3,"sources":["src/lists/components/Block.jsx","src/lists/ColumnsList.jsx","lib/utils.js","lib/BigListItem.js","lib/BigListPlaceholder.js","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.js","lib/BigList.js","lib/index.js","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/SectionList.jsx","src/Home.jsx","App.js","lib/assets/placeholder.png"],"names":["styles","StyleSheet","create","block","flex","justifyContent","padding","Block","props","View","style","SectionList","useState","numberColumns","setNumberColumns","SafeAreaView","container","KeyboardAvoidingView","compare","data","numColumns","Math","min","max","parseInt","itemHeight","renderItem","item","title","description","left","icon","renderEmpty","headerHeight","renderHeader","TextInput","label","value","String","type","keyboardType","onChangeText","num","footerHeight","renderFooter","Subheading","StatusBar","flexDirection","isNumeric","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSizeThreshold","batchSize","blockStart","blockEnd","ceil","forEachObjIndexed","fn","obj","keyList","Object","keys","idx","length","key","mergeViewStyle","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","SPACER","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","BigListItem","children","height","width","propTypes","PropTypes","oneOfType","arrayOf","node","string","number","object","array","defaultProps","memo","BigListPlaceholder","component","image","Animated","Image","source","require","position","resizeMode","overflow","backfaceVisibility","BigListItemRecycler","items","this","pendingItems","forEach","section","index","itemsForType","itemKey","lastKey","defineProperty","enumerable","configurable","writable","BigListProcessor","scrollView","sections","sectionHeaderHeight","sectionFooterHeight","insetTop","insetBottom","uniform","Number","top","bottom","prevItems","recycler","counter","spacerHeight","isFullRow","isVisibleBelow","isVisible","force","fullRow","prevHeight","itemsArray","get","pushSpacer","pushItem","getSpacerHeight","itemsCounter","reduce","totalHeight","i","getHeaderHeight","rows","getSectionHeaderHeight","initialSpacerHeight","prevSection","splice","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetIndex","animated","foundIndex","uniformHeight","scrollTo","x","y","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","viewStyle","undefined","zIndex","transform","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","bind","autobind","initialScrollIndex","createRef","state","getListState","viewableItems","options","stateProps","getSectionLengths","getItemLayout","getItemOffset","current","getNativeScrollRef","sectionLengths","flashScrollIndicators","processor","getListProcessor","scrollToPosition","itemIndex","sectionIndex","scrollToIndex","hasSections","JSON","stringify","map","a","indexOf","offset","scrollRef","onViewableItemsChanged","currentItems","getItem","isViewable","Boolean","changed","prevIndex","event","nativeEvent","contentInset","layoutMeasurement","contentOffset","contentSize","nextState","setState","onScroll","onEndReached","onEndReachedThreshold","distanceFromEnd","endReached","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","total","sectionLength","columnWrapperStyle","placeholder","placeholderComponent","placeholderImage","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderSectionHeader","renderSectionFooter","isEmpty","sectionPositions","shift","stickySectionHeadersEnabled","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderScrollViewWrapper","actionSheetScrollRef","onRefresh","refreshing","wrapper","val","handleScroll","listener","useNativeDriver","refreshControl","RefreshControl","contentContainerStyle","flexWrap","maxWidth","overwriteProps","ref","onMomentumScrollEnd","onScrollEndDrag","scrollViewProps","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","right","bool","elementType","element","func","keyboardDismissMode","keyboardShouldPersistTaps","removeClippedSubviews","isRequired","scrollEventThrottle","CompareList","id","header","FlatList","keyExtractor","paddingTop","p","console","log","Appbar","Content","headerContent","subtitle","elevation","alignItems","containerBottom","marginBottom","row","paddingHorizontal","paddingVertical","Home","useTheme","colors","background","surface","checked","setChecked","setInsetBottom","backgroundColor","paddingBottom","Header","RadioButton","Group","onValueChange","newValue","TouchableRipple","onPress","Paragraph","pointerEvents","Android","App","module","exports"],"mappings":"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","file":"static/js/app.56354472.chunk.js","sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","import React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport BigList from \"react-native-big-list\";\nimport { List, Subheading, TextInput } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const [numberColumns, setNumberColumns] = useState(3);\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <View>\n      <TextInput\n        label=\"Number of columns (max 10)\"\n        value={String(numberColumns)}\n        type=\"numeric\"\n        keyboardType=\"numeric\"\n        onChangeText={(value) => {\n          const num = parseInt(value, 10) || \"\";\n          setNumberColumns(num);\n        }}\n      />\n    </View>\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            numColumns={Math.min(\n              Math.max(parseInt(numberColumns, 10) || 1, 1),\n              10,\n            )}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\n/**\n * Is numeric.\n * @param {any} num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n/**\n * Process block.\n * @param {number} containerHeight\n * @param {number} scrollTop\n * @param {number|null|undefined} batchSizeThreshold\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = ({\n  containerHeight,\n  scrollTop,\n  batchSizeThreshold = 1,\n}) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n\n  const batchSize = Math.ceil(\n    containerHeight * Math.max(0.5, batchSizeThreshold)\n  );\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return {\n    batchSize,\n    blockStart,\n    blockEnd,\n  };\n};\n/**\n * For each object indexed.\n * @param {function} fn\n * @param {object} obj\n * @returns {*}\n */\nexport const forEachObjIndexed = (fn, obj) => {\n  const keyList = Object.keys(obj);\n  let idx = 0;\n\n  while (idx < keyList.length) {\n    const key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n};\n/**\n * Autobind context to class methods.\n * @param {object} self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n\n    if (exclude) {\n      return !exclude.some(match);\n    }\n\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object)\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n\n  return self;\n};\n/**\n * Merge styles\n * @param {array|object|null|undefined} style\n * @param {array|object} defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle = {}) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n\n  return style;\n};\n/**\n * Get element from component.\n * @param {React.node} Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null\n    ? /*#__PURE__*/ React.isValidElement(Component)\n      ? Component\n      : /*#__PURE__*/ React.createElement(Component, null)\n    : null;\n};\n//# sourceMappingURL=utils.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport { mergeViewStyle } from \"./utils\";\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n};\n/**\n * List item.\n * @param {React.node} children\n * @param {array|object|null|undefined} style\n * @param {number} height\n * @param {number} width\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListItem = ({ children, style, height, width = \"100%\" }) => {\n  return /*#__PURE__*/ React.createElement(\n    View,\n    {\n      style: mergeViewStyle(style, {\n        height,\n        width,\n      }),\n    },\n    children\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\nexport default /*#__PURE__*/ memo(BigListItem);\n//# sourceMappingURL=BigListItem.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, Image } from \"react-native\";\nimport { createElement, mergeViewStyle } from \"./utils\";\n\nconst BigListPlaceholder = ({\n  component,\n  image,\n  style,\n  height,\n  width = \"100%\",\n}) => {\n  const bgStyles = {\n    position: \"absolute\",\n    resizeMode: \"repeat\",\n    overflow: \"visible\",\n    backfaceVisibility: \"visible\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  };\n  return /*#__PURE__*/ React.createElement(\n    Animated.View,\n    {\n      style: mergeViewStyle(style, {\n        height,\n        width,\n      }),\n    },\n    createElement(component) ||\n      /*#__PURE__*/ React.createElement(Image, {\n        source: image || require(\"./assets/placeholder.png\"),\n        style: bgStyles,\n      })\n  );\n};\n\nBigListPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nBigListPlaceholder.defaultProps = {\n  width: \"100%\",\n};\nexport default /*#__PURE__*/ memo(BigListPlaceholder);\n//# sourceMappingURL=BigListPlaceholder.js.map\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nimport { BigListItemType } from \"./BigListItem\";\nimport { forEachObjIndexed } from \"./utils\";\n\nclass BigListItemRecycler {\n  /**\n   * Constructor.\n   * @param {object[]} items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, index } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${index}`] = item;\n    });\n  }\n  /**\n   * Items for type.\n   * @param {any} type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n  /**\n   * Get item.\n   * @param {any} type\n   * @param {number} position\n   * @param {number} height\n   * @param {int} section\n   * @param {int} index\n   * @returns {{section: int, position: number, index: number, type: any, key: number, height: int}}\n   */\n  get({ type, position, height, section = 0, index = 0 }) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${index}`;\n    let item = items[itemKey];\n\n    if (item == null) {\n      item = {\n        type,\n        key: -1,\n        position,\n        height,\n        section,\n        index,\n      };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n\n    return item;\n  }\n  /**\n   * Fill.\n   */\n  fill() {\n    forEachObjIndexed((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      forEachObjIndexed(({ key }) => {\n        const item = pendingItems[index];\n\n        if (item == null) {\n          return false;\n        }\n\n        item.key = key;\n        index++;\n      }, items);\n\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n\n      pendingItems.length = 0;\n    }, BigListItemType);\n  }\n}\n\n_defineProperty(BigListItemRecycler, \"lastKey\", 0);\n\nexport default BigListItemRecycler;\n//# sourceMappingURL=BigListItemRecycler.js.map\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param {ScrollView} scrollView\n   * @param {array[]|object|null|undefined} sections\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|function|null|undefined} insetTop\n   * @param {number|function|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   */\n  constructor({\n    scrollView,\n    sections,\n    headerHeight,\n    footerHeight,\n    sectionHeaderHeight,\n    itemHeight,\n    sectionFooterHeight,\n    insetTop,\n    insetBottom,\n    numColumns,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeaderHeight = sectionHeaderHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n    this.numColumns = numColumns;\n  }\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, index) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, index);\n  }\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeaderHeight(section) {\n    const { sectionHeaderHeight } = this;\n    return isNumeric(sectionHeaderHeight)\n      ? Number(sectionHeaderHeight)\n      : sectionHeaderHeight(section);\n  }\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n  /**\n   * Process list items.\n   * @param {number} top\n   * @param {number} bottom\n   * @param {array} prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    const items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n    let position;\n    let counter = -1; // Counter of items per row pushed\n\n    let height = this.insetTop;\n    let spacerHeight = height;\n    /**\n     * The width of the row is the entire line.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isFullRow = (item) => {\n      // Only items can be rendered with column format, so all others are full row\n      return item.type !== BigListItemType.ITEM;\n    };\n    /**\n     * Is visible below.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (item) => {\n      const { height: itemHeight } = item;\n      counter = -1;\n\n      if (height > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n    /**\n     * Is the item visible.\n     * @param {object} item\n     * @param {bool} force\n     * @returns {boolean}\n     */\n    const isVisible = (item, force = false) => {\n      // Check section headers visibility below\n      if (item.type === BigListItemType.SECTION_HEADER) {\n        return isVisibleBelow(item);\n      } // Dimensions\n\n      const { height: itemHeight } = item;\n      const fullRow = isFullRow(item);\n      const prevHeight = height; // Increase or reset counter\n\n      counter = fullRow ? -1 : counter + 1;\n\n      if (fullRow || counter % this.numColumns === 0) {\n        height += itemHeight;\n      } // Check if is visible\n\n      if (force || (height > top && prevHeight < bottom)) {\n        return true;\n      } else {\n        if (fullRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n\n        return false;\n      }\n    };\n    /**\n     * Get recycled views and push items.\n     * @param {object} itemsArray\n     */\n    const push = (...itemsArray) => {\n      itemsArray.forEach((item) => {\n        items.push(recycler.get(item));\n      });\n    };\n    /**\n     * Push spacer.\n     * @param {object} item\n     */\n    const pushSpacer = (item) => {\n      if (spacerHeight > 0) {\n        push({\n          type: BigListItemType.SPACER,\n          position: item.position - spacerHeight,\n          height: spacerHeight,\n          section: item.section,\n          index: item.index,\n        });\n        spacerHeight = 0;\n      }\n    };\n    /**\n     * Push the item when is visible.\n     * @param {object} item\n     * @param {bool} force\n     */\n    const pushItem = (item, force = false) => {\n      if (isVisible(item, force)) {\n        pushSpacer(item);\n        push(item);\n      }\n    };\n    /**\n     * Calculate spacer height.\n     */\n    const getSpacerHeight = () => {\n      let itemsCounter = -1;\n      return items.reduce((totalHeight, item, i) => {\n        if (i !== items.length - 1) {\n          const fullRow = isFullRow(item);\n          itemsCounter = fullRow ? 0 : itemsCounter + 1;\n\n          if (fullRow || itemsCounter % this.numColumns === 0) {\n            return totalHeight + item.height;\n          }\n        }\n\n        return totalHeight;\n      }, 0);\n    }; // Header\n\n    const headerHeight = this.getHeaderHeight();\n\n    if (headerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.HEADER,\n          position: position,\n          height: headerHeight,\n        },\n        true\n      );\n    } // Sections\n\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n\n      if (rows === 0) {\n        continue;\n      } // Section Header\n\n      const sectionHeaderHeight = this.getSectionHeaderHeight(section);\n      position = height;\n      height += sectionHeaderHeight;\n\n      if (\n        section > 1 &&\n        items.length > 0 &&\n        items[items.length - 1].type === BigListItemType.SECTION_HEADER\n      ) {\n        // Top Spacer\n        const initialSpacerHeight = getSpacerHeight();\n        const prevSection = items[items.length - 1];\n        items.splice(0, items.length);\n        push(\n          {\n            type: BigListItemType.SPACER,\n            position: 0,\n            height: initialSpacerHeight,\n            section: prevSection.section,\n            index: 0,\n          },\n          prevSection\n        );\n      }\n\n      pushItem({\n        type: BigListItemType.SECTION_HEADER,\n        position: position,\n        height: sectionHeaderHeight,\n        section: section,\n      }); // Items\n\n      let itemHeight = this.getItemHeight(section);\n\n      for (let index = 0; index < rows; index++) {\n        if (!this.uniform) {\n          itemHeight = this.getItemHeight(section, index);\n        }\n\n        position = height;\n        pushItem({\n          type: BigListItemType.ITEM,\n          position: position,\n          height: itemHeight,\n          section: section,\n          index: index,\n        });\n      } // Section Footer\n\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n\n      if (sectionFooterHeight > 0) {\n        position = height;\n        pushItem({\n          type: BigListItemType.SECTION_FOOTER,\n          position: position,\n          height: sectionFooterHeight,\n          section: section,\n        });\n      }\n    } // Footer\n\n    const footerHeight = this.getFooterHeight();\n\n    if (footerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.FOOTER,\n          position: position,\n          height: footerHeight,\n        },\n        true\n      );\n    } // Bottom Spacer\n\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n\n    if (spacerHeight > 0) {\n      push({\n        type: BigListItemType.SPACER,\n        position: height - spacerHeight,\n        height: spacerHeight,\n        section: sections.length,\n      });\n    }\n\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n  /**\n   * Scroll to position.\n   * @param {int} targetSection\n   * @param {int} targetIndex\n   * @param {boolean} animated\n   */\n  scrollToPosition(targetSection, targetIndex, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundIndex = false;\n\n    while (section <= targetSection) {\n      const rows = Math.ceil(sections[section] / this.numColumns);\n\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n\n      scrollTop += this.getSectionHeaderHeight(section);\n\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n\n        if (section === targetSection) {\n          scrollTop += uniformHeight * Math.ceil(targetIndex / this.numColumns);\n          foundIndex = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && index < targetIndex)\n          ) {\n            scrollTop += this.getItemHeight(\n              section,\n              Math.ceil(index / this.numColumns)\n            );\n          } else if (section === targetSection && index === targetIndex) {\n            foundIndex = true;\n            break;\n          }\n        }\n      }\n\n      if (!foundIndex) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n\n      section += 1;\n    }\n\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeaderHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n//# sourceMappingURL=BigListProcessor.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n/**\n * List section.\n * @param {number} position\n * @param {number} height\n * @param {number} nextSectionPosition\n * @param {Animated.Value} scrollTopValue\n * @param {React.node} children\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    /*#__PURE__*/ React.isValidElement(child) &&\n    /*#__PURE__*/ React.cloneElement(child, {\n      style: {\n        flex: 1,\n      },\n    });\n  const viewStyle = [\n    /*#__PURE__*/ React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      width: \"100%\",\n      transform: [\n        {\n          translateY,\n        },\n      ],\n    },\n  ];\n  return /*#__PURE__*/ React.createElement(\n    Animated.View,\n    {\n      style: viewStyle,\n    },\n    fillChildren\n  );\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\nexport default /*#__PURE__*/ memo(BigListSection);\n//# sourceMappingURL=BigListSection.js.map\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListPlaceholder from \"./BigListPlaceholder\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, mergeViewStyle, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this); // Initialize properties and state\n\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue =\n      this.props.initialScrollIndex || new Animated.Value(0);\n    this.scrollView = /*#__PURE__*/ React.createRef();\n    this.state = this.getListState();\n    this.viewableItems = [];\n  }\n  /**\n   * Get list state.\n   * @param {array} data\n   * @param {array[]|object|null|undefined} sections\n   * @param {array} prevItems\n   * @param {number|null} batchSizeThreshold\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|null|undefined} insetTop\n   * @param {number|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   * @param {number|null|undefined} batchSize\n   * @param {number|null|undefined} blockStart\n   * @param {number|null|undefined} blockEnd\n   * @param {function|null|undefined} getItemLayout\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      sections,\n      batchSizeThreshold,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      itemHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n      getItemLayout,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems }\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || []\n      ),\n    };\n  }\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    const stateProps = props || this.props;\n    return this.constructor.getListState(\n      stateProps,\n      options ||\n        processBlock({\n          containerHeight: this.containerHeight,\n          scrollTop: this.scrollTop,\n          batchSizeThreshold: stateProps.batchSizeThreshold,\n        })\n    );\n  }\n  /**\n   * Get sections item lengths.\n   * @param {array[]|object<string, object>|null|undefined} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n\n    return [data === null || data === void 0 ? void 0 : data.length];\n  }\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n  /**\n   * Get item height.\n   * @param {number} itemHeight\n   * @param {function|null|undefined} getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n\n    if (itemHeight) {\n      return itemHeight;\n    }\n\n    return null;\n  }\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n  /**\n   * Is item visible.\n   * @param {int} index\n   * @param {int} section\n   * @returns {boolean}\n   */\n  isVisible({ index, section = 0 }) {\n    const position = this.getItemOffset({\n      index,\n      section,\n    });\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n  /**\n   * Provides a reference to the underlying scroll component.\n   * @returns {ScrollView|null}\n   */\n  getNativeScrollRef() {\n    return this.scrollView.current;\n  }\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n\n    return null;\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  flashScrollIndicators() {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      scrollView.flashScrollIndicators();\n    }\n  }\n  /**\n   * Scrolls to a given x, y offset, either immediately, with a smooth animation.\n   * @param {int} x\n   * @param {int} y\n   * @param {bool} animated\n   */\n  scrollTo({ x = 0, y = 0, animated = true }) {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated,\n      });\n    }\n  }\n  /**\n   * Scroll to index.\n   * @param {int} index\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToIndex({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n\n    return false;\n  }\n  /**\n   * Alias to scrollToIndex with polyfill for SectionList.\n   * @see scrollToIndex\n   * @param {int} itemIndex\n   * @param {int} sectionIndex\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToLocation({ itemIndex, sectionIndex, animated = true }) {\n    return this.scrollToIndex({\n      section: sectionIndex,\n      index: itemIndex,\n      animated,\n    });\n  }\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        })\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n\n    return this.scrollTo({\n      index,\n      animated,\n    });\n  }\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    const scrollRef = this.getNativeScrollRef();\n\n    if (scrollRef != null) {\n      scrollRef.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({\n      section: 0,\n      index: 0,\n      animated,\n    });\n  }\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n\n    return this.scrollTo({\n      section,\n      index,\n      animated,\n    });\n  }\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({\n      index: 0,\n      section,\n      animated,\n    });\n  }\n  /**\n   * On viewable items changed.\n   */\n  onViewableItemsChanged() {\n    const { onViewableItemsChanged } = this.props;\n\n    if (onViewableItemsChanged) {\n      const prevItems = this.viewableItems;\n      const currentItems = this.state.items\n        .map(({ type, section, index, key }) => {\n          if (type === BigListItemType.ITEM) {\n            return {\n              item: this.getItem({\n                section,\n                index,\n              }),\n              key: key,\n              index: (section + 1) * index,\n              isViewable: this.isVisible({\n                section,\n                index,\n              }),\n            };\n          }\n\n          return false;\n        })\n        .filter(Boolean);\n      this.viewableItems = currentItems.filter((item) => item.isViewable);\n      const changed = prevItems\n        .filter(\n          ({ index: prevIndex }) =>\n            !this.viewableItems.some(\n              ({ index: nextIndex }) => nextIndex === prevIndex\n            )\n        )\n        .map((item) => {\n          item.isViewable = this.isVisible({\n            section: item.section,\n            index: item.index,\n          });\n          return item;\n        });\n\n      if (changed.length > 0) {\n        onViewableItemsChanged({\n          viewableItems: this.viewableItems,\n          changed,\n        });\n      }\n    }\n  }\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold, onViewableItemsChanged } =\n      this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight\n    );\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    if (onViewableItemsChanged) {\n      this.onViewableItemsChanged();\n    }\n\n    const { onScroll, onEndReached, onEndReachedThreshold } = this.props;\n\n    if (onScroll != null) {\n      onScroll(event);\n    }\n\n    const { layoutMeasurement, contentOffset, contentSize } = nativeEvent;\n    const distanceFromEnd =\n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n\n    if (distanceFromEnd <= layoutMeasurement.height * onEndReachedThreshold) {\n      if (!this.endReached) {\n        this.endReached = true;\n        onEndReached &&\n          onEndReached({\n            distanceFromEnd,\n          });\n      }\n    } else {\n      this.endReached = false;\n    }\n  }\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    const { onLayout } = this.props;\n\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, sectionLength) => {\n      return total + sectionLength;\n    }, 0);\n    return length === 0;\n  }\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n  /**\n   * Get item scroll view offset.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItemOffset({ section = 0, index }) {\n    const {\n      insetTop,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      itemHeight,\n      numColumns,\n    } = this.props;\n    const headers = this.hasSections() ? section + 1 : 1;\n    const roundedIndex =\n      index % numColumns ? index - (index % numColumns) + numColumns : index;\n    return (\n      insetTop +\n      headerHeight +\n      headers * sectionHeaderHeight +\n      section * sectionFooterHeight +\n      roundedIndex * itemHeight\n    );\n  }\n  /**\n   * Get item data.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItem({ index, section = 0 }) {\n    if (this.hasSections()) {\n      return this.props.sections[section][index];\n    } else {\n      return this.props.data[index];\n    }\n  }\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      numColumns,\n      columnWrapperStyle,\n      placeholder,\n      placeholderComponent,\n      placeholderImage,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state;\n\n    if (this.isEmpty()) {\n      if (ListEmptyComponent != null) {\n        return createElement(ListHeaderComponent);\n      }\n\n      if (renderEmpty != null) {\n        return renderEmpty();\n      }\n    }\n\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION_HEADER) {\n        sectionPositions.push(position);\n      }\n    });\n    const children = [];\n    items.forEach(({ type, key, position, height, section, index }) => {\n      let child;\n      let style;\n      const itemKey = key || position; // Fallback fix\n\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListHeaderComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = mergeViewStyle(\n              {\n                width: \"100%\",\n              },\n              ListHeaderComponentStyle\n            );\n          } else {\n            child = renderHeader();\n            style = {\n              width: \"100%\",\n            };\n          }\n\n        // falls through\n\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = mergeViewStyle(\n                {\n                  width: \"100%\",\n                },\n                ListFooterComponentStyle\n              );\n            } else {\n              child = renderFooter();\n              style = {\n                width: \"100%\",\n              };\n            }\n          }\n\n        // falls through\n\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            child = renderSectionFooter(section);\n            style = {\n              width: \"100%\",\n            };\n          }\n\n        // falls through\n\n        case BigListItemType.ITEM:\n          if (type === BigListItemType.ITEM) {\n            const item = this.getItem({\n              section,\n              index,\n            });\n            style = numColumns > 1 ? columnWrapperStyle || {} : {};\n\n            if (this.hasSections()) {\n              child = renderItem({\n                item,\n                section,\n                index,\n              });\n            } else {\n              child = renderItem({\n                item,\n                index,\n              });\n            }\n          }\n\n          if (child != null) {\n            children.push(\n              /*#__PURE__*/ React.createElement(\n                BigListItem,\n                {\n                  key: itemKey,\n                  height: height,\n                  width: 100 / numColumns + \"%\",\n                  style: style,\n                },\n                child\n              )\n            );\n          }\n\n          break;\n\n        case BigListItemType.SPACER:\n          children.push(\n            placeholder\n              ? /*#__PURE__*/ React.createElement(BigListPlaceholder, {\n                  key: itemKey,\n                  height: height,\n                  image: placeholderImage,\n                  component: placeholderComponent,\n                })\n              : /*#__PURE__*/ React.createElement(BigListItem, {\n                  key: itemKey,\n                  height: height,\n                })\n          );\n          break;\n\n        case BigListItemType.SECTION_HEADER:\n          sectionPositions.shift();\n          child = renderSectionHeader(section);\n\n          if (child != null) {\n            children.push(\n              /*#__PURE__*/ React.createElement(\n                BigListSection,\n                {\n                  key: itemKey,\n                  height: height,\n                  position: position,\n                  nextSectionPosition: sectionPositions[0],\n                  scrollTopValue: this.scrollTopValue,\n                },\n                child\n              )\n            );\n          }\n\n          break;\n      }\n    });\n    return children;\n  }\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    const { stickySectionHeadersEnabled } = this.props;\n    const scrollView = this.getNativeScrollRef();\n\n    if (\n      stickySectionHeadersEnabled &&\n      scrollView != null &&\n      Platform.OS !== \"web\"\n    ) {\n      // Disabled on web\n      this.scrollTopValueAttachment = Animated.attachNativeEvent(\n        scrollView,\n        \"onScroll\",\n        [\n          {\n            nativeEvent: {\n              contentOffset: {\n                y: this.scrollTopValue,\n              },\n            },\n          },\n        ]\n      );\n    }\n  }\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.initialScrollIndex !== this.props.initialScrollIndex) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      placeholder,\n      placeholderImage,\n      placeholderComponent,\n      sections,\n      initialScrollIndex,\n      columnWrapperStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      stickySectionHeadersEnabled,\n      onEndReached,\n      onEndReachedThreshold,\n      onRefresh,\n      refreshing,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      ...props\n    } = this.props;\n\n    const wrapper = renderScrollViewWrapper || ((val) => val);\n\n    const handleScroll =\n      stickySectionHeadersEnabled && Platform.OS === \"web\"\n        ? Animated.event(\n            [\n              {\n                nativeEvent: {\n                  contentOffset: {\n                    y: this.scrollTopValue,\n                  },\n                },\n              },\n            ],\n            {\n              listener: (event) => this.onScroll(event),\n              useNativeDriver: false,\n            }\n          )\n        : this.onScroll;\n    const defaultProps = {\n      refreshControl:\n        onRefresh && !this.props.refreshControl\n          ? /*#__PURE__*/ React.createElement(RefreshControl, {\n              refreshing: refreshing,\n              onRefresh: onRefresh,\n            })\n          : null,\n      contentContainerStyle: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        maxWidth: \"100%\",\n      },\n    };\n    const overwriteProps = {\n      ref: (ref) => {\n        this.scrollView.current = ref;\n\n        if (actionSheetScrollRef) {\n          actionSheetScrollRef.current = ref;\n        }\n      },\n      onScroll: handleScroll,\n      onLayout: this.onLayout,\n      onMomentumScrollEnd: this.onScrollEnd,\n      onScrollEndDrag: this.onScrollEnd,\n    };\n    const scrollViewProps = { ...defaultProps, ...props, ...overwriteProps }; // Content container style merge\n\n    scrollViewProps.contentContainerStyle = mergeViewStyle(\n      props.contentContainerStyle,\n      defaultProps.contentContainerStyle\n    );\n    const scrollView = wrapper(\n      /*#__PURE__*/ React.createElement(\n        ScrollView,\n        scrollViewProps,\n        this.renderItems()\n      )\n    );\n    return /*#__PURE__*/ React.createElement(\n      View,\n      {\n        style: {\n          flex: 1,\n          maxHeight: Platform.select({\n            web: \"100vh\",\n            default: \"100%\",\n          }),\n        },\n      },\n      scrollView,\n      renderAccessory != null ? renderAccessory(this) : null\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  batchSizeThreshold: PropTypes.number,\n  bottom: PropTypes.number,\n  numColumns: PropTypes.number,\n  columnWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  placeholder: PropTypes.bool,\n  placeholderImage: PropTypes.any,\n  placeholderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onLayout: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  onViewableItemsChanged: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSectionHeader: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  refreshing: PropTypes.bool,\n  scrollEventThrottle: PropTypes.number,\n  initialScrollIndex: PropTypes.number,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeaderHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n  stickySectionHeadersEnabled: PropTypes.bool,\n};\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  refreshing: false,\n  batchSizeThreshold: 1,\n  numColumns: 1,\n  placeholder: Platform.select({\n    web: false,\n    default: false,\n    /* TODO: default disabled until a solution for different screen sizes is found */\n  }),\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSectionHeader: () => null,\n  renderSectionFooter: () => null,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeaderHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  stickySectionHeadersEnabled: true,\n  removeClippedSubviews: false,\n  scrollEventThrottle: Platform.OS === \"web\" ? 5 : 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: {\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n  },\n  onEndReachedThreshold: 0,\n};\nexport default BigList;\n//# sourceMappingURL=BigList.js.map\n","import BigList from \"./BigList\";\nexport default BigList;\n//# sourceMappingURL=index.js.map\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item\n      title=\"BigList\"\n      description=\"react-native-big-list\"\n      style={styles.header}\n    />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            onViewableItemsChanged={(p) => console.log(p)}\n            renderFooter={renderFooter}\n            onEndReached={() => console.log(\"ciao\")}\n            onEndReachedThreshold={0.5}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSectionHeader = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeaderHeight={75}\n          renderSectionHeader={renderSectionHeader}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, View } from \"react-native\";\nimport {\n  Appbar,\n  Paragraph,\n  RadioButton,\n  TouchableRipple,\n  useTheme,\n} from \"react-native-paper\";\n\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport SectionList from \"./lists/SectionList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [checked, setChecked] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + 205,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <View\n        style={[styles.containerBottom, { backgroundColor: surface }]}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <RadioButton.Group\n          onValueChange={(newValue) => setChecked(newValue)}\n          value={checked}\n        >\n          <TouchableRipple onPress={() => setChecked(\"standard\")}>\n            <View style={styles.row}>\n              <Paragraph>Standard List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"standard\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"columns\")}>\n            <View style={styles.row}>\n              <Paragraph>Columns List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"columns\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"section\")}>\n            <View style={styles.row}>\n              <Paragraph>Section List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"section\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"compare\")}>\n            <View style={styles.row}>\n              <Paragraph>Compare with FlatList</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"compare\" />\n              </View>\n            </View>\n          </TouchableRipple>\n        </RadioButton.Group>\n      </View>\n      {checked === \"standard\" ? (\n        <List />\n      ) : checked === \"columns\" ? (\n        <ColumnsList />\n      ) : checked === \"section\" ? (\n        <SectionList />\n      ) : checked === \"compare\" ? (\n        <CompareList />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n  row: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <Home />\n    </PaperProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.b393bdf6.png\";"],"sourceRoot":""}