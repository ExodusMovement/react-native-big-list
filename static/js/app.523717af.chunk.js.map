{"version":3,"sources":["lib/utils.js","lib/BigListItem.jsx","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.jsx","lib/BigList.jsx","lib/index.js","src/lists/components/Block.jsx","src/lists/ColumnsList.jsx","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/SectionList.jsx","src/Home.jsx","App.js"],"names":["isNumeric","num","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSizeThreshold","batchSize","blockStart","blockEnd","Math","ceil","max","forEachObjIndexed","fn","obj","keyList","Object","keys","idx","length","key","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","SPACER","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","BigListItem","children","height","width","View","propTypes","PropTypes","oneOfType","arrayOf","node","string","number","object","array","defaultProps","memo","BigListItemRecycler","items","this","pendingItems","forEach","item","type","section","index","itemsForType","position","itemKey","lastKey","BigListProcessor","scrollView","sections","headerHeight","footerHeight","sectionHeaderHeight","itemHeight","sectionFooterHeight","insetTop","insetBottom","numColumns","uniform","Number","top","bottom","prevItems","recycler","counter","spacerHeight","isVisible","isVisibleBelow","fullRow","isFullRow","prevHeight","itemsArray","get","pushItem","getHeaderHeight","rows","getSectionHeaderHeight","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetIndex","animated","foundIndex","uniformHeight","scrollTo","x","y","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","flex","viewStyle","props","undefined","zIndex","transform","Animated","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","value","bind","autobind","createRef","state","getListState","options","stateProps","data","getSectionLengths","getItemLayout","getItemOffset","current","getNativeScrollRef","sectionLengths","flashScrollIndicators","processor","getListProcessor","scrollToPosition","itemIndex","sectionIndex","scrollToIndex","hasSections","JSON","stringify","map","a","indexOf","offset","scrollRef","event","nativeEvent","contentInset","layoutMeasurement","min","contentOffset","contentSize","nextState","setState","onScroll","onEndReached","onEndReachedThreshold","distanceFromEnd","endReached","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","reduce","total","sectionLength","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderHeader","renderFooter","renderSectionHeader","renderItem","renderSectionFooter","renderEmpty","isEmpty","sectionPositions","getItem","shift","stickySectionHeadersEnabled","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderScrollViewWrapper","actionSheetScrollRef","onRefresh","refreshing","wrapper","val","handleScroll","listener","useNativeDriver","refreshControl","RefreshControl","contentContainerStyle","flexDirection","flexWrap","maxWidth","overwriteProps","ref","onMomentumScrollEnd","onScrollEndDrag","scrollViewProps","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","left","right","func","keyboardDismissMode","keyboardShouldPersistTaps","elementType","element","removeClippedSubviews","bool","isRequired","scrollEventThrottle","styles","StyleSheet","create","block","justifyContent","padding","Block","SectionList","useState","numberColumns","setNumberColumns","SafeAreaView","container","KeyboardAvoidingView","compare","parseInt","title","description","icon","TextInput","label","String","keyboardType","onChangeText","Subheading","StatusBar","CompareList","id","header","FlatList","keyExtractor","paddingTop","Appbar","Content","headerContent","subtitle","elevation","alignItems","containerBottom","marginBottom","row","paddingHorizontal","paddingVertical","Home","useTheme","colors","background","surface","checked","setChecked","setInsetBottom","backgroundColor","paddingBottom","Header","RadioButton","Group","onValueChange","newValue","TouchableRipple","onPress","Paragraph","pointerEvents","Android","App"],"mappings":"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","file":"static/js/app.523717af.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * Is numeric.\n * @param {any} num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n\n/**\n * Process block.\n * @param {number} containerHeight\n * @param {number} scrollTop\n * @param {number|null|undefined} batchSizeThreshold\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = ({\n  containerHeight,\n  scrollTop,\n  batchSizeThreshold = 1,\n}) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n  const batchSize = Math.ceil(\n    containerHeight * Math.max(0.5, batchSizeThreshold),\n  );\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return { batchSize, blockStart, blockEnd };\n};\n\n/**\n * For each object indexed.\n * @param {function} fn\n * @param {object} obj\n * @returns {*}\n */\nexport const forEachObjIndexed = (fn, obj) => {\n  const keyList = Object.keys(obj);\n  let idx = 0;\n  while (idx < keyList.length) {\n    const key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n};\n\n/**\n * Autobind context to class methods.\n * @param {object} self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n    if (exclude) {\n      return !exclude.some(match);\n    }\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object),\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n  return self;\n};\n\n/**\n * Merge styles\n * @param {array|object|null|undefined} style\n * @param {array|object} defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle = {}) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n  return style;\n};\n\n/**\n * Get element from component.\n * @param {React.node} Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null ? (\n    React.isValidElement(Component) ? (\n      Component\n    ) : (\n      <Component />\n    )\n  ) : null;\n};\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\n\nimport { mergeViewStyle } from \"./utils\";\n\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n};\n\n/**\n * List item.\n * @param {React.node} children\n * @param {array|object|null|undefined} style\n * @param {number} height\n * @param {number} width\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListItem = ({ children, style, height, width = \"100%\" }) => {\n  return (\n    <View\n      style={mergeViewStyle(style, {\n        height,\n        width,\n      })}\n    >\n      {children}\n    </View>\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\n\nexport default memo(BigListItem);\n","import { BigListItemType } from \"./BigListItem\";\nimport { forEachObjIndexed } from \"./utils\";\n\nclass BigListItemRecycler {\n  static lastKey = 0;\n  /**\n   * Constructor.\n   * @param {object[]} items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, index } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${index}`] = item;\n    });\n  }\n\n  /**\n   * Items for type.\n   * @param {any} type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n\n  /**\n   * Get item.\n   * @param {any} type\n   * @param {number} position\n   * @param {number} height\n   * @param {int} section\n   * @param {int} index\n   * @returns {{section: int, position: number, index: number, type: any, key: number, height: int}}\n   */\n  get({ type, position, height, section = 0, index = 0 }) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${index}`;\n    let item = items[itemKey];\n    if (item == null) {\n      item = { type, key: -1, position, height, section, index };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n    return item;\n  }\n\n  /**\n   * Fill.\n   */\n  fill() {\n    forEachObjIndexed((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      forEachObjIndexed(({ key }) => {\n        const item = pendingItems[index];\n        if (item == null) {\n          return false;\n        }\n        item.key = key;\n        index++;\n      }, items);\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n      pendingItems.length = 0;\n    }, BigListItemType);\n  }\n}\nexport default BigListItemRecycler;\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\n\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param {ScrollView} scrollView\n   * @param {array[]|object|null|undefined} sections\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|function|null|undefined} insetTop\n   * @param {number|function|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   */\n  constructor({\n    scrollView,\n    sections,\n    headerHeight,\n    footerHeight,\n    sectionHeaderHeight,\n    itemHeight,\n    sectionFooterHeight,\n    insetTop,\n    insetBottom,\n    numColumns,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeaderHeight = sectionHeaderHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n    this.numColumns = numColumns;\n  }\n\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, index) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, index);\n  }\n\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeaderHeight(section) {\n    const { sectionHeaderHeight } = this;\n    return isNumeric(sectionHeaderHeight)\n      ? Number(sectionHeaderHeight)\n      : sectionHeaderHeight(section);\n  }\n\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n\n  /**\n   * Process list items.\n   * @param {number} top\n   * @param {number} bottom\n   * @param {array} prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    const items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n\n    let position;\n    let counter = -1; // Counter of items per row pushed\n    let height = this.insetTop;\n    let spacerHeight = height;\n\n    /**\n     * The width of the row is the entire line.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isFullRow = (item) => {\n      // Only items can be rendered with column format, so all others are full row\n      return item.type !== BigListItemType.ITEM;\n    };\n\n    /**\n     * Is visible below.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (item) => {\n      const { height: itemHeight } = item;\n      counter = -1;\n      if (height > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Is the item visible.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isVisible = (item) => {\n      // Check section headers visibility below\n      if (item.type === BigListItemType.SECTION_HEADER) {\n        return isVisibleBelow(item);\n      }\n      // Dimensions\n      const { height: itemHeight } = item;\n      const fullRow = isFullRow(item);\n      const prevHeight = height;\n      // Increase or reset counter\n      counter = fullRow ? -1 : counter + 1;\n      if (fullRow || counter % this.numColumns === 0) {\n        height += itemHeight;\n      }\n      // Check if is visible\n      if (height < top || prevHeight > bottom) {\n        if (fullRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Get recycled views and push items.\n     * @param {object} itemsArray\n     */\n    const push = (...itemsArray) => {\n      itemsArray.forEach((item) => {\n        items.push(recycler.get(item));\n      });\n    };\n\n    /**\n     * Push the item when is visible.\n     * @param {object} item\n     */\n    const pushItem = (item) => {\n      if (isVisible(item)) {\n        if (spacerHeight > 0) {\n          push({\n            type: BigListItemType.SPACER,\n            position: item.position - spacerHeight,\n            height: spacerHeight,\n            section: item.section,\n            index: item.index,\n          });\n          spacerHeight = 0;\n        }\n        push(item);\n      }\n    };\n\n    // Header\n    const headerHeight = this.getHeaderHeight();\n    if (headerHeight > 0) {\n      position = height;\n      pushItem({\n        type: BigListItemType.HEADER,\n        position: position,\n        height: headerHeight,\n      });\n    }\n    // Sections\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n      if (rows === 0) {\n        continue;\n      }\n      // Section Header\n      const sectionHeaderHeight = this.getSectionHeaderHeight(section);\n      position = height;\n      height += sectionHeaderHeight;\n      pushItem({\n        type: BigListItemType.SECTION_HEADER,\n        position: position,\n        height: sectionHeaderHeight,\n        section: section,\n      });\n      // Items\n      let itemHeight = this.getItemHeight(section);\n      for (let index = 0; index < rows; index++) {\n        if (!this.uniform) {\n          itemHeight = this.getItemHeight(section, index);\n        }\n        position = height;\n        pushItem({\n          type: BigListItemType.ITEM,\n          position: position,\n          height: itemHeight,\n          section: section,\n          index: index,\n        });\n      }\n      // Section Footer\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n      if (sectionFooterHeight > 0) {\n        position = height;\n        pushItem({\n          type: BigListItemType.SECTION_FOOTER,\n          position: position,\n          height: sectionFooterHeight,\n          section: section,\n        });\n      }\n    }\n    // Footer\n    const footerHeight = this.getFooterHeight();\n    if (footerHeight > 0) {\n      position = height;\n      pushItem({\n        type: BigListItemType.FOOTER,\n        position: position,\n        height: footerHeight,\n      });\n    }\n    // Bottom Spacer\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n    if (spacerHeight > 0) {\n      push({\n        type: BigListItemType.SPACER,\n        position: height - spacerHeight,\n        height: spacerHeight,\n        section: sections.length,\n      });\n    }\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n\n  /**\n   * Scroll to position.\n   * @param {int} targetSection\n   * @param {int} targetIndex\n   * @param {boolean} animated\n   */\n  scrollToPosition(targetSection, targetIndex, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundIndex = false;\n    while (section <= targetSection) {\n      const rows = Math.ceil(sections[section] / this.numColumns);\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n      scrollTop += this.getSectionHeaderHeight(section);\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n        if (section === targetSection) {\n          scrollTop += uniformHeight * Math.ceil(targetIndex / this.numColumns);\n          foundIndex = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && index < targetIndex)\n          ) {\n            scrollTop += this.getItemHeight(\n              section,\n              Math.ceil(index / this.numColumns),\n            );\n          } else if (section === targetSection && index === targetIndex) {\n            foundIndex = true;\n            break;\n          }\n        }\n      }\n      if (!foundIndex) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n      section += 1;\n    }\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeaderHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n\n/**\n * List section.\n * @param {number} position\n * @param {number} height\n * @param {number} nextSectionPosition\n * @param {Animated.Value} scrollTopValue\n * @param {React.node} children\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    React.isValidElement(child) &&\n    React.cloneElement(child, {\n      style: { flex: 1 },\n    });\n  const viewStyle = [\n    React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      width: \"100%\",\n      transform: [{ translateY }],\n    },\n  ];\n  return <Animated.View style={viewStyle}>{fillChildren}</Animated.View>;\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\n\nexport default memo(BigListSection);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n} from \"react-native\";\n\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, mergeViewStyle, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this);\n    // Initialize properties and state\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue = this.props.scrollTopValue || new Animated.Value(0);\n    this.scrollView = React.createRef();\n    this.state = this.getListState();\n  }\n\n  /**\n   * Get list state.\n   * @param {array} data\n   * @param {array[]|object|null|undefined} sections\n   * @param {array} prevItems\n   * @param {number|null} batchSizeThreshold\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|null|undefined} insetTop\n   * @param {number|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   * @param {number|null|undefined} batchSize\n   * @param {number|null|undefined} blockStart\n   * @param {number|null|undefined} blockEnd\n   * @param {function|null|undefined} getItemLayout\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      sections,\n      batchSizeThreshold,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      itemHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n      getItemLayout,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems },\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || [],\n      ),\n    };\n  }\n\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    const stateProps = props || this.props;\n    return this.constructor.getListState(\n      stateProps,\n      options ||\n        processBlock({\n          containerHeight: this.containerHeight,\n          scrollTop: this.scrollTop,\n          batchSizeThreshold: stateProps.batchSizeThreshold,\n        }),\n    );\n  }\n\n  /**\n   * Get sections item lengths.\n   * @param {array[]|object<string, object>|null|undefined} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n    return [data?.length];\n  }\n\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n\n  /**\n   * Get item height.\n   * @param {number} itemHeight\n   * @param {function|null|undefined} getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n    if (itemHeight) {\n      return itemHeight;\n    }\n    return null;\n  }\n\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n\n  /**\n   * Is item visible.\n   * @param {int} index\n   * @param {int} section\n   * @returns {boolean}\n   */\n  isVisible({ index, section = 0 }) {\n    const position = this.getItemOffset({ index, section });\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n\n  /**\n   * Provides a reference to the underlying scroll component.\n   * @returns {ScrollView|null}\n   */\n  getNativeScrollRef() {\n    return this.scrollView.current;\n  }\n\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n    return null;\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  flashScrollIndicators() {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      scrollView.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Scrolls to a given x, y offset, either immediately, with a smooth animation.\n   * @param {int} x\n   * @param {int} y\n   * @param {bool} animated\n   */\n  scrollTo({ x = 0, y = 0, animated = true }) {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated,\n      });\n    }\n  }\n\n  /**\n   * Scroll to index.\n   * @param {int} index\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToIndex({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n    return false;\n  }\n\n  /**\n   * Alias to scrollToIndex with polyfill for SectionList.\n   * @see scrollToIndex\n   * @param {int} itemIndex\n   * @param {int} sectionIndex\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToLocation({ itemIndex, sectionIndex, animated = true }) {\n    return this.scrollToIndex({\n      section: sectionIndex,\n      index: itemIndex,\n      animated,\n    });\n  }\n\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        }),\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n    return this.scrollTo({ index, animated });\n  }\n\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    const scrollRef = this.getNativeScrollRef();\n    if (scrollRef != null) {\n      scrollRef.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({ section: 0, index: 0, animated });\n  }\n\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n    return this.scrollTo({ section, index, animated });\n  }\n\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({ index: 0, section, animated });\n  }\n\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight,\n    );\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onScroll, onEndReached, onEndReachedThreshold } = this.props;\n    if (onScroll != null) {\n      onScroll(event);\n    }\n    const { layoutMeasurement, contentOffset, contentSize } = nativeEvent;\n    const distanceFromEnd =\n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n    if (distanceFromEnd <= layoutMeasurement.height * onEndReachedThreshold) {\n      if (!this.endReached) {\n        this.endReached = true;\n        onEndReached && onEndReached({ distanceFromEnd });\n      }\n    } else {\n      this.endReached = false;\n    }\n  }\n\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onLayout } = this.props;\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, sectionLength) => {\n      return total + sectionLength;\n    }, 0);\n    return length === 0;\n  }\n\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n\n  /**\n   * Get item scroll view offset.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItemOffset({ section = 0, index }) {\n    const {\n      insetTop,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      itemHeight,\n    } = this.props;\n    const headers = this.hasSections() ? section + 1 : 1;\n    return (\n      insetTop +\n      headerHeight +\n      headers * sectionHeaderHeight +\n      section * sectionFooterHeight +\n      index * itemHeight\n    );\n  }\n\n  /**\n   * Get item data.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItem({ index, section = 0 }) {\n    if (this.hasSections()) {\n      return this.props.sections[section][index];\n    } else {\n      return this.props.data[index];\n    }\n  }\n\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      numColumns,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state;\n    if (this.isEmpty()) {\n      if (ListEmptyComponent != null) {\n        return createElement(ListHeaderComponent);\n      }\n      if (renderEmpty != null) {\n        return renderEmpty();\n      }\n    }\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION_HEADER) {\n        sectionPositions.push(position);\n      }\n    });\n    const children = [];\n    items.forEach(({ type, key, position, height, section, index }) => {\n      let child;\n      let style;\n      const itemKey = key || position; // Fallback fix\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListHeaderComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = mergeViewStyle({ width: \"100%\" }, ListHeaderComponentStyle);\n          } else {\n            child = renderHeader();\n            style = { width: \"100%\" };\n          }\n        // falls through\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = mergeViewStyle(\n                { width: \"100%\" },\n                ListFooterComponentStyle,\n              );\n            } else {\n              child = renderFooter();\n              style = { width: \"100%\" };\n            }\n          }\n        // falls through\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            child = renderSectionFooter(section);\n            style = { width: \"100%\" };\n          }\n        // falls through\n        case BigListItemType.ITEM:\n          if (type === BigListItemType.ITEM) {\n            const item = this.getItem({ section, index });\n            if (this.hasSections()) {\n              child = renderItem({ item, section, index });\n            } else {\n              child = renderItem({ item, index });\n            }\n          }\n          if (child != null) {\n            children.push(\n              <BigListItem\n                key={itemKey}\n                height={height}\n                width={100 / numColumns + \"%\"}\n                style={style}\n              >\n                {child}\n              </BigListItem>,\n            );\n          }\n          break;\n        case BigListItemType.SPACER:\n          children.push(<BigListItem key={itemKey} height={height} />);\n          break;\n        case BigListItemType.SECTION_HEADER:\n          sectionPositions.shift();\n          child = renderSectionHeader(section);\n          if (child != null) {\n            children.push(\n              <BigListSection\n                key={itemKey}\n                height={height}\n                position={position}\n                nextSectionPosition={sectionPositions[0]}\n                scrollTopValue={this.scrollTopValue}\n              >\n                {child}\n              </BigListSection>,\n            );\n          }\n          break;\n      }\n    });\n    return children;\n  }\n\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    const { stickySectionHeadersEnabled } = this.props;\n    const scrollView = this.getNativeScrollRef();\n    if (\n      stickySectionHeadersEnabled &&\n      scrollView != null &&\n      Platform.OS !== \"web\"\n    ) {\n      // Disabled on web\n      this.scrollTopValueAttachment = Animated.attachNativeEvent(\n        scrollView,\n        \"onScroll\",\n        [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n      );\n    }\n  }\n\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.scrollTopValue !== this.props.scrollTopValue) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      sections,\n      scrollTopValue,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      stickySectionHeadersEnabled,\n      onEndReached,\n      onEndReachedThreshold,\n      onRefresh,\n      refreshing,\n      ...props\n    } = this.props;\n\n    const wrapper = renderScrollViewWrapper || ((val) => val);\n    const handleScroll =\n      stickySectionHeadersEnabled && Platform.OS === \"web\"\n        ? Animated.event(\n            [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n            {\n              listener: (event) => this.onScroll(event),\n              useNativeDriver: false,\n            },\n          )\n        : this.onScroll;\n\n    const defaultProps = {\n      refreshControl:\n        onRefresh && !this.props.refreshControl ? (\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        ) : null,\n      contentContainerStyle: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        maxWidth: \"100%\",\n      },\n    };\n\n    const overwriteProps = {\n      ref: (ref) => {\n        this.scrollView.current = ref;\n        if (actionSheetScrollRef) {\n          actionSheetScrollRef.current = ref;\n        }\n      },\n      onScroll: handleScroll,\n      onLayout: this.onLayout,\n      onMomentumScrollEnd: this.onScrollEnd,\n      onScrollEndDrag: this.onScrollEnd,\n    };\n\n    const scrollViewProps = {\n      ...defaultProps,\n      ...props,\n      ...overwriteProps,\n    };\n\n    // Content container style merge\n    scrollViewProps.contentContainerStyle = mergeViewStyle(\n      props.contentContainerStyle,\n      defaultProps.contentContainerStyle,\n    );\n\n    const scrollView = wrapper(\n      <ScrollView {...scrollViewProps}>{this.renderItems()}</ScrollView>,\n    );\n    return (\n      <View\n        style={{\n          flex: 1,\n          maxHeight: Platform.select({ web: \"100vh\", default: \"100%\" }),\n        }}\n      >\n        {scrollView}\n        {renderAccessory != null ? renderAccessory(this) : null}\n      </View>\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  batchSizeThreshold: PropTypes.number,\n  bottom: PropTypes.number,\n  numColumns: PropTypes.number,\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onLayout: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSectionHeader: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  refreshing: PropTypes.bool,\n  scrollEventThrottle: PropTypes.number,\n  scrollTopValue: PropTypes.number,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeaderHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n  stickySectionHeadersEnabled: PropTypes.bool,\n};\n\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  refreshing: false,\n  batchSizeThreshold: 1,\n  numColumns: 1,\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSectionHeader: () => null,\n  renderSectionFooter: () => null,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeaderHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  stickySectionHeadersEnabled: true,\n  removeClippedSubviews: false,\n  scrollEventThrottle: Platform.OS === \"web\" ? 5 : 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: { top: 0, right: 0, left: 0, bottom: 0 },\n  onEndReachedThreshold: 0,\n};\n\nexport default BigList;\n","import BigList from \"./BigList\";\n\nexport default BigList;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","import React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading, TextInput } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const [numberColumns, setNumberColumns] = useState(3);\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <View>\n      <TextInput\n        label=\"Number of columns (max 10)\"\n        value={String(numberColumns)}\n        type=\"numeric\"\n        keyboardType=\"numeric\"\n        onChangeText={(value) => {\n          const num = parseInt(value, 10) || \"\";\n          setNumberColumns(num);\n        }}\n      />\n    </View>\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            numColumns={Math.min(\n              Math.max(parseInt(numberColumns, 10) || 1, 1),\n              10,\n            )}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item title=\"BigList\" description=\"../../lib\" style={styles.header} />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSectionHeader = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeaderHeight={75}\n          renderSectionHeader={renderSectionHeader}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, View } from \"react-native\";\nimport {\n  Appbar,\n  Paragraph,\n  RadioButton,\n  TouchableRipple,\n  useTheme,\n} from \"react-native-paper\";\n\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport SectionList from \"./lists/SectionList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [checked, setChecked] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + 205,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <View\n        style={[styles.containerBottom, { backgroundColor: surface }]}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <RadioButton.Group\n          onValueChange={(newValue) => setChecked(newValue)}\n          value={checked}\n        >\n          <TouchableRipple onPress={() => setChecked(\"standard\")}>\n            <View style={styles.row}>\n              <Paragraph>Standard List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"standard\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"columns\")}>\n            <View style={styles.row}>\n              <Paragraph>Columns List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"columns\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"section\")}>\n            <View style={styles.row}>\n              <Paragraph>Section List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"section\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"compare\")}>\n            <View style={styles.row}>\n              <Paragraph>Compare with FlatList</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"compare\" />\n              </View>\n            </View>\n          </TouchableRipple>\n        </RadioButton.Group>\n      </View>\n      {checked === \"standard\" ? (\n        <List />\n      ) : checked === \"columns\" ? (\n        <ColumnsList />\n      ) : checked === \"section\" ? (\n        <SectionList />\n      ) : checked === \"compare\" ? (\n        <CompareList />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n  row: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <Home />\n    </PaperProvider>\n  );\n}\n"],"sourceRoot":""}