{"version":3,"sources":["lib/utils.js","lib/BigListItem.js","lib/BigListPlaceholder.js","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.js","lib/BigList.js","lib/index.js","src/lists/components/Block.jsx","src/lists/ColumnsList.jsx","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/MultiSelectList.jsx","src/lists/SectionList.jsx","src/lists/SelectList.jsx","src/Home.jsx","App.js","lib/assets/placeholder.png"],"names":["isNumeric","num","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSizeThreshold","batchSize","blockStart","blockEnd","Math","ceil","max","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","SPACER","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","EMPTY","BigListItem","uniqueKey","children","height","width","View","key","propTypes","PropTypes","oneOfType","arrayOf","node","string","number","object","array","defaultProps","memo","BigListPlaceholder","component","image","Animated","Image","source","require","position","resizeMode","overflow","backfaceVisibility","flex","obj","value","BigListItemRecycler","items","this","pendingItems","forEach","item","type","section","index","itemsForType","itemKey","Object","values","length","lastKey","defineProperty","enumerable","configurable","writable","BigListProcessor","scrollView","sections","headerHeight","footerHeight","sectionHeaderHeight","itemHeight","sectionFooterHeight","insetTop","insetBottom","numColumns","uniform","Number","top","bottom","prevItems","recycler","counter","spacerHeight","isFullRow","isVisibleBelow","isVisible","force","fullRow","prevHeight","itemsArray","get","pushSpacer","pushItem","getSpacerHeight","itemsCounter","reduce","totalHeight","i","getHeaderHeight","rows","getSectionHeaderHeight","initialSpacerHeight","prevSection","splice","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetIndex","animated","foundIndex","uniformHeight","scrollTo","x","y","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","viewStyle","props","undefined","zIndex","transform","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","bind","autobind","initialScrollIndex","createRef","state","getListState","viewableItems","options","stateProps","data","getSectionLengths","getItemLayout","getItemOffset","current","getNativeScrollRef","sectionLengths","flashScrollIndicators","processor","getListProcessor","scrollToPosition","itemIndex","sectionIndex","scrollToIndex","hasSections","JSON","stringify","map","a","indexOf","offset","scrollRef","onViewableItemsChanged","currentItems","getItem","isViewable","Boolean","changed","prevIndex","prevViewableItem","currentViewableItem","event","nativeEvent","contentInset","layoutMeasurement","min","contentOffset","contentSize","nextState","setState","onScroll","onEndReached","onEndReachedThreshold","distanceFromEnd","endReached","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","total","sectionLength","keyExtractor","hideMarginalsOnEmpty","hideHeaderOnEmpty","hideFooterOnEmpty","columnWrapperStyle","placeholder","placeholderComponent","placeholderImage","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderHeader","renderFooter","renderSectionHeader","renderItem","renderSectionFooter","renderEmpty","isEmptyList","isEmpty","emptyItem","headerIndex","findIndex","footerIndex","sectionPositions","String","shift","stickySectionHeadersEnabled","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderScrollViewWrapper","actionSheetScrollRef","onRefresh","refreshing","wrapper","val","handleScroll","listener","useNativeDriver","refreshControl","RefreshControl","contentContainerStyle","flexDirection","flexWrap","maxWidth","overwriteProps","ref","onMomentumScrollEnd","onScrollEndDrag","scrollViewProps","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","left","right","bool","elementType","element","func","keyboardDismissMode","keyboardShouldPersistTaps","removeClippedSubviews","isRequired","scrollEventThrottle","styles","StyleSheet","create","block","justifyContent","padding","Block","SectionList","useState","numberColumns","setNumberColumns","SafeAreaView","container","KeyboardAvoidingView","compare","parseInt","title","description","icon","TextInput","label","keyboardType","onChangeText","Subheading","StatusBar","CompareList","id","header","FlatList","paddingTop","console","log","SelectList","selected","setSelected","Checkbox","Item","mode","status","includes","onPress","isSelected","selectedIndex","newSelectedItems","onSelect","rowHeight","Appbar","Content","headerContent","subtitle","elevation","alignItems","containerBottom","marginBottom","Home","useTheme","colors","background","surface","openSelector","setOpenSelector","setInsetBottom","insets","useSafeAreaInsets","selectedOption","find","backgroundColor","paddingBottom","Header","TouchableOpacity","editable","onTouchStart","Icon","name","MultiSelectList","absoluteFill","App","module","exports"],"mappings":"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","file":"static/js/app.ac327c92.chunk.js","sourcesContent":["import React from \"react\";\n/**\n * Is numeric.\n * @param {any} num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n/**\n * Process block.\n * @param {number} containerHeight\n * @param {number} scrollTop\n * @param {number|null|undefined} batchSizeThreshold\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = ({\n  containerHeight,\n  scrollTop,\n  batchSizeThreshold = 1,\n}) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n\n  const batchSize = Math.ceil(\n    containerHeight * Math.max(0.5, batchSizeThreshold)\n  );\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return {\n    batchSize,\n    blockStart,\n    blockEnd,\n  };\n};\n/**\n * Autobind context to class methods.\n * @param {object} self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n\n    if (exclude) {\n      return !exclude.some(match);\n    }\n\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object)\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n\n  return self;\n};\n/**\n * Merge styles\n * @param {array|object|null|undefined} style\n * @param {array|object} defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle = {}) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n\n  return style;\n};\n/**\n * Get element from component.\n * @param {React.node} Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null\n    ? /*#__PURE__*/ React.isValidElement(Component)\n      ? Component\n      : /*#__PURE__*/ React.createElement(Component, null)\n    : null;\n};\n//# sourceMappingURL=utils.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\nimport { mergeViewStyle } from \"./utils\";\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n  EMPTY: \"empty\",\n};\n/**\n * List item.\n * @param {string} uniqueKey\n * @param {React.node} children\n * @param {array|object|null|undefined} style\n * @param {number} height\n * @param {number} width\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListItem = ({\n  uniqueKey,\n  children,\n  style,\n  height,\n  width = \"100%\",\n}) => {\n  return /*#__PURE__*/ React.createElement(\n    View,\n    {\n      key: uniqueKey,\n      style: mergeViewStyle(style, {\n        height,\n        width,\n      }),\n    },\n    children\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  uniqueKey: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\nexport default /*#__PURE__*/ memo(BigListItem);\n//# sourceMappingURL=BigListItem.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, Image } from \"react-native\";\nimport { createElement, mergeViewStyle } from \"./utils\";\n\nconst BigListPlaceholder = ({\n  component,\n  image,\n  style,\n  height,\n  width = \"100%\",\n}) => {\n  const bgStyles = {\n    position: \"absolute\",\n    resizeMode: \"repeat\",\n    overflow: \"visible\",\n    backfaceVisibility: \"visible\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  };\n  return /*#__PURE__*/ React.createElement(\n    Animated.View,\n    {\n      style: mergeViewStyle(style, {\n        height,\n        width,\n      }),\n    },\n    createElement(component) ||\n      /*#__PURE__*/ React.createElement(Image, {\n        source: image || require(\"./assets/placeholder.png\"),\n        style: bgStyles,\n      })\n  );\n};\n\nBigListPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\nBigListPlaceholder.defaultProps = {\n  width: \"100%\",\n};\nexport default /*#__PURE__*/ memo(BigListPlaceholder);\n//# sourceMappingURL=BigListPlaceholder.js.map\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true,\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nimport { BigListItemType } from \"./BigListItem\";\n\nclass BigListItemRecycler {\n  /**\n   * Constructor.\n   * @param {object[]} items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, index } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${index}`] = item;\n    });\n  }\n  /**\n   * Items for type.\n   * @param {any} type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n  /**\n   * Get item.\n   * @param {any} type\n   * @param {number} position\n   * @param {number} height\n   * @param {int} section\n   * @param {int} index\n   * @returns {{section: int, position: number, index: number, type: any, key: number, height: int}}\n   */\n  get({ type, position, height, section = 0, index = 0 }) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${index}`;\n    let item = items[itemKey];\n\n    if (item == null) {\n      item = {\n        type,\n        key: -1,\n        position,\n        height,\n        section,\n        index,\n      };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n\n    return item;\n  }\n  /**\n   * Fill.\n   */\n  fill() {\n    Object.values(BigListItemType).forEach((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      Object.values(items).forEach(({ key }) => {\n        const item = pendingItems[index];\n\n        if (item == null) {\n          return false;\n        }\n\n        item.key = key;\n        index++;\n      });\n\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n\n      pendingItems.length = 0;\n    });\n  }\n}\n\n_defineProperty(BigListItemRecycler, \"lastKey\", 0);\n\nexport default BigListItemRecycler;\n//# sourceMappingURL=BigListItemRecycler.js.map\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param {ScrollView} scrollView\n   * @param {array[]|object|null|undefined} sections\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|function|null|undefined} insetTop\n   * @param {number|function|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   */\n  constructor({\n    scrollView,\n    sections,\n    headerHeight,\n    footerHeight,\n    sectionHeaderHeight,\n    itemHeight,\n    sectionFooterHeight,\n    insetTop,\n    insetBottom,\n    numColumns,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeaderHeight = sectionHeaderHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n    this.numColumns = numColumns;\n  }\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, index) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, index);\n  }\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeaderHeight(section) {\n    const { sectionHeaderHeight } = this;\n    return isNumeric(sectionHeaderHeight)\n      ? Number(sectionHeaderHeight)\n      : sectionHeaderHeight(section);\n  }\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n  /**\n   * Process list items.\n   * @param {number} top\n   * @param {number} bottom\n   * @param {array} prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    const items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n    let position;\n    let counter = -1; // Counter of items per row pushed\n\n    let height = this.insetTop;\n    let spacerHeight = height;\n    /**\n     * The width of the row is the entire line.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isFullRow = (item) => {\n      // Only items can be rendered with column format, so all others are full row\n      return item.type !== BigListItemType.ITEM;\n    };\n    /**\n     * Is visible below.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (item) => {\n      const { height: itemHeight } = item;\n      counter = -1;\n\n      if (height > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n    /**\n     * Is the item visible.\n     * @param {object} item\n     * @param {bool} force\n     * @returns {boolean}\n     */\n    const isVisible = (item, force = false) => {\n      // Check section headers visibility below\n      if (item.type === BigListItemType.SECTION_HEADER) {\n        return isVisibleBelow(item);\n      } // Dimensions\n\n      const { height: itemHeight } = item;\n      const fullRow = isFullRow(item);\n      const prevHeight = height; // Increase or reset counter\n\n      counter = fullRow ? -1 : counter + 1;\n\n      if (fullRow || counter % this.numColumns === 0) {\n        height += itemHeight;\n      } // Check if is visible\n\n      if (force || (height > top && prevHeight < bottom)) {\n        return true;\n      } else {\n        if (fullRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n\n        return false;\n      }\n    };\n    /**\n     * Get recycled views and push items.\n     * @param {object} itemsArray\n     */\n    const push = (...itemsArray) => {\n      itemsArray.forEach((item) => {\n        items.push(recycler.get(item));\n      });\n    };\n    /**\n     * Push spacer.\n     * @param {object} item\n     */\n    const pushSpacer = (item) => {\n      if (spacerHeight > 0) {\n        push({\n          type: BigListItemType.SPACER,\n          position: item.position - spacerHeight,\n          height: spacerHeight,\n          section: item.section,\n          index: item.index,\n        });\n        spacerHeight = 0;\n      }\n    };\n    /**\n     * Push the item when is visible.\n     * @param {object} item\n     * @param {bool} force\n     */\n    const pushItem = (item, force = false) => {\n      if (isVisible(item, force)) {\n        pushSpacer(item);\n        push(item);\n      }\n    };\n    /**\n     * Calculate spacer height.\n     */\n    const getSpacerHeight = () => {\n      let itemsCounter = -1;\n      return items.reduce((totalHeight, item, i) => {\n        if (i !== items.length - 1) {\n          const fullRow = isFullRow(item);\n          itemsCounter = fullRow ? 0 : itemsCounter + 1;\n\n          if (fullRow || itemsCounter % this.numColumns === 0) {\n            return totalHeight + item.height;\n          }\n        }\n\n        return totalHeight;\n      }, 0);\n    }; // Header\n\n    const headerHeight = this.getHeaderHeight();\n\n    if (headerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.HEADER,\n          position: position,\n          height: headerHeight,\n        },\n        true\n      );\n    } // Sections\n\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n\n      if (rows === 0) {\n        continue;\n      } // Section Header\n\n      const sectionHeaderHeight = this.getSectionHeaderHeight(section);\n      position = height;\n      height += sectionHeaderHeight;\n\n      if (\n        section > 1 &&\n        items.length > 0 &&\n        items[items.length - 1].type === BigListItemType.SECTION_HEADER\n      ) {\n        // Top Spacer\n        const initialSpacerHeight = getSpacerHeight();\n        const prevSection = items[items.length - 1];\n        items.splice(0, items.length);\n        push(\n          {\n            type: BigListItemType.HEADER,\n            position: position,\n            height: headerHeight,\n          },\n          {\n            type: BigListItemType.SPACER,\n            position: 0,\n            height: initialSpacerHeight - headerHeight,\n            section: prevSection.section,\n            index: 0,\n          },\n          prevSection\n        );\n      }\n\n      pushItem({\n        type: BigListItemType.SECTION_HEADER,\n        position: position,\n        height: sectionHeaderHeight,\n        section: section,\n      }); // Items\n\n      let itemHeight = this.getItemHeight(section);\n\n      for (let index = 0; index < rows; index++) {\n        if (!this.uniform) {\n          itemHeight = this.getItemHeight(section, index);\n        }\n\n        position = height;\n        pushItem({\n          type: BigListItemType.ITEM,\n          position: position,\n          height: itemHeight,\n          section: section,\n          index: index,\n        });\n      } // Section Footer\n\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n\n      if (sectionFooterHeight > 0) {\n        position = height;\n        pushItem({\n          type: BigListItemType.SECTION_FOOTER,\n          position: position,\n          height: sectionFooterHeight,\n          section: section,\n        });\n      }\n    } // Footer\n\n    const footerHeight = this.getFooterHeight();\n\n    if (footerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.FOOTER,\n          position: position,\n          height: footerHeight,\n        },\n        true\n      );\n    } // Bottom Spacer\n\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n\n    if (spacerHeight > 0) {\n      push({\n        type: BigListItemType.SPACER,\n        position: height - spacerHeight,\n        height: spacerHeight,\n        section: sections.length,\n      });\n    }\n\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n  /**\n   * Scroll to position.\n   * @param {int} targetSection\n   * @param {int} targetIndex\n   * @param {boolean} animated\n   */\n  scrollToPosition(targetSection, targetIndex, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundIndex = false;\n\n    while (section <= targetSection) {\n      const rows = Math.ceil(sections[section] / this.numColumns);\n\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n\n      scrollTop += this.getSectionHeaderHeight(section);\n\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n\n        if (section === targetSection) {\n          scrollTop += uniformHeight * Math.ceil(targetIndex / this.numColumns);\n          foundIndex = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && index < targetIndex)\n          ) {\n            scrollTop += this.getItemHeight(\n              section,\n              Math.ceil(index / this.numColumns)\n            );\n          } else if (section === targetSection && index === targetIndex) {\n            foundIndex = true;\n            break;\n          }\n        }\n      }\n\n      if (!foundIndex) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n\n      section += 1;\n    }\n\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeaderHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n//# sourceMappingURL=BigListProcessor.js.map\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n/**\n * List section.\n * @param {number} position\n * @param {number} height\n * @param {number} nextSectionPosition\n * @param {Animated.Value} scrollTopValue\n * @param {React.node} children\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    /*#__PURE__*/ React.isValidElement(child) &&\n    /*#__PURE__*/ React.cloneElement(child, {\n      style: {\n        flex: 1,\n      },\n    });\n  const viewStyle = [\n    /*#__PURE__*/ React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      width: \"100%\",\n      transform: [\n        {\n          translateY,\n        },\n      ],\n    },\n  ];\n  return /*#__PURE__*/ React.createElement(\n    Animated.View,\n    {\n      style: viewStyle,\n    },\n    fillChildren\n  );\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\nexport default /*#__PURE__*/ memo(BigListSection);\n//# sourceMappingURL=BigListSection.js.map\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n} from \"react-native\";\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListPlaceholder from \"./BigListPlaceholder\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, mergeViewStyle, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this); // Initialize properties and state\n\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue =\n      this.props.initialScrollIndex || new Animated.Value(0);\n    this.scrollView = /*#__PURE__*/ React.createRef();\n    this.state = this.getListState();\n    this.viewableItems = [];\n  }\n  /**\n   * Get list state.\n   * @param {array} data\n   * @param {array[]|object|null|undefined} sections\n   * @param {array} prevItems\n   * @param {number|null} batchSizeThreshold\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|null|undefined} insetTop\n   * @param {number|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   * @param {number|null|undefined} batchSize\n   * @param {number|null|undefined} blockStart\n   * @param {number|null|undefined} blockEnd\n   * @param {function|null|undefined} getItemLayout\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      sections,\n      batchSizeThreshold,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      itemHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n      getItemLayout,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems }\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || []\n      ),\n    };\n  }\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    const stateProps = props || this.props;\n    return this.constructor.getListState(\n      stateProps,\n      options ||\n        processBlock({\n          containerHeight: this.containerHeight,\n          scrollTop: this.scrollTop,\n          batchSizeThreshold: stateProps.batchSizeThreshold,\n        })\n    );\n  }\n  /**\n   * Get sections item lengths.\n   * @param {array[]|object<string, object>|null|undefined} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n\n    return [data === null || data === void 0 ? void 0 : data.length];\n  }\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n  /**\n   * Get item height.\n   * @param {number} itemHeight\n   * @param {function|null|undefined} getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n\n    if (itemHeight) {\n      return itemHeight;\n    }\n\n    return null;\n  }\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n  /**\n   * Is item visible.\n   * @param {int} index\n   * @param {int} section\n   * @returns {boolean}\n   */\n  isVisible({ index, section = 0 }) {\n    const position = this.getItemOffset({\n      index,\n      section,\n    });\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n  /**\n   * Provides a reference to the underlying scroll component.\n   * @returns {ScrollView|null}\n   */\n  getNativeScrollRef() {\n    return this.scrollView.current;\n  }\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n\n    return null;\n  }\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  flashScrollIndicators() {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      scrollView.flashScrollIndicators();\n    }\n  }\n  /**\n   * Scrolls to a given x, y offset, either immediately, with a smooth animation.\n   * @param {int} x\n   * @param {int} y\n   * @param {bool} animated\n   */\n  scrollTo({ x = 0, y = 0, animated = true }) {\n    const scrollView = this.getNativeScrollRef();\n\n    if (scrollView != null) {\n      scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated,\n      });\n    }\n  }\n  /**\n   * Scroll to index.\n   * @param {int} index\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToIndex({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n\n    return false;\n  }\n  /**\n   * Alias to scrollToIndex with polyfill for SectionList.\n   * @see scrollToIndex\n   * @param {int} itemIndex\n   * @param {int} sectionIndex\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToLocation({ itemIndex, sectionIndex, animated = true }) {\n    return this.scrollToIndex({\n      section: sectionIndex,\n      index: itemIndex,\n      animated,\n    });\n  }\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        })\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n\n    return this.scrollTo({\n      index,\n      animated,\n    });\n  }\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    const scrollRef = this.getNativeScrollRef();\n\n    if (scrollRef != null) {\n      scrollRef.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({\n      section: 0,\n      index: 0,\n      animated,\n    });\n  }\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n\n    return this.scrollTo({\n      section,\n      index,\n      animated,\n    });\n  }\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({\n      index: 0,\n      section,\n      animated,\n    });\n  }\n  /**\n   * On viewable items changed.\n   */\n  onViewableItemsChanged() {\n    const { onViewableItemsChanged } = this.props;\n\n    if (onViewableItemsChanged) {\n      const prevItems = this.viewableItems;\n      const currentItems = this.state.items\n        .map(({ type, section, index, key }) => {\n          if (type === BigListItemType.ITEM) {\n            return {\n              item: this.getItem({\n                section,\n                index,\n              }),\n              key: key,\n              index: (section + 1) * index,\n              isViewable: this.isVisible({\n                section,\n                index,\n              }),\n            };\n          }\n\n          return false;\n        })\n        .filter(Boolean);\n      this.viewableItems = currentItems.filter((item) => item.isViewable);\n      const changed = prevItems\n        .filter(\n          ({ index: prevIndex }) =>\n            !this.viewableItems.some(\n              ({ index: nextIndex }) => nextIndex === prevIndex\n            )\n        )\n        .map((item) => {\n          item.isViewable = this.isVisible({\n            section: item.section,\n            index: item.index,\n          });\n          return item;\n        });\n      const prevViewableItem = prevItems.length;\n      const currentViewableItem = this.viewableItems.length;\n\n      if (changed.length > 0 || prevViewableItem !== currentViewableItem) {\n        onViewableItemsChanged({\n          viewableItems: this.viewableItems,\n          changed,\n        });\n      }\n    }\n  }\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold, onViewableItemsChanged } =\n      this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight\n    );\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    if (onViewableItemsChanged) {\n      this.onViewableItemsChanged();\n    }\n\n    const { onScroll, onEndReached, onEndReachedThreshold } = this.props;\n\n    if (onScroll != null) {\n      onScroll(event);\n    }\n\n    const { layoutMeasurement, contentOffset, contentSize } = nativeEvent;\n    const distanceFromEnd =\n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n\n    if (distanceFromEnd <= layoutMeasurement.height * onEndReachedThreshold) {\n      if (!this.endReached) {\n        this.endReached = true;\n        onEndReached &&\n          onEndReached({\n            distanceFromEnd,\n          });\n      }\n    } else {\n      this.endReached = false;\n    }\n  }\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    const { onLayout } = this.props;\n\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, sectionLength) => {\n      return total + sectionLength;\n    }, 0);\n    return length === 0;\n  }\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n  /**\n   * Get item scroll view offset.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItemOffset({ section = 0, index }) {\n    const {\n      insetTop,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      itemHeight,\n      numColumns,\n    } = this.props;\n    const headers = this.hasSections() ? section + 1 : 1;\n    const roundedIndex =\n      index % numColumns ? index - (index % numColumns) + numColumns : index;\n    return (\n      insetTop +\n      headerHeight +\n      headers * sectionHeaderHeight +\n      section * sectionFooterHeight +\n      roundedIndex * itemHeight\n    );\n  }\n  /**\n   * Get item data.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItem({ index, section = 0 }) {\n    if (this.hasSections()) {\n      return this.props.sections[section][index];\n    } else {\n      return this.props.data[index];\n    }\n  }\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      keyExtractor,\n      numColumns,\n      hideMarginalsOnEmpty,\n      hideHeaderOnEmpty,\n      hideFooterOnEmpty,\n      columnWrapperStyle,\n      placeholder,\n      placeholderComponent,\n      placeholderImage,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state; // On empty list\n\n    const isEmptyList = this.isEmpty();\n    const emptyItem = ListEmptyComponent\n      ? createElement(ListHeaderComponent)\n      : renderEmpty\n      ? renderEmpty()\n      : null;\n\n    if (isEmptyList && (ListEmptyComponent || renderEmpty)) {\n      if (hideMarginalsOnEmpty || (hideHeaderOnEmpty && hideFooterOnEmpty)) {\n        // Render empty\n        return emptyItem;\n      } else {\n        // Add empty item\n        const headerIndex = items.findIndex(\n          (item) => item.type === BigListItemType.HEADER\n        );\n        items.splice(headerIndex, 0, {\n          type: BigListItemType.EMPTY,\n          key: \"empty\",\n        });\n\n        if (hideHeaderOnEmpty) {\n          // Hide header\n          items.splice(headerIndex, 1);\n        }\n\n        if (hideFooterOnEmpty) {\n          // Hide footer\n          const footerIndex = items.findIndex(\n            (item) => item.type === BigListItemType.FOOTER\n          );\n          items.splice(footerIndex, 1);\n        }\n      }\n    } // Sections positions\n\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION_HEADER) {\n        sectionPositions.push(position);\n      }\n    }); // Render items\n\n    const children = [];\n    items.forEach(({ type, key, position, height, section, index }) => {\n      const itemKey = key || position; // Fallback fix\n\n      let uniqueKey = String((section + 1) * index);\n      let child;\n      let style;\n\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListHeaderComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = mergeViewStyle(\n              {\n                width: \"100%\",\n              },\n              ListHeaderComponentStyle\n            );\n          } else {\n            child = renderHeader();\n            style = {\n              width: \"100%\",\n            };\n          }\n\n        // falls through\n\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = mergeViewStyle(\n                {\n                  width: \"100%\",\n                },\n                ListFooterComponentStyle\n              );\n            } else {\n              child = renderFooter();\n              style = {\n                width: \"100%\",\n              };\n            }\n          }\n\n        // falls through\n\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            height = isEmptyList ? 0 : height; // Hide section footer on empty\n\n            child = renderSectionFooter(section);\n            style = {\n              width: \"100%\",\n            };\n          }\n\n        // falls through\n\n        case BigListItemType.ITEM:\n          if (type === BigListItemType.ITEM) {\n            const item = this.getItem({\n              section,\n              index,\n            });\n            uniqueKey = keyExtractor\n              ? keyExtractor(item, uniqueKey)\n              : uniqueKey;\n            style = numColumns > 1 ? columnWrapperStyle || {} : {};\n\n            if (this.hasSections()) {\n              child = renderItem({\n                item,\n                section,\n                index,\n              });\n            } else {\n              child = renderItem({\n                item,\n                index,\n              });\n            }\n          }\n\n          if (child != null) {\n            children.push(\n              /*#__PURE__*/ React.createElement(\n                BigListItem,\n                {\n                  key: itemKey,\n                  uniqueKey: uniqueKey,\n                  height: height,\n                  width: 100 / numColumns + \"%\",\n                  style: style,\n                },\n                child\n              )\n            );\n          }\n\n          break;\n\n        case BigListItemType.EMPTY:\n          children.push(\n            /*#__PURE__*/ React.createElement(\n              View,\n              {\n                key: itemKey,\n              },\n              emptyItem\n            )\n          );\n          break;\n\n        case BigListItemType.SPACER:\n          children.push(\n            placeholder\n              ? /*#__PURE__*/ React.createElement(BigListPlaceholder, {\n                  key: itemKey,\n                  height: height,\n                  image: placeholderImage,\n                  component: placeholderComponent,\n                })\n              : /*#__PURE__*/ React.createElement(BigListItem, {\n                  key: itemKey,\n                  height: height,\n                })\n          );\n          break;\n\n        case BigListItemType.SECTION_HEADER:\n          height = isEmptyList ? 0 : height; // Hide section header on empty\n\n          sectionPositions.shift();\n          child = renderSectionHeader(section);\n\n          if (child != null) {\n            children.push(\n              /*#__PURE__*/ React.createElement(\n                BigListSection,\n                {\n                  key: itemKey,\n                  height: height,\n                  position: position,\n                  nextSectionPosition: sectionPositions[0],\n                  scrollTopValue: this.scrollTopValue,\n                },\n                child\n              )\n            );\n          }\n\n          break;\n      }\n    });\n    return children;\n  }\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    const { stickySectionHeadersEnabled } = this.props;\n    const scrollView = this.getNativeScrollRef();\n\n    if (\n      stickySectionHeadersEnabled &&\n      scrollView != null &&\n      Platform.OS !== \"web\"\n    ) {\n      // Disabled on web\n      this.scrollTopValueAttachment = Animated.attachNativeEvent(\n        scrollView,\n        \"onScroll\",\n        [\n          {\n            nativeEvent: {\n              contentOffset: {\n                y: this.scrollTopValue,\n              },\n            },\n          },\n        ]\n      );\n    }\n  }\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.initialScrollIndex !== this.props.initialScrollIndex) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      keyExtractor,\n      placeholder,\n      placeholderImage,\n      placeholderComponent,\n      sections,\n      initialScrollIndex,\n      columnWrapperStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      stickySectionHeadersEnabled,\n      onEndReached,\n      onEndReachedThreshold,\n      onRefresh,\n      refreshing,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      hideMarginalsOnEmpty,\n      hideFooterOnEmpty,\n      hideHeaderOnEmpty,\n      ...props\n    } = this.props;\n\n    const wrapper = renderScrollViewWrapper || ((val) => val);\n\n    const handleScroll =\n      stickySectionHeadersEnabled && Platform.OS === \"web\"\n        ? Animated.event(\n            [\n              {\n                nativeEvent: {\n                  contentOffset: {\n                    y: this.scrollTopValue,\n                  },\n                },\n              },\n            ],\n            {\n              listener: (event) => this.onScroll(event),\n              useNativeDriver: false,\n            }\n          )\n        : this.onScroll;\n    const defaultProps = {\n      refreshControl:\n        onRefresh && !this.props.refreshControl\n          ? /*#__PURE__*/ React.createElement(RefreshControl, {\n              refreshing: refreshing,\n              onRefresh: onRefresh,\n            })\n          : null,\n      contentContainerStyle: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        maxWidth: \"100%\",\n      },\n    };\n    const overwriteProps = {\n      ref: (ref) => {\n        this.scrollView.current = ref;\n\n        if (actionSheetScrollRef) {\n          actionSheetScrollRef.current = ref;\n        }\n      },\n      onScroll: handleScroll,\n      onLayout: this.onLayout,\n      onMomentumScrollEnd: this.onScrollEnd,\n      onScrollEndDrag: this.onScrollEnd,\n    };\n    const scrollViewProps = { ...defaultProps, ...props, ...overwriteProps }; // Content container style merge\n\n    scrollViewProps.contentContainerStyle = mergeViewStyle(\n      props.contentContainerStyle,\n      defaultProps.contentContainerStyle\n    );\n    const scrollView = wrapper(\n      /*#__PURE__*/ React.createElement(\n        ScrollView,\n        scrollViewProps,\n        this.renderItems()\n      )\n    );\n    return /*#__PURE__*/ React.createElement(\n      View,\n      {\n        style: {\n          flex: 1,\n          maxHeight: Platform.select({\n            web: \"100vh\",\n            default: \"100%\",\n          }),\n        },\n      },\n      scrollView,\n      renderAccessory != null ? renderAccessory(this) : null\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  batchSizeThreshold: PropTypes.number,\n  bottom: PropTypes.number,\n  numColumns: PropTypes.number,\n  columnWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  placeholder: PropTypes.bool,\n  placeholderImage: PropTypes.any,\n  placeholderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onLayout: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  onViewableItemsChanged: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSectionHeader: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  refreshing: PropTypes.bool,\n  scrollEventThrottle: PropTypes.number,\n  initialScrollIndex: PropTypes.number,\n  hideMarginalsOnEmpty: PropTypes.bool,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeaderHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n  stickySectionHeadersEnabled: PropTypes.bool,\n};\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  refreshing: false,\n  batchSizeThreshold: 1,\n  numColumns: 1,\n  placeholder: Platform.select({\n    web: false,\n    default: false,\n    /* TODO: default disabled until a solution for different screen sizes is found */\n  }),\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSectionHeader: () => null,\n  renderSectionFooter: () => null,\n  hideMarginalsOnEmpty: false,\n  hideFooterOnEmpty: false,\n  hideHeaderOnEmpty: false,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeaderHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  stickySectionHeadersEnabled: true,\n  removeClippedSubviews: false,\n  scrollEventThrottle: Platform.OS === \"web\" ? 5 : 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: {\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n  },\n  onEndReachedThreshold: 0,\n};\nexport default BigList;\n//# sourceMappingURL=BigList.js.map\n","import BigList from \"./BigList\";\nexport default BigList;\n//# sourceMappingURL=index.js.map\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","import React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading, TextInput } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const [numberColumns, setNumberColumns] = useState(3);\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <View>\n      <TextInput\n        label=\"Number of columns (max 10)\"\n        value={String(numberColumns)}\n        type=\"numeric\"\n        keyboardType=\"numeric\"\n        onChangeText={(value) => {\n          const num = parseInt(value, 10) || \"\";\n          setNumberColumns(num);\n        }}\n      />\n    </View>\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            numColumns={Math.min(\n              Math.max(parseInt(numberColumns, 10) || 1, 1),\n              10,\n            )}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item\n      title=\"BigList\"\n      description=\"react-native-big-list\"\n      style={styles.header}\n    />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={styles.container}\n            data={data}\n            // Item\n            itemHeight={90}\n            renderItem={renderItem}\n            renderEmpty={renderEmpty}\n            // Header\n            headerHeight={90}\n            renderHeader={renderHeader}\n            // Footer\n            footerHeight={100}\n            renderFooter={renderFooter}\n            onEndReached={() => console.log(\"ciao\")}\n            onEndReachedThreshold={0.5}\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n});\n","import React, { useState } from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport BigList from \"react-native-big-list\";\nimport { Checkbox } from \"react-native-paper\";\n\nimport data from \"../data/data.json\";\n\nconst SelectList = () => {\n  const [selected, setSelected] = useState([]);\n\n  const onSelect = (value, isSelected) => {\n    if (!isSelected) {\n      const selectedIndex = selected.indexOf(value);\n      const newSelectedItems = [...selected];\n      newSelectedItems.splice(selectedIndex, 1);\n      setSelected(newSelectedItems);\n    } else {\n      setSelected([...selected, value]);\n    }\n\n    // TODO: your logics\n\n    console.log(\n      \"The value\",\n      value,\n      \"is \" + (isSelected ? \"selected\" : \"unselected\"),\n    );\n  };\n\n  const renderItem = ({ item }) => {\n    return (\n      <Checkbox.Item\n        mode=\"ios\"\n        label={item.title}\n        status={selected.includes(item.id) ? \"checked\" : \"unchecked\"}\n        onPress={() => {\n          onSelect(item.id, !selected.includes(item.id));\n        }}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList data={data} renderItem={renderItem} rowHeight={50} />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default SelectList;\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSectionHeader = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeaderHeight={75}\n          renderSectionHeader={renderSectionHeader}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport BigList from \"react-native-big-list\";\nimport { Checkbox } from \"react-native-paper\";\n\nconst SelectList = ({ data, value, onSelect }) => {\n  const [selected, setSelected] = useState(value);\n  const renderItem = ({ item }) => {\n    return (\n      <Checkbox.Item\n        mode=\"ios\"\n        label={item.label}\n        status={selected === item.value ? \"checked\" : \"unchecked\"}\n        onPress={() => {\n          setSelected(item.value);\n          onSelect(item.value);\n        }}\n      />\n    );\n  };\n\n  return <BigList data={data} renderItem={renderItem} rowHeight={50} />;\n};\n\nexport default SelectList;\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { Appbar, TextInput, useTheme } from \"react-native-paper\";\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\n\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport MultiSelectList from \"./lists/MultiSelectList\";\nimport SectionList from \"./lists/SectionList\";\nimport SelectList from \"./lists/SelectList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [openSelector, setOpenSelector] = useState(false);\n  const [selected, setSelected] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  const insets = useSafeAreaInsets();\n  const options = [\n    { label: \"Standard List\", value: \"standard\" },\n    { label: \"Columns List\", value: \"columns\" },\n    { label: \"Sections List\", value: \"sections\" },\n    { label: \"Multiselect List\", value: \"multiselect\" },\n    { label: \"Compare List\", value: \"compare\" },\n  ];\n  const selectedOption = options.find((item) => item.value === selected);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + insets.bottom + 64,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <TouchableOpacity\n        style={[\n          styles.containerBottom,\n          { backgroundColor: surface, bottom: insets.bottom },\n        ]}\n        onPress={() => setOpenSelector(!openSelector)}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <TextInput\n          label=\"View mode\"\n          editable={false}\n          onTouchStart={() => setOpenSelector(true)}\n          value={selectedOption.label}\n          right={\n            <TextInput.Icon\n              name=\"chevron-down\"\n              onPress={() => setOpenSelector(!openSelector)}\n            />\n          }\n        />\n      </TouchableOpacity>\n      {selected === \"standard\" ? (\n        <List />\n      ) : selected === \"columns\" ? (\n        <ColumnsList />\n      ) : selected === \"sections\" ? (\n        <SectionList />\n      ) : selected === \"multiselect\" ? (\n        <MultiSelectList />\n      ) : selected === \"compare\" ? (\n        <CompareList />\n      ) : null}\n\n      {openSelector && (\n        <View\n          style={[\n            StyleSheet.absoluteFill,\n            { flex: 1, backgroundColor: surface },\n          ]}\n        >\n          <Appbar.Header style={[styles.header, { height: 75 }]}>\n            <Appbar.Content\n              title=\"View mode\"\n              subtitle=\"Select the list view mode example...\"\n            />\n          </Appbar.Header>\n          <SelectList\n            data={options}\n            value={selected}\n            onSelect={(value) => {\n              setSelected(value);\n              setOpenSelector(false);\n            }}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <SafeAreaProvider>\n        <Home />\n      </SafeAreaProvider>\n    </PaperProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.b393bdf6.png\";"],"sourceRoot":""}