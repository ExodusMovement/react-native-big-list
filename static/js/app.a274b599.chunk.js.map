{"version":3,"sources":["lib/utils.js","lib/BigListItem.jsx","lib/BigListPlaceholder.jsx","lib/BigListItemRecycler.js","lib/BigListProcessor.js","lib/BigListSection.jsx","lib/BigList.jsx","lib/index.js","src/lists/components/Block.jsx","src/lists/ColumnsList.jsx","src/lists/CompareList.jsx","src/lists/List.jsx","src/lists/SectionList.jsx","src/lists/SelectList.jsx","src/Home.jsx","App.js","lib/assets/placeholder.png"],"names":["isNumeric","num","isNaN","parseFloat","isFinite","processBlock","containerHeight","scrollTop","batchSizeThreshold","batchSize","blockStart","blockEnd","Math","ceil","max","forEachObjIndexed","fn","obj","keyList","Object","keys","idx","length","key","mergeViewStyle","style","defaultStyle","Array","isArray","concat","push","unshift","createElement","Component","React","isValidElement","BigListItemType","SPACER","SPACER_BOTTOM","HEADER","SECTION_HEADER","ITEM","SECTION_FOOTER","FOOTER","BigListItem","children","height","width","View","propTypes","PropTypes","oneOfType","arrayOf","node","string","number","object","array","defaultProps","memo","BigListPlaceholder","component","image","Animated","Image","source","require","position","resizeMode","overflow","backfaceVisibility","flex","BigListItemRecycler","items","this","pendingItems","forEach","item","type","section","index","itemsForType","itemKey","lastKey","BigListProcessor","scrollView","sections","headerHeight","footerHeight","sectionHeaderHeight","itemHeight","sectionFooterHeight","insetTop","insetBottom","numColumns","uniform","Number","top","bottom","prevItems","recycler","counter","spacerHeight","isFullRow","isVisibleBelow","isVisible","force","fullRow","prevHeight","itemsArray","get","pushSpacer","pushItem","getSpacerHeight","itemsCounter","reduce","totalHeight","i","getHeaderHeight","rows","getSectionHeaderHeight","initialSpacerHeight","prevSection","splice","getItemHeight","getSectionFooterHeight","getFooterHeight","fill","targetSection","targetIndex","animated","foundIndex","uniformHeight","scrollTo","x","y","BigListSection","nextSectionPosition","scrollTopValue","inputRange","outputRange","collisionPoint","translateY","interpolate","child","Children","only","fillChildren","cloneElement","viewStyle","props","undefined","zIndex","transform","instanceOf","Value","BigList","self","exclude","filter","some","pattern","test","getAllProperties","properties","Set","getOwnPropertyNames","getOwnPropertySymbols","add","getPrototypeOf","prototype","constructor","descriptor","getOwnPropertyDescriptor","value","bind","autobind","initialScrollIndex","createRef","state","getListState","viewableItems","options","stateProps","data","getSectionLengths","getItemLayout","getItemOffset","current","getNativeScrollRef","sectionLengths","flashScrollIndicators","processor","getListProcessor","scrollToPosition","itemIndex","sectionIndex","scrollToIndex","hasSections","JSON","stringify","map","a","indexOf","offset","scrollRef","onViewableItemsChanged","currentItems","getItem","isViewable","Boolean","changed","prevIndex","event","nativeEvent","contentInset","layoutMeasurement","min","contentOffset","contentSize","nextState","setState","onScroll","onEndReached","onEndReachedThreshold","distanceFromEnd","endReached","layout","onLayout","renderAccessory","onScrollEnd","forceUpdate","total","sectionLength","columnWrapperStyle","placeholder","placeholderComponent","placeholderImage","ListEmptyComponent","ListFooterComponent","ListFooterComponentStyle","ListHeaderComponent","ListHeaderComponentStyle","renderHeader","renderFooter","renderSectionHeader","renderItem","renderSectionFooter","renderEmpty","isEmpty","sectionPositions","shift","stickySectionHeadersEnabled","Platform","OS","scrollTopValueAttachment","attachNativeEvent","prevProps","Error","detach","renderScrollViewWrapper","actionSheetScrollRef","onRefresh","refreshing","wrapper","val","handleScroll","listener","useNativeDriver","refreshControl","RefreshControl","contentContainerStyle","flexDirection","flexWrap","maxWidth","overwriteProps","ref","onMomentumScrollEnd","onScrollEndDrag","scrollViewProps","ScrollView","renderItems","maxHeight","select","web","default","layoutItemHeight","process","PureComponent","any","shape","left","right","bool","elementType","element","func","keyboardDismissMode","keyboardShouldPersistTaps","removeClippedSubviews","isRequired","scrollEventThrottle","styles","StyleSheet","create","block","justifyContent","padding","Block","SectionList","useState","numberColumns","setNumberColumns","SafeAreaView","container","KeyboardAvoidingView","parseInt","title","description","icon","TextInput","label","String","keyboardType","onChangeText","Subheading","StatusBar","CompareList","id","compare","header","FlatList","keyExtractor","paddingTop","RenderHeader","loaded","setLoaded","useEffect","timer","setTimeout","clearTimeout","Appbar","Content","headerContent","subtitle","elevation","alignItems","SelectList","selected","setSelected","Checkbox","Item","mode","status","onPress","rowHeight","containerBottom","marginBottom","row","paddingHorizontal","paddingVertical","Home","useTheme","colors","background","surface","checked","setChecked","setInsetBottom","backgroundColor","paddingBottom","Header","RadioButton","Group","onValueChange","newValue","TouchableRipple","Paragraph","pointerEvents","Android","App","module","exports"],"mappings":"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","file":"static/js/app.a274b599.chunk.js","sourcesContent":["import React from \"react\";\n\n/**\n * Is numeric.\n * @param {any} num\n * @returns {boolean}\n */\nexport const isNumeric = (num) => {\n  return !isNaN(parseFloat(num)) && isFinite(num);\n};\n\n/**\n * Process block.\n * @param {number} containerHeight\n * @param {number} scrollTop\n * @param {number|null|undefined} batchSizeThreshold\n * @returns {{blockStart: number, batchSize: number, blockEnd: number}}\n */\nexport const processBlock = ({\n  containerHeight,\n  scrollTop,\n  batchSizeThreshold = 1,\n}) => {\n  if (containerHeight === 0) {\n    return {\n      batchSize: 0,\n      blockStart: 0,\n      blockEnd: 0,\n    };\n  }\n  const batchSize = Math.ceil(\n    containerHeight * Math.max(0.5, batchSizeThreshold),\n  );\n  const blockNumber = Math.ceil(scrollTop / batchSize);\n  const blockStart = batchSize * blockNumber;\n  const blockEnd = blockStart + batchSize;\n  return { batchSize, blockStart, blockEnd };\n};\n\n/**\n * For each object indexed.\n * @param {function} fn\n * @param {object} obj\n * @returns {*}\n */\nexport const forEachObjIndexed = (fn, obj) => {\n  const keyList = Object.keys(obj);\n  let idx = 0;\n  while (idx < keyList.length) {\n    const key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n  return obj;\n};\n\n/**\n * Autobind context to class methods.\n * @param {object} self\n * @returns {{}}\n */\nexport const autobind = (self = {}) => {\n  const exclude = [\n    \"componentWillMount\",\n    \"UNSAFE_componentWillMount\",\n    \"render\",\n    \"getSnapshotBeforeUpdate\",\n    \"componentDidMount\",\n    \"componentWillReceiveProps\",\n    \"UNSAFE_componentWillReceiveProps\",\n    \"shouldComponentUpdate\",\n    \"componentWillUpdate\",\n    \"UNSAFE_componentWillUpdate\",\n    \"componentDidUpdate\",\n    \"componentWillUnmount\",\n    \"componentDidCatch\",\n    \"setState\",\n    \"forceUpdate\",\n  ];\n\n  const filter = (key) => {\n    const match = (pattern) =>\n      typeof pattern === \"string\" ? key === pattern : pattern.test(key);\n    if (exclude) {\n      return !exclude.some(match);\n    }\n    return true;\n  };\n\n  const getAllProperties = (object) => {\n    const properties = new Set();\n    do {\n      for (const key of Object.getOwnPropertyNames(object).concat(\n        Object.getOwnPropertySymbols(object),\n      )) {\n        properties.add([object, key]);\n      }\n    } while (\n      (object = Object.getPrototypeOf(object)) &&\n      object !== Object.prototype\n    );\n    return properties;\n  };\n\n  for (const [object, key] of getAllProperties(self.constructor.prototype)) {\n    if (key === \"constructor\" || !filter(key)) {\n      continue;\n    }\n    const descriptor = Object.getOwnPropertyDescriptor(object, key);\n    if (descriptor && typeof descriptor.value === \"function\") {\n      self[key] = self[key].bind(self);\n    }\n  }\n  return self;\n};\n\n/**\n * Merge styles\n * @param {array|object|null|undefined} style\n * @param {array|object} defaultStyle\n * @returns {*[]}\n */\nexport const mergeViewStyle = (style, defaultStyle = {}) => {\n  if (style == null) {\n    style = defaultStyle;\n  } else if (Array.isArray(style) && Array.isArray(defaultStyle)) {\n    defaultStyle.concat(style);\n    style = defaultStyle;\n  } else if (Array.isArray(defaultStyle)) {\n    defaultStyle.push(style);\n    style = defaultStyle;\n  } else if (Array.isArray(style)) {\n    style.unshift(defaultStyle);\n  } else {\n    style = [defaultStyle, style];\n  }\n  return style;\n};\n\n/**\n * Get element from component.\n * @param {React.node} Component\n * @returns {JSX.Element|[]|*}\n */\nexport const createElement = (Component) => {\n  return Component != null ? (\n    React.isValidElement(Component) ? (\n      Component\n    ) : (\n      <Component />\n    )\n  ) : null;\n};\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native\";\n\nimport { mergeViewStyle } from \"./utils\";\n\nexport const BigListItemType = {\n  SPACER: \"spacer\",\n  SPACER_BOTTOM: \"spacer_bottom\",\n  HEADER: \"header\",\n  SECTION_HEADER: \"section_header\",\n  ITEM: \"item\",\n  SECTION_FOOTER: \"section_footer\",\n  FOOTER: \"footer\",\n};\n\n/**\n * List item.\n * @param {React.node} children\n * @param {array|object|null|undefined} style\n * @param {number} height\n * @param {number} width\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListItem = ({ children, style, height, width = \"100%\" }) => {\n  return (\n    <View\n      style={mergeViewStyle(style, {\n        height,\n        width,\n      })}\n    >\n      {children}\n    </View>\n  );\n};\n\nBigListItem.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nBigListItem.defaultProps = {\n  width: \"100%\",\n};\n\nexport default memo(BigListItem);\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, Image } from \"react-native\";\n\nimport { createElement, mergeViewStyle } from \"./utils\";\n\nconst BigListPlaceholder = ({\n  component,\n  image,\n  style,\n  height,\n  width = \"100%\",\n}) => {\n  const bgStyles = {\n    position: \"absolute\",\n    resizeMode: \"repeat\",\n    overflow: \"visible\",\n    backfaceVisibility: \"visible\",\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n  };\n  return (\n    <Animated.View\n      style={mergeViewStyle(style, {\n        height,\n        width,\n      })}\n    >\n      {createElement(component) || (\n        <Image\n          source={image || require(\"./assets/placeholder.png\")}\n          style={bgStyles}\n        />\n      )}\n    </Animated.View>\n  );\n};\n\nBigListPlaceholder.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nBigListPlaceholder.defaultProps = {\n  width: \"100%\",\n};\n\nexport default memo(BigListPlaceholder);\n","import { BigListItemType } from \"./BigListItem\";\nimport { forEachObjIndexed } from \"./utils\";\n\nclass BigListItemRecycler {\n  static lastKey = 0;\n  /**\n   * Constructor.\n   * @param {object[]} items\n   */\n  constructor(items) {\n    this.items = {};\n    this.pendingItems = {};\n    items.forEach((item) => {\n      const { type, section, index } = item;\n      const [itemsForType] = this.itemsForType(type);\n      itemsForType[`${type}:${section}:${index}`] = item;\n    });\n  }\n\n  /**\n   * Items for type.\n   * @param {any} type\n   * @returns {(*|{}|*[])[]}\n   */\n  itemsForType(type) {\n    return [\n      this.items[type] || (this.items[type] = {}),\n      this.pendingItems[type] || (this.pendingItems[type] = []),\n    ];\n  }\n\n  /**\n   * Get item.\n   * @param {any} type\n   * @param {number} position\n   * @param {number} height\n   * @param {int} section\n   * @param {int} index\n   * @returns {{section: int, position: number, index: number, type: any, key: number, height: int}}\n   */\n  get({ type, position, height, section = 0, index = 0 }) {\n    const [items, pendingItems] = this.itemsForType(type);\n    const itemKey = `${type}:${section}:${index}`;\n    let item = items[itemKey];\n    if (item == null) {\n      item = { type, key: -1, position, height, section, index };\n      pendingItems.push(item);\n    } else {\n      item.position = position;\n      item.height = height;\n      delete items[itemKey];\n    }\n    return item;\n  }\n\n  /**\n   * Fill.\n   */\n  fill() {\n    forEachObjIndexed((type) => {\n      const [items, pendingItems] = this.itemsForType(type);\n      let index = 0;\n      forEachObjIndexed(({ key }) => {\n        const item = pendingItems[index];\n        if (item == null) {\n          return false;\n        }\n        item.key = key;\n        index++;\n      }, items);\n      for (; index < pendingItems.length; index++) {\n        pendingItems[index].key = ++BigListItemRecycler.lastKey;\n      }\n      pendingItems.length = 0;\n    }, BigListItemType);\n  }\n}\nexport default BigListItemRecycler;\n","import { BigListItemType } from \"./BigListItem\";\nimport BigListItemRecycler from \"./BigListItemRecycler\";\nimport { isNumeric } from \"./utils\";\n\nexport default class BigListProcessor {\n  /**\n   * Constructor.\n   * @param {ScrollView} scrollView\n   * @param {array[]|object|null|undefined} sections\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|function|null|undefined} insetTop\n   * @param {number|function|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   */\n  constructor({\n    scrollView,\n    sections,\n    headerHeight,\n    footerHeight,\n    sectionHeaderHeight,\n    itemHeight,\n    sectionFooterHeight,\n    insetTop,\n    insetBottom,\n    numColumns,\n  }) {\n    this.headerHeight = headerHeight;\n    this.footerHeight = footerHeight;\n    this.sectionHeaderHeight = sectionHeaderHeight;\n    this.itemHeight = itemHeight;\n    this.sectionFooterHeight = sectionFooterHeight;\n    this.sections = sections;\n    this.insetTop = insetTop;\n    this.insetBottom = insetBottom;\n    this.uniform = isNumeric(itemHeight);\n    this.scrollView = scrollView;\n    this.numColumns = numColumns;\n  }\n\n  /**\n   * Get item height.\n   * @returns {number|*}\n   */\n  getItemHeight(section, index) {\n    const { itemHeight } = this;\n    return isNumeric(itemHeight)\n      ? Number(itemHeight)\n      : itemHeight(section, index);\n  }\n\n  /**\n   * Get header height.\n   * @returns {number|*}\n   */\n  getHeaderHeight() {\n    const { headerHeight } = this;\n    return isNumeric(headerHeight) ? Number(headerHeight) : headerHeight();\n  }\n\n  /**\n   * Get footer height.\n   * @returns {number|*}\n   */\n  getFooterHeight() {\n    const { footerHeight } = this;\n    return isNumeric(footerHeight) ? Number(footerHeight) : footerHeight();\n  }\n\n  /**\n   * Get section height.\n   * @returns {number|*}\n   */\n  getSectionHeaderHeight(section) {\n    const { sectionHeaderHeight } = this;\n    return isNumeric(sectionHeaderHeight)\n      ? Number(sectionHeaderHeight)\n      : sectionHeaderHeight(section);\n  }\n\n  /**\n   * Get section footer height.\n   * @returns {number|*}\n   */\n  getSectionFooterHeight(section) {\n    const { sectionFooterHeight } = this;\n    return isNumeric(sectionFooterHeight)\n      ? Number(sectionFooterHeight)\n      : sectionFooterHeight(section);\n  }\n\n  /**\n   * Process list items.\n   * @param {number} top\n   * @param {number} bottom\n   * @param {array} prevItems\n   * @returns {{items: [], height: *}}\n   */\n  process(top, bottom, prevItems) {\n    const { sections } = this;\n    const items = [];\n    const recycler = new BigListItemRecycler(prevItems);\n\n    let position;\n    let counter = -1; // Counter of items per row pushed\n    let height = this.insetTop;\n    let spacerHeight = height;\n\n    /**\n     * The width of the row is the entire line.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isFullRow = (item) => {\n      // Only items can be rendered with column format, so all others are full row\n      return item.type !== BigListItemType.ITEM;\n    };\n\n    /**\n     * Is visible below.\n     * @param {object} item\n     * @returns {boolean}\n     */\n    const isVisibleBelow = (item) => {\n      const { height: itemHeight } = item;\n      counter = -1;\n      if (height > bottom) {\n        spacerHeight += itemHeight;\n        return false;\n      } else {\n        return true;\n      }\n    };\n\n    /**\n     * Is the item visible.\n     * @param {object} item\n     * @param {bool} force\n     * @returns {boolean}\n     */\n    const isVisible = (item, force = false) => {\n      // Check section headers visibility below\n      if (item.type === BigListItemType.SECTION_HEADER) {\n        return isVisibleBelow(item);\n      }\n      // Dimensions\n      const { height: itemHeight } = item;\n      const fullRow = isFullRow(item);\n      const prevHeight = height;\n      // Increase or reset counter\n      counter = fullRow ? -1 : counter + 1;\n      if (fullRow || counter % this.numColumns === 0) {\n        height += itemHeight;\n      }\n      // Check if is visible\n      if (force || (height > top && prevHeight < bottom)) {\n        return true;\n      } else {\n        if (fullRow || counter % this.numColumns === 0) {\n          spacerHeight += itemHeight;\n        }\n        return false;\n      }\n    };\n\n    /**\n     * Get recycled views and push items.\n     * @param {object} itemsArray\n     */\n    const push = (...itemsArray) => {\n      itemsArray.forEach((item) => {\n        items.push(recycler.get(item));\n      });\n    };\n\n    /**\n     * Push spacer.\n     * @param {object} item\n     */\n    const pushSpacer = (item) => {\n      if (spacerHeight > 0) {\n        push({\n          type: BigListItemType.SPACER,\n          position: item.position - spacerHeight,\n          height: spacerHeight,\n          section: item.section,\n          index: item.index,\n        });\n        spacerHeight = 0;\n      }\n    };\n\n    /**\n     * Push the item when is visible.\n     * @param {object} item\n     * @param {bool} force\n     */\n    const pushItem = (item, force = false) => {\n      if (isVisible(item, force)) {\n        pushSpacer(item);\n        push(item);\n      }\n    };\n\n    /**\n     * Calculate spacer height.\n     */\n    const getSpacerHeight = () => {\n      let itemsCounter = -1;\n      return items.reduce((totalHeight, item, i) => {\n        if (i !== items.length - 1) {\n          const fullRow = isFullRow(item);\n          itemsCounter = fullRow ? 0 : itemsCounter + 1;\n          if (fullRow || itemsCounter % this.numColumns === 0) {\n            return totalHeight + item.height;\n          }\n        }\n        return totalHeight;\n      }, 0);\n    };\n\n    // Header\n    const headerHeight = this.getHeaderHeight();\n    if (headerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.HEADER,\n          position: position,\n          height: headerHeight,\n        },\n        true,\n      );\n    }\n    // Sections\n    for (let section = 0; section < sections.length; section++) {\n      const rows = sections[section];\n      if (rows === 0) {\n        continue;\n      }\n      // Section Header\n      const sectionHeaderHeight = this.getSectionHeaderHeight(section);\n      position = height;\n      height += sectionHeaderHeight;\n      if (\n        section > 1 &&\n        items.length > 0 &&\n        items[items.length - 1].type === BigListItemType.SECTION_HEADER\n      ) {\n        // Top Spacer\n        const initialSpacerHeight = getSpacerHeight();\n        const prevSection = items[items.length - 1];\n        items.splice(0, items.length);\n        push(\n          {\n            type: BigListItemType.SPACER,\n            position: 0,\n            height: initialSpacerHeight,\n            section: prevSection.section,\n            index: 0,\n          },\n          prevSection,\n        );\n      }\n      pushItem({\n        type: BigListItemType.SECTION_HEADER,\n        position: position,\n        height: sectionHeaderHeight,\n        section: section,\n      });\n      // Items\n      let itemHeight = this.getItemHeight(section);\n      for (let index = 0; index < rows; index++) {\n        if (!this.uniform) {\n          itemHeight = this.getItemHeight(section, index);\n        }\n        position = height;\n        pushItem({\n          type: BigListItemType.ITEM,\n          position: position,\n          height: itemHeight,\n          section: section,\n          index: index,\n        });\n      }\n      // Section Footer\n      const sectionFooterHeight = this.getSectionFooterHeight(section);\n      if (sectionFooterHeight > 0) {\n        position = height;\n        pushItem({\n          type: BigListItemType.SECTION_FOOTER,\n          position: position,\n          height: sectionFooterHeight,\n          section: section,\n        });\n      }\n    }\n    // Footer\n    const footerHeight = this.getFooterHeight();\n    if (footerHeight > 0) {\n      position = height;\n      pushItem(\n        {\n          type: BigListItemType.FOOTER,\n          position: position,\n          height: footerHeight,\n        },\n        true,\n      );\n    }\n    // Bottom Spacer\n    height += this.insetBottom;\n    spacerHeight += this.insetBottom;\n    if (spacerHeight > 0) {\n      push({\n        type: BigListItemType.SPACER,\n        position: height - spacerHeight,\n        height: spacerHeight,\n        section: sections.length,\n      });\n    }\n    recycler.fill();\n    return {\n      height,\n      items,\n    };\n  }\n\n  /**\n   * Scroll to position.\n   * @param {int} targetSection\n   * @param {int} targetIndex\n   * @param {boolean} animated\n   */\n  scrollToPosition(targetSection, targetIndex, animated) {\n    const { sections, insetTop } = this;\n    let scrollTop = insetTop + this.getHeaderHeight();\n    let section = 0;\n    let foundIndex = false;\n    while (section <= targetSection) {\n      const rows = Math.ceil(sections[section] / this.numColumns);\n      if (rows === 0) {\n        section += 1;\n        continue;\n      }\n      scrollTop += this.getSectionHeaderHeight(section);\n      if (this.uniform) {\n        const uniformHeight = this.getItemHeight(section);\n        if (section === targetSection) {\n          scrollTop += uniformHeight * Math.ceil(targetIndex / this.numColumns);\n          foundIndex = true;\n        } else {\n          scrollTop += uniformHeight * rows;\n        }\n      } else {\n        for (let index = 0; index < rows; index++) {\n          if (\n            section < targetSection ||\n            (section === targetSection && index < targetIndex)\n          ) {\n            scrollTop += this.getItemHeight(\n              section,\n              Math.ceil(index / this.numColumns),\n            );\n          } else if (section === targetSection && index === targetIndex) {\n            foundIndex = true;\n            break;\n          }\n        }\n      }\n      if (!foundIndex) {\n        scrollTop += this.getSectionFooterHeight(section);\n      }\n      section += 1;\n    }\n    this.scrollView.scrollTo({\n      x: 0,\n      y: Math.max(0, scrollTop - this.getSectionHeaderHeight(targetSection)),\n      animated,\n    });\n    return true;\n  }\n}\n","import React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated } from \"react-native\";\n\n/**\n * List section.\n * @param {number} position\n * @param {number} height\n * @param {number} nextSectionPosition\n * @param {Animated.Value} scrollTopValue\n * @param {React.node} children\n * @returns {JSX.Element}\n * @constructor\n */\nconst BigListSection = ({\n  position,\n  height,\n  nextSectionPosition,\n  scrollTopValue,\n  children,\n}) => {\n  const inputRange = [-1, 0];\n  const outputRange = [0, 0];\n  inputRange.push(position);\n  outputRange.push(0);\n  const collisionPoint = (nextSectionPosition || 0) - height;\n  if (collisionPoint >= position) {\n    inputRange.push(collisionPoint, collisionPoint + 1);\n    outputRange.push(collisionPoint - position, collisionPoint - position);\n  } else {\n    inputRange.push(position + 1);\n    outputRange.push(1);\n  }\n  const translateY = scrollTopValue.interpolate({\n    inputRange,\n    outputRange,\n  });\n  const child = React.Children.only(children);\n  const fillChildren =\n    React.isValidElement(child) &&\n    React.cloneElement(child, {\n      style: { flex: 1 },\n    });\n  const viewStyle = [\n    React.isValidElement(child) && child.props.style\n      ? child.props.style\n      : undefined,\n    {\n      zIndex: 10,\n      height: height,\n      width: \"100%\",\n      transform: [{ translateY }],\n    },\n  ];\n  return <Animated.View style={viewStyle}>{fillChildren}</Animated.View>;\n};\n\nBigListSection.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  height: PropTypes.number,\n  nextSectionPosition: PropTypes.number,\n  position: PropTypes.number,\n  scrollTopValue: PropTypes.instanceOf(Animated.Value),\n};\n\nexport default memo(BigListSection);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Animated,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  View,\n} from \"react-native\";\n\nimport BigListItem, { BigListItemType } from \"./BigListItem\";\nimport BigListPlaceholder from \"./BigListPlaceholder\";\nimport BigListProcessor from \"./BigListProcessor\";\nimport BigListSection from \"./BigListSection\";\nimport { autobind, createElement, mergeViewStyle, processBlock } from \"./utils\";\n\nclass BigList extends PureComponent {\n  /**\n   * Constructor.\n   * @param props\n   */\n  constructor(props) {\n    super(props);\n    autobind(this);\n    // Initialize properties and state\n    this.containerHeight = 0;\n    this.scrollTop = 0;\n    this.scrollTopValue =\n      this.props.initialScrollIndex || new Animated.Value(0);\n    this.scrollView = React.createRef();\n    this.state = this.getListState();\n    this.viewableItems = [];\n  }\n\n  /**\n   * Get list state.\n   * @param {array} data\n   * @param {array[]|object|null|undefined} sections\n   * @param {array} prevItems\n   * @param {number|null} batchSizeThreshold\n   * @param {number|function|null|undefined} headerHeight\n   * @param {number|function|null|undefined} footerHeight\n   * @param {number|function|null|undefined} sectionHeaderHeight\n   * @param {number|function|null|undefined} itemHeight\n   * @param {number|function|null|undefined} sectionFooterHeight\n   * @param {number|null|undefined} insetTop\n   * @param {number|null|undefined} insetBottom\n   * @param {number|null|undefined} numColumns\n   * @param {number|null|undefined} batchSize\n   * @param {number|null|undefined} blockStart\n   * @param {number|null|undefined} blockEnd\n   * @param {function|null|undefined} getItemLayout\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: [], height: *}|{blockStart, batchSize, blockEnd, items: [], height: *}}\n   */\n  static getListState(\n    {\n      data,\n      sections,\n      batchSizeThreshold,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      itemHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n      getItemLayout,\n    },\n    { batchSize, blockStart, blockEnd, items: prevItems },\n  ) {\n    if (batchSize === 0) {\n      return {\n        batchSize,\n        blockStart,\n        blockEnd,\n        height: insetTop + insetBottom,\n        items: [],\n      };\n    }\n    const self = BigList;\n    const layoutItemHeight = self.getItemHeight(itemHeight, getItemLayout);\n    const sectionLengths = self.getSectionLengths(sections, data);\n    const processor = new BigListProcessor({\n      sections: sectionLengths,\n      itemHeight: layoutItemHeight,\n      headerHeight,\n      footerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      numColumns,\n    });\n    return {\n      ...{\n        batchSize,\n        blockStart,\n        blockEnd,\n      },\n      ...processor.process(\n        blockStart - batchSize,\n        blockEnd + batchSize,\n        prevItems || [],\n      ),\n    };\n  }\n\n  /**\n   * Get list state\n   * @param {object} props\n   * @param {object} options.\n   * @return {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  getListState(props, options) {\n    const stateProps = props || this.props;\n    return this.constructor.getListState(\n      stateProps,\n      options ||\n        processBlock({\n          containerHeight: this.containerHeight,\n          scrollTop: this.scrollTop,\n          batchSizeThreshold: stateProps.batchSizeThreshold,\n        }),\n    );\n  }\n\n  /**\n   * Get sections item lengths.\n   * @param {array[]|object<string, object>|null|undefined} sections\n   * @param {array} data\n   * @returns {int[]}\n   */\n  static getSectionLengths(sections = null, data = null) {\n    if (sections !== null) {\n      return sections.map((section) => {\n        return section.length;\n      });\n    }\n    return [data?.length];\n  }\n\n  /**\n   * Get sections item lengths.\n   * @returns {int[]}\n   */\n  getSectionLengths() {\n    const { sections, data } = this.props;\n    return this.constructor.getSectionLengths(sections, data);\n  }\n\n  /**\n   * Get item height.\n   * @param {number} itemHeight\n   * @param {function|null|undefined} getItemLayout\n   * @return {null|*}\n   */\n  static getItemHeight(itemHeight, getItemLayout) {\n    if (getItemLayout) {\n      const itemLayout = getItemLayout([], 0);\n      return itemLayout.length;\n    }\n    if (itemHeight) {\n      return itemHeight;\n    }\n    return null;\n  }\n\n  /**\n   * Get item height.\n   * @return {null|*}\n   */\n  getItemHeight() {\n    const { itemHeight, getItemLayout } = this.props;\n    return this.constructor.getItemHeight(itemHeight, getItemLayout);\n  }\n\n  /**\n   * Is item visible.\n   * @param {int} index\n   * @param {int} section\n   * @returns {boolean}\n   */\n  isVisible({ index, section = 0 }) {\n    const position = this.getItemOffset({ index, section });\n    return (\n      position >= this.scrollTop &&\n      position <= this.scrollTop + this.containerHeight\n    );\n  }\n\n  /**\n   * Provides a reference to the underlying scroll component.\n   * @returns {ScrollView|null}\n   */\n  getNativeScrollRef() {\n    return this.scrollView.current;\n  }\n\n  /**\n   * Get list processor,\n   * @returns {BigListProcessor}\n   */\n  getListProcessor() {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      const {\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        insetTop,\n        insetBottom,\n      } = this.props;\n      const itemHeight = this.getItemHeight();\n      const sectionLengths = this.getSectionLengths();\n      return new BigListProcessor({\n        sections: sectionLengths,\n        headerHeight,\n        footerHeight,\n        sectionHeaderHeight,\n        sectionFooterHeight,\n        itemHeight,\n        insetTop,\n        insetBottom,\n        scrollView,\n      });\n    }\n    return null;\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  flashScrollIndicators() {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      scrollView.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Scrolls to a given x, y offset, either immediately, with a smooth animation.\n   * @param {int} x\n   * @param {int} y\n   * @param {bool} animated\n   */\n  scrollTo({ x = 0, y = 0, animated = true }) {\n    const scrollView = this.getNativeScrollRef();\n    if (scrollView != null) {\n      scrollView.scrollTo({\n        x: x,\n        y: y,\n        animated,\n      });\n    }\n  }\n\n  /**\n   * Scroll to index.\n   * @param {int} index\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToIndex({ index, section = 0, animated = true }) {\n    const processor = this.getListProcessor();\n    if (processor != null && index != null && section != null) {\n      return processor.scrollToPosition(section, index, animated);\n    }\n    return false;\n  }\n\n  /**\n   * Alias to scrollToIndex with polyfill for SectionList.\n   * @see scrollToIndex\n   * @param {int} itemIndex\n   * @param {int} sectionIndex\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToLocation({ itemIndex, sectionIndex, animated = true }) {\n    return this.scrollToIndex({\n      section: sectionIndex,\n      index: itemIndex,\n      animated,\n    });\n  }\n\n  /**\n   * Scroll to item.\n   * @param {object} item\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToItem({ item, animated = false }) {\n    let index;\n    if (this.hasSections()) {\n      const coords = JSON.stringify(\n        this.map((a) => {\n          return a[0] + \"|\" + a[1];\n        }),\n      );\n      index = coords.indexOf(item[0] + \"|\" + item[1]) !== -1;\n    } else {\n      index = this.props.data.indexOf(item);\n    }\n    return this.scrollTo({ index, animated });\n  }\n\n  /**\n   * Scroll to offset.\n   * @param {number} offset\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToOffset({ offset, animated = false }) {\n    const scrollRef = this.getNativeScrollRef();\n    if (scrollRef != null) {\n      scrollRef.scrollTo({\n        x: 0,\n        y: offset,\n        animated,\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Scroll to top.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToTop({ animated = true }) {\n    return this.scrollTo({ section: 0, index: 0, animated });\n  }\n\n  /**\n   * Scroll to end.\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToEnd({ animated = true }) {\n    const { data } = this.props;\n    let section = 0;\n    let index = 0;\n    if (this.hasSections()) {\n      const sectionLengths = this.getSectionLengths();\n      section = sectionLengths[sectionLengths.length - 1];\n    } else {\n      index = data.length;\n    }\n    return this.scrollTo({ section, index, animated });\n  }\n\n  /**\n   * Scroll to section.\n   * @param {int} section\n   * @param {bool} animated\n   * @returns {bool}\n   */\n  scrollToSection({ section, animated = true }) {\n    return this.scrollTo({ index: 0, section, animated });\n  }\n\n  /**\n   * On viewable items changed.\n   */\n  onViewableItemsChanged() {\n    const { onViewableItemsChanged } = this.props;\n    if (onViewableItemsChanged) {\n      const prevItems = this.viewableItems;\n      const currentItems = this.state.items\n        .map(({ type, section, index, key }) => {\n          if (type === BigListItemType.ITEM) {\n            return {\n              item: this.getItem({ section, index }),\n              key: key,\n              index: (section + 1) * index,\n              isViewable: this.isVisible({ section, index }),\n            };\n          }\n          return false;\n        })\n        .filter(Boolean);\n      this.viewableItems = currentItems.filter((item) => item.isViewable);\n      const changed = prevItems\n        .filter(\n          ({ index: prevIndex }) =>\n            !this.viewableItems.some(\n              ({ index: nextIndex }) => nextIndex === prevIndex,\n            ),\n        )\n        .map((item) => {\n          item.isViewable = this.isVisible({\n            section: item.section,\n            index: item.index,\n          });\n          return item;\n        });\n      if (changed.length > 0) {\n        onViewableItemsChanged({ viewableItems: this.viewableItems, changed });\n      }\n    }\n  }\n\n  /**\n   * Handle scroll.\n   * @param event\n   */\n  onScroll(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold, onViewableItemsChanged } =\n      this.props;\n    this.containerHeight =\n      nativeEvent.layoutMeasurement.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    this.scrollTop = Math.min(\n      Math.max(0, nativeEvent.contentOffset.y),\n      nativeEvent.contentSize.height - this.containerHeight,\n    );\n\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n\n    if (onViewableItemsChanged) {\n      this.onViewableItemsChanged();\n    }\n\n    const { onScroll, onEndReached, onEndReachedThreshold } = this.props;\n    if (onScroll != null) {\n      onScroll(event);\n    }\n    const { layoutMeasurement, contentOffset, contentSize } = nativeEvent;\n    const distanceFromEnd =\n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n    if (distanceFromEnd <= layoutMeasurement.height * onEndReachedThreshold) {\n      if (!this.endReached) {\n        this.endReached = true;\n        onEndReached && onEndReached({ distanceFromEnd });\n      }\n    } else {\n      this.endReached = false;\n    }\n  }\n\n  /**\n   * Handle layout.\n   * @param event\n   */\n  onLayout(event) {\n    const { nativeEvent } = event;\n    const { contentInset, batchSizeThreshold } = this.props;\n    this.containerHeight =\n      nativeEvent.layout.height -\n      (contentInset.top || 0) -\n      (contentInset.bottom || 0);\n    const nextState = processBlock({\n      containerHeight: this.containerHeight,\n      scrollTop: this.scrollTop,\n      batchSizeThreshold,\n    });\n    if (\n      nextState.batchSize !== this.state.batchSize ||\n      nextState.blockStart !== this.state.blockStart ||\n      nextState.blockEnd !== this.state.blockEnd\n    ) {\n      this.setState(nextState);\n    }\n    const { onLayout } = this.props;\n    if (onLayout != null) {\n      onLayout(event);\n    }\n  }\n\n  /**\n   * Handle scroll end.\n   * @param event\n   */\n  onScrollEnd(event) {\n    const { renderAccessory, onScrollEnd } = this.props;\n    if (renderAccessory != null) {\n      this.forceUpdate();\n    }\n    if (onScrollEnd) {\n      onScrollEnd(event);\n    }\n  }\n\n  /**\n   * Is empty\n   * @returns {boolean}\n   */\n  isEmpty() {\n    const sectionLengths = this.getSectionLengths();\n    const length = sectionLengths.reduce((total, sectionLength) => {\n      return total + sectionLength;\n    }, 0);\n    return length === 0;\n  }\n\n  /**\n   * Get derived state.\n   * @param props\n   * @param state\n   * @returns {{blockStart: *, batchSize: *, blockEnd: *, items: *[], height: *}|{blockStart, batchSize, blockEnd, items: *[], height: *}}\n   */\n  static getDerivedStateFromProps(props, state) {\n    return BigList.getListState(props, state);\n  }\n\n  /**\n   * Has sections.\n   * @returns {boolean}\n   */\n  hasSections() {\n    return this.props.sections !== null;\n  }\n\n  /**\n   * Get item scroll view offset.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItemOffset({ section = 0, index }) {\n    const {\n      insetTop,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      itemHeight,\n      numColumns,\n    } = this.props;\n    const headers = this.hasSections() ? section + 1 : 1;\n\n    const roundedIndex =\n      index % numColumns ? index - (index % numColumns) + numColumns : index;\n\n    return (\n      insetTop +\n      headerHeight +\n      headers * sectionHeaderHeight +\n      section * sectionFooterHeight +\n      roundedIndex * itemHeight\n    );\n  }\n\n  /**\n   * Get item data.\n   * @param {int} section\n   * @param {int} index\n   * @returns {*}\n   */\n  getItem({ index, section = 0 }) {\n    if (this.hasSections()) {\n      return this.props.sections[section][index];\n    } else {\n      return this.props.data[index];\n    }\n  }\n\n  /**\n   * Get items data.\n   * @returns {*}\n   */\n  getItems() {\n    return this.hasSections() ? this.props.sections : this.props.data;\n  }\n\n  /**\n   * Render all list items.\n   * @returns {[]|*}\n   */\n  renderItems() {\n    const {\n      numColumns,\n      columnWrapperStyle,\n      placeholder,\n      placeholderComponent,\n      placeholderImage,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderEmpty,\n    } = this.props;\n    const { items = [] } = this.state;\n    if (this.isEmpty()) {\n      if (ListEmptyComponent != null) {\n        return createElement(ListHeaderComponent);\n      }\n      if (renderEmpty != null) {\n        return renderEmpty();\n      }\n    }\n    const sectionPositions = [];\n    items.forEach(({ type, position }) => {\n      if (type === BigListItemType.SECTION_HEADER) {\n        sectionPositions.push(position);\n      }\n    });\n    const children = [];\n    items.forEach(({ type, key, position, height, section, index }) => {\n      let child;\n      let style;\n      const itemKey = key || position; // Fallback fix\n      switch (type) {\n        case BigListItemType.HEADER:\n          if (ListHeaderComponent != null) {\n            child = createElement(ListHeaderComponent);\n            style = mergeViewStyle({ width: \"100%\" }, ListHeaderComponentStyle);\n          } else {\n            child = renderHeader();\n            style = { width: \"100%\" };\n          }\n        // falls through\n        case BigListItemType.FOOTER:\n          if (type === BigListItemType.FOOTER) {\n            if (ListFooterComponent != null) {\n              child = createElement(ListFooterComponent);\n              style = mergeViewStyle(\n                { width: \"100%\" },\n                ListFooterComponentStyle,\n              );\n            } else {\n              child = renderFooter();\n              style = { width: \"100%\" };\n            }\n          }\n        // falls through\n        case BigListItemType.SECTION_FOOTER:\n          if (type === BigListItemType.SECTION_FOOTER) {\n            child = renderSectionFooter(section);\n            style = { width: \"100%\" };\n          }\n        // falls through\n        case BigListItemType.ITEM:\n          if (type === BigListItemType.ITEM) {\n            const item = this.getItem({ section, index });\n            style = numColumns > 1 ? columnWrapperStyle || {} : {};\n            if (this.hasSections()) {\n              child = renderItem({ item, section, index });\n            } else {\n              child = renderItem({ item, index });\n            }\n          }\n          if (child != null) {\n            children.push(\n              <BigListItem\n                key={itemKey}\n                height={height}\n                width={100 / numColumns + \"%\"}\n                style={style}\n              >\n                {child}\n              </BigListItem>,\n            );\n          }\n          break;\n        case BigListItemType.SPACER:\n        case BigListItemType.SPACER_BOTTOM:\n          children.push(\n            placeholder ? (\n              <BigListPlaceholder\n                key={itemKey}\n                height={height}\n                image={placeholderImage}\n                component={placeholderComponent}\n              />\n            ) : (\n              <BigListItem key={itemKey} height={height} />\n            ),\n          );\n          break;\n        case BigListItemType.SECTION_HEADER:\n          sectionPositions.shift();\n          child = renderSectionHeader(section);\n          if (child != null) {\n            children.push(\n              <BigListSection\n                key={itemKey}\n                height={height}\n                position={position}\n                nextSectionPosition={sectionPositions[0]}\n                scrollTopValue={this.scrollTopValue}\n              >\n                {child}\n              </BigListSection>,\n            );\n          }\n          break;\n      }\n    });\n    return children;\n  }\n\n  /**\n   * Component did mount.\n   */\n  componentDidMount() {\n    const { stickySectionHeadersEnabled } = this.props;\n    const scrollView = this.getNativeScrollRef();\n    if (\n      stickySectionHeadersEnabled &&\n      scrollView != null &&\n      Platform.OS !== \"web\"\n    ) {\n      // Disabled on web\n      this.scrollTopValueAttachment = Animated.attachNativeEvent(\n        scrollView,\n        \"onScroll\",\n        [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n      );\n    }\n  }\n\n  /**\n   * Component did update.\n   * @param prevProps\n   */\n  componentDidUpdate(prevProps) {\n    if (prevProps.initialScrollIndex !== this.props.initialScrollIndex) {\n      throw new Error(\"scrollTopValue cannot changed after mounting\");\n    }\n  }\n\n  /**\n   * Component will unmount.\n   */\n  componentWillUnmount() {\n    if (this.scrollTopValueAttachment != null) {\n      this.scrollTopValueAttachment.detach();\n    }\n  }\n\n  /**\n   * Render.\n   * @returns {JSX.Element}\n   */\n  render() {\n    // Reduce list properties\n    const {\n      data,\n      placeholder,\n      placeholderImage,\n      placeholderComponent,\n      sections,\n      initialScrollIndex,\n      columnWrapperStyle,\n      renderHeader,\n      renderFooter,\n      renderSectionHeader,\n      renderItem,\n      renderSectionFooter,\n      renderScrollViewWrapper,\n      renderEmpty,\n      renderAccessory,\n      itemHeight,\n      footerHeight,\n      headerHeight,\n      sectionHeaderHeight,\n      sectionFooterHeight,\n      insetTop,\n      insetBottom,\n      actionSheetScrollRef,\n      stickySectionHeadersEnabled,\n      onEndReached,\n      onEndReachedThreshold,\n      onRefresh,\n      refreshing,\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListFooterComponentStyle,\n      ListHeaderComponent,\n      ListHeaderComponentStyle,\n      ...props\n    } = this.props;\n\n    const wrapper = renderScrollViewWrapper || ((val) => val);\n    const handleScroll =\n      stickySectionHeadersEnabled && Platform.OS === \"web\"\n        ? Animated.event(\n            [{ nativeEvent: { contentOffset: { y: this.scrollTopValue } } }],\n            {\n              listener: (event) => this.onScroll(event),\n              useNativeDriver: false,\n            },\n          )\n        : this.onScroll;\n\n    const defaultProps = {\n      refreshControl:\n        onRefresh && !this.props.refreshControl ? (\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        ) : null,\n      contentContainerStyle: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n        maxWidth: \"100%\",\n      },\n    };\n\n    const overwriteProps = {\n      ref: (ref) => {\n        this.scrollView.current = ref;\n        if (actionSheetScrollRef) {\n          actionSheetScrollRef.current = ref;\n        }\n      },\n      onScroll: handleScroll,\n      onLayout: this.onLayout,\n      onMomentumScrollEnd: this.onScrollEnd,\n      onScrollEndDrag: this.onScrollEnd,\n    };\n\n    const scrollViewProps = {\n      ...defaultProps,\n      ...props,\n      ...overwriteProps,\n    };\n\n    // Content container style merge\n    scrollViewProps.contentContainerStyle = mergeViewStyle(\n      props.contentContainerStyle,\n      defaultProps.contentContainerStyle,\n    );\n\n    const scrollView = wrapper(\n      <ScrollView {...scrollViewProps}>{this.renderItems()}</ScrollView>,\n    );\n    return (\n      <View\n        style={{\n          flex: 1,\n          maxHeight: Platform.select({ web: \"100vh\", default: \"100%\" }),\n        }}\n      >\n        {scrollView}\n        {renderAccessory != null ? renderAccessory(this) : null}\n      </View>\n    );\n  }\n}\n\nBigList.propTypes = {\n  actionSheetScrollRef: PropTypes.any,\n  batchSizeThreshold: PropTypes.number,\n  bottom: PropTypes.number,\n  numColumns: PropTypes.number,\n  columnWrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  contentInset: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number,\n  }),\n  data: PropTypes.array,\n  placeholder: PropTypes.bool,\n  placeholderImage: PropTypes.any,\n  placeholderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  footerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  getItemLayout: PropTypes.func,\n  headerHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  insetBottom: PropTypes.number,\n  insetTop: PropTypes.number,\n  itemHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  keyboardDismissMode: PropTypes.string,\n  keyboardShouldPersistTaps: PropTypes.string,\n  ListEmptyComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListFooterComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  ListHeaderComponent: PropTypes.oneOfType([\n    PropTypes.elementType,\n    PropTypes.element,\n    PropTypes.node,\n  ]),\n  ListHeaderComponentStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onLayout: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onScroll: PropTypes.func,\n  onScrollEnd: PropTypes.func,\n  onViewableItemsChanged: PropTypes.func,\n  removeClippedSubviews: PropTypes.bool,\n  renderAccessory: PropTypes.func,\n  renderScrollViewWrapper: PropTypes.func,\n  renderEmpty: PropTypes.func,\n  renderFooter: PropTypes.func,\n  renderHeader: PropTypes.func,\n  renderItem: PropTypes.func.isRequired,\n  renderSectionHeader: PropTypes.func,\n  renderSectionFooter: PropTypes.func,\n  refreshing: PropTypes.bool,\n  scrollEventThrottle: PropTypes.number,\n  initialScrollIndex: PropTypes.number,\n  sectionFooterHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sectionHeaderHeight: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.func,\n  ]),\n  sections: PropTypes.array,\n  stickySectionHeadersEnabled: PropTypes.bool,\n};\n\nBigList.defaultProps = {\n  // Data\n  data: [],\n  sections: null,\n  refreshing: false,\n  batchSizeThreshold: 1,\n  numColumns: 1,\n  placeholder: Platform.select({\n    web: false,\n    default: false /* TODO: default disabled until a solution for different screen sizes is found */,\n  }),\n  // Renders\n  renderItem: () => null,\n  renderHeader: () => null,\n  renderFooter: () => null,\n  renderSectionHeader: () => null,\n  renderSectionFooter: () => null,\n  // Height\n  itemHeight: 50,\n  headerHeight: 0,\n  footerHeight: 0,\n  sectionHeaderHeight: 0,\n  sectionFooterHeight: 0,\n  // Scroll\n  stickySectionHeadersEnabled: true,\n  removeClippedSubviews: false,\n  scrollEventThrottle: Platform.OS === \"web\" ? 5 : 16,\n  // Keyboard\n  keyboardShouldPersistTaps: \"always\",\n  keyboardDismissMode: \"interactive\",\n  // Insets\n  insetTop: 0,\n  insetBottom: 0,\n  contentInset: { top: 0, right: 0, left: 0, bottom: 0 },\n  onEndReachedThreshold: 0,\n};\n\nexport default BigList;\n","import BigList from \"./BigList\";\n\nexport default BigList;\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\nconst Block = (props) => {\n  return <View {...props} style={styles.block} />;\n};\n\nconst styles = StyleSheet.create({\n  block: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 10,\n  },\n});\n\nexport default Block;\n","import React, { useState } from \"react\";\nimport {\n  KeyboardAvoidingView,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading, TextInput } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const [numberColumns, setNumberColumns] = useState(3);\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <View>\n      <TextInput\n        label=\"Number of columns (max 10)\"\n        value={String(numberColumns)}\n        type=\"numeric\"\n        keyboardType=\"numeric\"\n        onChangeText={(value) => {\n          const num = parseInt(value, 10) || \"\";\n          setNumberColumns(num);\n        }}\n      />\n    </View>\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          data={data}\n          numColumns={Math.min(\n            Math.max(parseInt(numberColumns, 10) || 1, 1),\n            10,\n          )}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","/* eslint-disable no-shadow */\nimport React from \"react\";\nimport {\n  FlatList,\n  KeyboardAvoidingView,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst ITEM_HEIGHT = 50;\n\nexport default function CompareList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.id + \" - \" + item.title}\n        description={item.description}\n        style={styles.item}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n\n  const renderBigHeader = () => (\n    <List.Item title=\"BigList\" description=\"../../lib\" style={styles.header} />\n  );\n  const renderFlatHeader = () => (\n    <List.Item\n      title=\"FlatList\"\n      description=\"react-native\"\n      style={styles.header}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <View style={styles.compare}>\n          <BigList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })}\n            ListHeaderComponent={renderBigHeader}\n            ListFooterComponent={renderFooter}\n            ListEmptyComponent={renderEmpty}\n            headerHeight={100} // Default 0, need to specify the header height\n            footerHeight={100} // Default 0, need to specify the footer  height\n          />\n          <FlatList\n            style={[\n              styles.container,\n              Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n            ]}\n            data={data}\n            renderItem={renderItem}\n            getItemLayout={(data, index) => ({\n              length: ITEM_HEIGHT,\n              offset: ITEM_HEIGHT * index,\n              index,\n            })} // Replaceable with `itemHeight={ITEM_HEIGHT}`\n            ListHeaderComponent={renderFlatHeader} // Replaceable with `renderHeader`\n            ListFooterComponent={renderFooter} // Replaceable with `renderFooter`\n            ListEmptyComponent={renderEmpty} // Replaceable with `renderEmpty`\n            keyExtractor={(item) => String(item.id)} // Removable\n          />\n        </View>\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  compare: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  item: {\n    flex: 1,\n    maxHeight: ITEM_HEIGHT,\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport data from \"../data/data.json\";\nimport Block from \"./components/Block\";\n\nconst RenderHeader = () => {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoaded(true);\n    }, 2000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  if (!loaded) {\n    return (\n      <List.Item\n        title=\"Loading\"\n        description=\"Loading\"\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  }\n\n  return (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n};\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => <RenderHeader />;\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          data={data}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import React from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport { Appbar, List, Subheading } from \"react-native-paper\";\nimport { StatusBar } from \"expo-status-bar\";\n\nimport BigList from \"../../lib\";\nimport sections from \"../data/sections.json\";\nimport Block from \"./components/Block\";\n\nexport default function SectionList() {\n  const renderItem = ({ item }) => {\n    return (\n      <List.Item\n        title={item.title}\n        description={item.description}\n        style={styles.container}\n        left={(props) => <List.Icon {...props} icon=\"account\" />}\n      />\n    );\n  };\n  const renderEmpty = () => <List.Item title=\"No items\" />;\n  const renderHeader = () => (\n    <List.Item\n      title=\"Marco Cesarato\"\n      description=\"cesarato.developer@gmail.com\"\n      style={styles.container}\n      left={(props) => <List.Icon {...props} icon=\"account\" />}\n    />\n  );\n  const renderFooter = () => (\n    <Block>\n      <Subheading>No more items available...</Subheading>\n    </Block>\n  );\n  const renderSectionHeader = (section) => (\n    <Appbar style={styles.header}>\n      <Appbar.Content\n        style={styles.headerContent}\n        title={\"Section \" + (section + 1)}\n        subtitle=\"Below are listed all section items\"\n      />\n    </Appbar>\n  );\n  const renderSectionFooter = (section) => (\n    <Block>\n      <Subheading>Footer Section {section}</Subheading>\n    </Block>\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList\n          style={styles.container}\n          sections={sections}\n          // Item\n          itemHeight={90}\n          renderItem={renderItem}\n          renderEmpty={renderEmpty}\n          // Header\n          headerHeight={90}\n          renderHeader={renderHeader}\n          // Footer\n          footerHeight={100}\n          renderFooter={renderFooter}\n          // Section\n          sectionHeaderHeight={75}\n          renderSectionHeader={renderSectionHeader}\n          // Section footer\n          sectionFooterHeight={60}\n          renderSectionFooter={renderSectionFooter}\n        />\n        <StatusBar style=\"auto\" />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: { elevation: 0, height: 50 },\n  headerContent: { alignItems: \"center\", height: 50, justifyContent: \"center\" },\n});\n","import React, { useState } from \"react\";\nimport { KeyboardAvoidingView, SafeAreaView, StyleSheet } from \"react-native\";\nimport BigList from \"react-native-big-list\";\nimport { Checkbox } from \"react-native-paper\";\n\nimport data from \"../data/data.json\";\n\nconst SelectList = () => {\n  const [selected, setSelected] = useState();\n  const renderItem = ({ item }) => {\n    return (\n      <Checkbox.Item\n        key={item.id}\n        mode=\"ios\"\n        label={item.title}\n        status={selected === item.id ? \"checked\" : \"unchecked\"}\n        onPress={() => setSelected(item.id)}\n      />\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView style={styles.container}>\n        <BigList data={data} renderItem={renderItem} rowHeight={50} />\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport default SelectList;\n","import React, { useState } from \"react\";\nimport { Platform, StyleSheet, View } from \"react-native\";\nimport {\n  Appbar,\n  Paragraph,\n  RadioButton,\n  TouchableRipple,\n  useTheme,\n} from \"react-native-paper\";\n\nimport ColumnsList from \"./lists/ColumnsList\";\nimport CompareList from \"./lists/CompareList\";\nimport List from \"./lists/List\";\nimport SectionList from \"./lists/SectionList\";\nimport SelectList from \"./lists/SelectList\";\n\nconst Home = () => {\n  const {\n    colors: { background, surface },\n  } = useTheme();\n  const [checked, setChecked] = useState(\"standard\");\n  const [insetBottom, setInsetBottom] = useState(0);\n  return (\n    <View\n      style={[\n        styles.container,\n        {\n          backgroundColor: background,\n          paddingBottom: insetBottom + 255,\n        },\n      ]}\n    >\n      <Appbar.Header style={[styles.header, { height: 75 }]}>\n        <Appbar.Content title=\"BigList Example\" subtitle=\"10.000 items\" />\n      </Appbar.Header>\n      <View\n        style={[styles.containerBottom, { backgroundColor: surface }]}\n        onLayout={(event) => {\n          setInsetBottom(event.height || 0);\n        }}\n      >\n        <RadioButton.Group\n          onValueChange={(newValue) => setChecked(newValue)}\n          value={checked}\n        >\n          <TouchableRipple onPress={() => setChecked(\"standard\")}>\n            <View style={styles.row}>\n              <Paragraph>Standard List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"standard\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"columns\")}>\n            <View style={styles.row}>\n              <Paragraph>Columns List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"columns\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"section\")}>\n            <View style={styles.row}>\n              <Paragraph>Section List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"section\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"select\")}>\n            <View style={styles.row}>\n              <Paragraph>Select List</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"select\" />\n              </View>\n            </View>\n          </TouchableRipple>\n          <TouchableRipple onPress={() => setChecked(\"compare\")}>\n            <View style={styles.row}>\n              <Paragraph>Compare with FlatList</Paragraph>\n              <View pointerEvents=\"none\">\n                <RadioButton.Android value=\"compare\" />\n              </View>\n            </View>\n          </TouchableRipple>\n        </RadioButton.Group>\n      </View>\n      {checked === \"standard\" ? (\n        <List />\n      ) : checked === \"columns\" ? (\n        <ColumnsList />\n      ) : checked === \"section\" ? (\n        <SectionList />\n      ) : checked === \"select\" ? (\n        <SelectList />\n      ) : checked === \"compare\" ? (\n        <CompareList />\n      ) : null}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: \"relative\",\n    ...Platform.select({ web: { maxHeight: \"100vh\" }, default: {} }),\n  },\n  containerBottom: {\n    bottom: 0,\n    elevation: 999,\n    left: 0,\n    position: \"absolute\",\n    width: \"100%\",\n    zIndex: 999,\n  },\n  header: {\n    elevation: 0,\n    marginBottom: Platform.select({ web: 0, default: -5 }),\n  },\n  row: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n});\n\nexport default Home;\n","import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\n\nimport Home from \"./src/Home\";\n\nexport default function App() {\n  return (\n    <PaperProvider>\n      <Home />\n    </PaperProvider>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/placeholder.b393bdf6.png\";"],"sourceRoot":""}